{"version":3,"file":"component---src-pages-candlestick-js-b54eba30bec3a795c452.js","mappings":"4MAOA,MAAMA,EAAU,CACd,iBACA,yBACA,wBAKa,SAASC,EAAUC,GAAwB,IAAvB,QAAEC,EAAO,QAAEC,GAASF,EACrD,GAAIF,EAAQK,SAASF,GACnB,OAAOG,EAAAA,cAAA,SAAG,QAGZ,MAgBMC,GAhBOC,EAAAA,EAAAA,gBAAe,cAgBTC,QAAQC,MAAMC,MAAMC,GAC9BA,EAAEC,KAAKC,KAAKT,SAASF,KAG9B,OAAKI,EAMHD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKS,UAAU,uBACbT,EAAAA,cAACU,EAAAA,EAAW,CACVT,MAAOA,EAAMM,KAAKI,gBAAgBC,gBAClCC,IAAKf,EACLW,UAAU,kBAEXX,GACCE,EAAAA,cAAA,OAAKS,UAAU,qBACbT,EAAAA,cAAA,OAAKS,UAAU,yBACbT,EAAAA,cAAA,SAAIF,OAfP,IAsBX,C,mGCzDe,SAASgB,EAAmBlB,GAAgC,IAA/B,QAAEC,EAAO,QAAEC,EAAO,OAAEiB,GAAQnB,EACtE,OACEI,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAIL,GACRf,EAAAA,cAACL,EAAAA,EAAU,CAACE,QAASA,EAASC,QAASA,KAI/C,C,oECJO,MAAMuB,EAAMzB,IAAiD,IAAhD,MAAE0B,EAAK,eAAEC,EAAc,SAAEC,EAAQ,MAAEvB,GAAOL,EAC5D,OACEI,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQsB,GACRtB,EAAAA,cAAA,QAAMyB,KAAK,OACXzB,EAAAA,cAAA,QACEQ,KAAK,cACLkB,QAASH,GAAkB,qCAE7BvB,EAAAA,cAAA,QAAMQ,KAAK,SAASkB,QAAQ,cAC5B1B,EAAAA,cAAA,QACEQ,KAAK,WACLkB,QAASF,GAAY,6CAGvBxB,EAAAA,cAAA,QAAM2B,SAAS,eAAeD,QAAQ,6BACtC1B,EAAAA,cAAA,QAAM2B,SAAS,WAAWD,QAASJ,IACnCtB,EAAAA,cAAA,QACE2B,SAAS,WACTD,QACEzB,GACA,oGAGJD,EAAAA,cAAA,QAAM2B,SAAS,iBAAiBD,QAASH,IACzCvB,EAAAA,cAAA,QAAMQ,KAAK,eAAekB,QAAQ,wBAClC1B,EAAAA,cAAA,QAAMQ,KAAK,eAAekB,QAAQ,qBACjC,C,gQCrBP,MAAME,EACJ5B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,SAAG,IACC,IACFA,EAAAA,cAAA,KAAG6B,KAAK,mDAAkD,qBAErD,IAAI,iBACK7B,EAAAA,cAAA,SAAG,mBAAmB,6EAGtCA,EAAAA,cAAA,SAAG,oEACiE,IAClEA,EAAAA,cAAA,YAAM,cAAiB,8BAA4B,IACnDA,EAAAA,cAACmB,EAAAA,KAAI,CAACU,KAAK,eAAc,cAAiB,0BAAwB,IAClE7B,EAAAA,cAAA,SAAG,UAAU,cAAWA,EAAAA,cAACmB,EAAAA,KAAI,CAACU,KAAK,WAAU,UAAa,sCACvC7B,EAAAA,cAAA,SAAG,eAAe,wBAEvCA,EAAAA,cAAA,SAAG,sBACkBA,EAAAA,cAAA,SAAG,oBAAoB,2IAO1C8B,EAAY,oXAgBLC,EAAOA,IAClB/B,EAAAA,cAACqB,EAAAA,EAAG,CACFC,MAAM,cACNC,eAAe,yGAIJ,SAASS,IACtB,OACEhC,EAAAA,cAACiC,EAAAA,EAAM,CAACC,cAAY,GAClBlC,EAAAA,cAACmC,EAAAA,EAAmB,CAClBb,MAAM,cACNc,YAAaR,EACbS,UAAU,gBAGZrC,EAAAA,cAACsC,EAAAA,EAAS,KACRtC,EAAAA,cAAA,MAAIuC,GAAG,SAAQ,iBACfvC,EAAAA,cAACwC,EAAAA,EAAG,CAAC/B,UAAU,sBACbT,EAAAA,cAACgB,EAAAA,EAAG,CAACE,GAAI,GACPlB,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,cAAiB,qEAGzBA,EAAAA,cAAA,SAAG,6BACyBA,EAAAA,cAAA,YAAM,UAAa,uBAAqB,IAClEA,EAAAA,cAAA,YAAM,QAAW,gCAA6BA,EAAAA,cAAA,YAAM,UAAa,MAGrEA,EAAAA,cAACgB,EAAAA,EAAG,CAACE,GAAI,GACPlB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAI,sCACRpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAQ,oCACRC,QAAQ,4EAKhBE,EAAAA,cAACyC,EAAAA,EAAS,KAAEX,IAGd9B,EAAAA,cAAC0C,EAAAA,EAAO,MAER1C,EAAAA,cAACsC,EAAAA,EAAS,KACRtC,EAAAA,cAAA,MAAIuC,GAAG,cACLvC,EAAAA,cAAC2C,EAAAA,GAAU,MAAG,oBACG3C,EAAAA,cAAA,YAAM,eAEzBA,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,cAAiB,uGACoC,IAC3DA,EAAAA,cAAA,KAAG6B,KAAK,4CAA2C,0BAE9C,IAAI,2BAGX7B,EAAAA,cAAA,SAAG,2EAEGA,EAAAA,cAAA,YAAM,cAAiB,wBAAqBA,EAAAA,cAAA,YAAM,QAAY,IAAI,+BAC1CA,EAAAA,cAAA,YAAM,UAAa,KAEjDA,EAAAA,cAAA,SAAG,4EAIHA,EAAAA,cAACwC,EAAAA,EAAG,KACFxC,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oCACRC,QAAQ,iEACRiB,OAAO,uCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,uCACRC,QAAQ,mEACRiB,OAAO,4CAKbf,EAAAA,cAAC0C,EAAAA,EAAO,MAER1C,EAAAA,cAACsC,EAAAA,EAAS,KACRtC,EAAAA,cAAA,MAAIuC,GAAG,UACLvC,EAAAA,cAAC4C,EAAAA,GAAM,MAAG,oBACO5C,EAAAA,cAAA,YAAM,WAEzBA,EAAAA,cAAA,SACEA,EAAAA,cAACmB,EAAAA,KAAI,CAACU,KAAK,WAAU,UAAa,sCAAoC,IACtE7B,EAAAA,cAAA,SAAG,eAAe,+FAGpBA,EAAAA,cAAA,SAAG,8CAC0CA,EAAAA,cAAA,SAAG,QAAQ,mFAEtDA,EAAAA,cAAA,SAAG,YAAY,6DACN,KAEXA,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,mCACPpB,EAAAA,cAAC6C,EAAAA,EAAM,CAACC,KAAK,MAAK,aAEpB9C,EAAAA,cAAA,WACAA,EAAAA,cAAA,OAAKS,UAAU,WACbT,EAAAA,cAAA,UACE+C,IAAI,sDACJzB,MAAM,2CACN0B,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAASC,OAAQ,YAIrDnD,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,sEACmE,IACpEA,EAAAA,cAAA,YAAM,oBAAuB,iCAA+B,IAC5DA,EAAAA,cAAA,YAAM,OAAU,wCAAsC,IACtDA,EAAAA,cAAA,YAAM,UAAa,YAErBA,EAAAA,cAAA,SAAG,4EAIHA,EAAAA,cAACwC,EAAAA,EAAG,KACFxC,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gCACRC,QAAQ,8CACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,iCACRC,QAAQ,mDACRiB,OAAO,oCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,8CACRC,QAAQ,mEACRiB,OAAO,mDAKbf,EAAAA,cAAC0C,EAAAA,EAAO,MAER1C,EAAAA,cAAA,OAAKS,UAAU,cAAc8B,GAAG,WAC9BvC,EAAAA,cAACsC,EAAAA,EAAS,KACRtC,EAAAA,cAACoD,EAAAA,EAAkB,CAACC,YAAY,gBAIpCrD,EAAAA,cAAC0C,EAAAA,EAAO,MAER1C,EAAAA,cAACsC,EAAAA,EAAS,KACRtC,EAAAA,cAACsD,EAAAA,EAAO,OAGVtD,EAAAA,cAAC0C,EAAAA,EAAO,MAGd,C","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/candlestick.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Plotly } from '../components/MiscellaneousLogos';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription = (\n  <>\n    <p>\n      A{' '}\n      <a href=\"https://en.wikipedia.org/wiki/Candlestick_chart\">\n        candlestick chart\n      </a>{' '}\n      is a style of <b>financial chart</b> used to describe price movements of a\n      security, derivative, or currency.\n    </p>\n    <p>\n      In python there are 2 main ways to build a candlestick chart. The{' '}\n      <code>mplfinance</code> package is built on top of{' '}\n      <Link href=\"/matplotlib\">matplotlib</Link> and is great to create{' '}\n      <b>static</b> versions. <Link href=\"/plotly\">Plotly</Link> has a specific\n      function to create <b>interactive</b> candlestick charts.\n    </p>\n    <p>\n      This page provides <b>several examples</b> of candlestick charts using\n      those 2 libraries. Linked tutorial should help you create your own\n      candlestick in a short amount of time.\n    </p>\n  </>\n);\n\nconst quickCode = `#libraries\nimport mplfinance as mpf\nimport yfinance as yf #(for the dataset)\n\n# Define the stock symbol and date range\nstock_symbol = \"AAPL\"  # Example: Apple Inc.\nstart_date = \"2022-01-01\"\nend_date = \"2022-03-30\"\n\n# Load historical data\nstock_data = yf.download(stock_symbol, start=start_date, end=end_date)\n\n# plot\nmpf.plot(stock_data, type='candle')\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Candlestick\"\n    seoDescription=\"A collection of candlestick examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Boxplot() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Candlestick\"\n        description={chartDescription}\n        chartType=\"candlestick\"\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <code>mplfinance</code> is the best library to quickly build a\n              static candlestick chart.\n            </p>\n            <p>\n              It comes with a dedicated <code>plot()</code> function that has a{' '}\n              <code>type</code> argument that can be set to <code>candle</code>:\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/548-intro-candle-stick-matplotlib'}>\n              <ChartImage\n                imgName=\"548-intro-candle-stick-matplotlib\"\n                caption=\"Basic candlestick chart made with Python and the mplfinance library.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Candlestick with <code>mplfinance</code>\n        </h2>\n        <p>\n          <code>mplfinance</code> is a set of matplotlib utilities for the\n          visualization, and visual analysis, of financial data. Its{' '}\n          <a href=\"https://github.com/matplotlib/mplfinance\">\n            official documentation\n          </a>{' '}\n          is available on github.\n        </p>\n        <p>\n          Building a candlestick chart with mplfinance is made easy thanks to\n          its <code>mpf.plot()</code> function that has a <code>type</code>{' '}\n          argument that can be set to <code>candle</code>.\n        </p>\n        <p>\n          Check the example below to understand how to build it from your\n          dataset:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"548-intro-candle-stick-matplotlib\"\n            caption=\"How to make a candlestick chart with Matplotlib and mplfinance\"\n            linkTo=\"/548-intro-candle-stick-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"549-candle-stick-with-moving-average\"\n            caption=\"How to add one or several moving averages to a candlestick chart\"\n            linkTo=\"/549-candle-stick-with-moving-average\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Plotly\">\n          <Plotly />\n          Candlestick with <code>Plotly</code>\n        </h2>\n        <p>\n          <Link href=\"/plotly\">Plotly</Link> is a python library made to create{' '}\n          <b>interactive</b> charts. It is particularly poweful when it comes to\n          create interactive candlestick graphs.\n        </p>\n        <p>\n          On the clandlestick example below, you can <b>zoom</b> by selecting a\n          specific area on the chart or using the minimap. On top of that,\n          <b>hovering</b> a specific timestamp will give you all its price\n          details.{' '}\n        </p>\n        <Link to=\"/554-custom-candle-stick-plotly\">\n          <Button size=\"sm\">See code</Button>\n        </Link>\n        <br />\n        <div className=\"mx-auto\">\n          <iframe\n            src=\"/interactiveCharts/candlestick-plotly-custom-2.html\"\n            title=\"candlestick chart with Python and Plotly\"\n            style={{ border: 'none', width: '900px', height: '500px' }}\n          ></iframe>\n        </div>\n\n        <br />\n        <p>\n          Building a candlestick chart with Plotly is made easy thanks to its{' '}\n          <code>go.Candlestick()</code> function. It takes as input a{' '}\n          <code>fig</code> object that can be customized with a{' '}\n          <code>layout</code> object.\n        </p>\n        <p>\n          Check the example below to understand how to build it from your\n          dataset:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"553-intro-candle-stick-plotly\"\n            caption=\"How to make a candlestick chart with Plotly\"\n            linkTo=\"/553-intro-candle-stick-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"554-custom-candle-stick-plotly\"\n            caption=\"How to customize a candlestick chart with Plotly\"\n            linkTo=\"/554-custom-candle-stick-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"555-candle-stick-with-moving-average-plotly\"\n            caption=\"How to add one or several moving averages to a candlestick chart\"\n            linkTo=\"/555-candle-stick-with-moving-average-plotly\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"evolution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","href","quickCode","Head","Boxplot","Layout","isTocEnabled","TitleAndDescription","description","chartType","Container","id","Row","CodeChunk","Spacing","Matplotlib","Plotly","Button","size","src","style","border","width","height","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}