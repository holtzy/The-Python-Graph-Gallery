{"version":3,"file":"component---src-pages-pyfonts-js-081f611d1c038f792ad2.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/pages/pyfonts.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/components/ChartImage.js"],"sourcesContent":["import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport ChartImage from '../components/ChartImage';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription = (\n  <>\n    <p>\n      <a href=\"https://y-sunflower.github.io/pyfonts/\">PyFonts</a> is a library\n      that allows to load easily any font from the web and use it in your\n      matplotlib charts.\n    </p>\n    <p>\n      It was created by <a href=\"https://barbierjoseph.com/\">Joseph Barbier</a>{' '}\n      in order to <b>simplify</b> the process to loading fonts in matplotlib and{' '}\n      <b>remove</b> the need to install them on your computer.\n    </p>\n  </>\n);\n\nexport const Head = () => (\n  <SEO\n    title=\"PyFonts\"\n    seoDescription=\"An overview of the PyFonts library in Python\"\n  />\n);\n\nexport default function Post() {\n  return (\n    <Layout title=\"PyFonts\">\n      <TitleAndDescription\n        title=\"PyFonts: a simple way to load fonts for matplotlib\"\n        description={chartDescription}\n        chartType={'pyfonts'}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <p>\n          Before using pyfonts you need to <b>install</b> it. This can easily be\n          done with <code>pip</code>:\n        </p>\n        <br />\n        <CodeChunk>{codeInstall}</CodeChunk>\n        <br />\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              pyfonts has <b>a main simple function</b>:\n              <code>load_google_font()</code>: load a font from Google font and\n              return a matplotlib font object.\n            </p>\n          </Col>\n          <Col md={6}>\n            <ChartImage\n              imgName=\"quickstart-pyfonts\"\n              caption=\"Basic use case of pyfonts\"\n            />\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>How to find good fonts</h2>\n        <p>\n          The easiest way to find great is to\n          <ul>\n            <li>\n              browse{' '}\n              <a href=\"https://fonts.google.com/\" target=\"_blank\">\n                Google Font\n              </a>\n            </li>\n            <li>copy the name of the font you like</li>\n            <li>\n              pass it to <code>load_google_font(\"Font Name\")</code>\n            </li>\n          </ul>\n        </p>\n        <p>\n          Then you can use the <code>weight</code> argument to control is the\n          font should be <b>bold</b> or thin for example.\n        </p>\n        <p>\n          You can control if the font should be <i>italic</i> by specifying{' '}\n          <code>italic=True</code> (default to <code>False</code>).\n        </p>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Fonts that are not on Google font</h2>\n        <p>\n          Since not all fonts are available on Google fonts,{' '}\n          <code>pyfonts</code> provides a <code>load_font()</code> function that\n          allows to <b>load a font from any arbitrary url</b> that points to a\n          font file.\n        </p>\n        <p>\n          Most font files are on Github repositories. In order to load a font\n          from a Github repository, you have to:\n        </p>\n        <ul>\n          <li>\n            Copy the url of that font file. Here we'll use this url from pyfonts\n            Github repository:\n          </li>\n          <p>\n            <code>\n              https://github.com/y-sunflower/pyfonts/blob/main/tests/Ultra-Regular.ttf\n            </code>\n          </p>\n          <li>\n            Then we add <code>?raw=true</code> at the end, which gives us:\n          </li>\n          <p>\n            <code>\n              https://github.com/y-sunflower/pyfonts/blob/main/tests/Ultra-Regular.ttf?raw=true\n            </code>\n          </p>\n        </ul>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              Use <code>load_font()</code> by passing the font's URL.\n            </p>\n            <p>\n              Then, provide the <b>output</b> of <code>load_font()</code>{' '}\n              directly to any <a href=\"/matplotlib\">matplotlib</a> function that\n              accepts a font, such as <code>ax.text()</code>.\n            </p>\n          </Col>\n          <Col md={6}>\n            <ChartImage\n              imgName=\"usecase-pyfonts-1-square\"\n              caption=\"how to load a font with pyfonts\"\n            />\n          </Col>\n          <CodeChunk>{useFontCode}</CodeChunk>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Different weight and style</h2>\n        <Row className=\"align-items-center\">\n          <Col md={7}>\n            <p>\n              When you load a font, <b>you don't load all its extensions</b>:\n              bold, italic, thin etc, but only the one from the url. If you want\n              to be able to use a font and its <b>bold</b> version, for example,\n              you need to load both fonts:\n            </p>\n          </Col>\n          <Col md={5}>\n            <ChartImage\n              imgName=\"usecase-pyfonts-2-square\"\n              caption=\"Combine a normal font and a bold font with pyfonts\"\n            />\n          </Col>\n        </Row>\n        <CodeChunk>{useFontCode2}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Locally stored font</h2>\n        <Row className=\"align-items-center\">\n          <Col md={7}>\n            <p>\n              <code>PyFonts</code> also allows you to load a font file that you\n              have on your own computer. You just have to give it the path to\n              your font.\n            </p>\n          </Col>\n          <Col md={5}>\n            <ChartImage\n              imgName=\"usecase-pyfonts-3-square\"\n              caption=\"Load a locally stored font with pyfonts\"\n            />\n          </Col>\n        </Row>\n        <CodeChunk>{useFontCode3}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Gallery of examples</h2>\n        <p>\n          Here are some examples of what you can do with <code>PyFonts</code>.\n          Click on the images to see the code.\n        </p>\n        <Row>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-waffle-chart-for-time-series\">\n              <ChartImage\n                imgName={'web-waffle-chart-for-time-series-square'}\n                caption={'Waffle chart with nice theme and fonts'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-lollipop-with-colormap-and-arrow\">\n              <ChartImage\n                imgName={'web-lollipop-with-colormap-and-arrow-square'}\n                caption={'Lollipop chart with arrows'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-area-chart-with-different-colors-for-positive-and-negative-values\">\n              <ChartImage\n                imgName={\n                  'web-area-chart-with-different-colors-for-positive-and-negative-values-square'\n                }\n                caption={'Minimalist style area chart'}\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Going further</h2>\n        <p>\n          You might be interested in\n          <ul>\n            <li>\n              The official{' '}\n              <a href=\"https://y-sunflower.github.io/pyfonts/\" target=\"_blank\">\n                pyfonts documentation\n              </a>\n              .\n            </li>\n            <li>\n              The{' '}\n              <a href=\"https://github.com/y-sunflower/pyfonts\">\n                {' '}\n                official github repo of pyfonts\n              </a>{' '}\n              (⭐ give it a star!)\n            </li>\n            <li>\n              Learn more on{' '}\n              <a href=\"custom-fonts-in-matplotlib\">\n                how matplotlib handle fonts\n              </a>\n            </li>\n            <li>\n              How to <a href=\"/drawarrow\">draw arrows in matplotlib</a>\n            </li>\n            <li>\n              How to create{' '}\n              <a href=\"/advanced-custom-annotations-matplotlib\">\n                beautiful annotation in matplotlib\n              </a>\n            </li>\n          </ul>\n        </p>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n\nconst quickCode = `import matplotlib.pyplot as plt\nfrom pyfonts import load_google_font\n\nfont = load_google_font(\"Cascadia Mono\", weight=\"bold\", italic=True)\n\nfig, ax = plt.subplots()\nax.text(\n  x=0.2,\n  y=0.5,\n  s=\"Hey there!\",\n  size=30,\n  font=font # we pass it to the 'font' argument\n)\nplt.show()\n`;\n\nconst useFontCode = `import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\n  \"https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true\"\n)\n\nfig, ax = plt.subplots(figsize=(10, 10), dpi=300)\nax.text(\n    x=0.5,\n    y=0.5,\n    s=f\"Amaranth font\\\\nwith PyFonts!!!\",\n    font=font,\n    fontsize=50,\n    ha=\"center\",\n)\nplt.show()\n`;\n\nconst useFontCode2 = `import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\n  \"https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Regular.ttf?raw=true\"\n)\nbold_font = load_font(\n  \"https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true\"\n)\n\nfig, ax = plt.subplots(figsize=(6, 6), dpi=300)\nax.text(\n   x=0.5,\n   y=0.5,\n   s=f\"Congrats, you now have a cool font!\",\n   font=font,\n   fontsize=20,\n   ha=\"center\",\n)\nax.text(x=0.5, y=0.3, s=f\"And now it's bold\", font=bold_font, fontsize=25, ha=\"center\")\nplt.show()\n`;\n\nconst useFontCode3 = `import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\"path/to/myfont/Ultra-Regular.ttf\")\n\nfig, ax = plt.subplots(figsize=(6, 6), dpi=300)\nax.text(\n   x=0.5,\n   y=0.5,\n   s=f\"Yet another way to load font\",\n   font=font,\n   fontsize=18,\n   ha=\"center\",\n)\nplt.show()\n`;\n\nconst codeInstall = `pip install pyfonts`;\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n"],"names":["chartDescription","React","href","Head","SEO","title","seoDescription","Post","Layout","TitleAndDescription","description","chartType","Container","id","CodeChunk","codeInstall","Row","className","Col","md","ChartImage","imgName","caption","quickCode","Spacing","target","useFontCode","useFontCode2","useFontCode3","xs","Link","to","ChartFamilySection","chartFamily","Contact","_ref","keywords","image","lang","name","content","property","allGifs","includes","useStaticQuery","allFile","edges","find","n","node","GatsbyImage","childImageSharp","gatsbyImageData","alt"],"sourceRoot":""}