{"version":3,"file":"component---src-pages-circular-packing-js-67eb7593958ba36e209e.js","mappings":"wOAQA,MAAMA,EAAS,CACbC,aAAc,eACdC,YAAa,cACbC,QAAS,UACTC,aAAc,kBACdC,UAAW,YACXC,IAAK,MACLC,KAAM,OACNC,QAAS,qBAGI,SAASC,EAAkBC,GAAmB,IAAlB,YAAEC,GAAaD,EACxD,MAAME,EAAWC,EAAAA,EACdC,QAAQC,GAAUA,EAAMC,SAAWL,IACnCL,KAAI,CAACS,EAAOE,KACX,MAAMC,GAAOC,EAAAA,EAAAA,GAAsBJ,EAAMK,WACzC,OACEC,EAAAA,cAACC,EAAAA,EAAG,CAACC,IAAKN,EAAIO,GAAI,EAAGC,GAAI,EAAGC,UAAU,WACpCL,EAAAA,cAACM,EAAAA,EAAsB,CACrBT,KAAMA,EACNU,UAAWb,EAAMc,KACjBC,QAASf,EAAMgB,QAEb,IAIZ,OACEV,EAAAA,cAAA,OAAKW,MAAO,CAAEC,cAAe,KAC3BZ,EAAAA,cAAA,MAAIJ,GAAG,iBAAiBS,UAAW,gBAAkBf,GAClDX,aAAM,EAANA,EAASW,IAEZU,EAAAA,cAACa,EAAAA,EAAG,KAAEtB,GAGZ,C,4ECGA,MAAMU,EAAmB,cAEzB,CAACa,EAAOC,KACN,OAAO,UACLV,KACGW,IAEHC,GAAIC,EAAY,MAAK,SACrBC,EAAQ,MACRC,IAjDG,UAAgB,GACrBH,EAAE,SACFE,EAAQ,UACRd,KACGS,IAEHK,GAAW,QAAmBA,EAAU,OACxC,MAAME,GAAc,UACdC,GAAgB,UAChBF,EAAQ,GACRG,EAAU,GAqBhB,OApBAF,EAAYG,SAAQC,IAClB,MAAMC,EAAYZ,EAAMW,GAExB,IAAIE,EACAC,EACAC,SAHGf,EAAMW,GAIY,iBAAdC,GAAuC,MAAbA,IAEjCC,OACAC,SACAC,SACEH,GAEJC,EAAOD,EAET,MAAMI,EAAQL,IAAaH,EAAgB,IAAIG,IAAa,GACxDE,GAAMP,EAAMW,MAAc,IAATJ,EAAgB,GAAGR,IAAWW,IAAU,GAAGX,IAAWW,KAASH,KACvE,MAATE,GAAeN,EAAQQ,KAAK,QAAQD,KAASD,KACnC,MAAVD,GAAgBL,EAAQQ,KAAK,SAASD,KAASF,IAAS,IAEvD,CAAC,IACHd,EACHT,UAAW,IAAWA,KAAce,KAAUG,IAC7C,CACDN,KACAE,WACAC,SAEJ,CAWOY,CAAOlB,GACZ,OAAoB,SAAKI,EAAW,IAC/BF,EACHD,IAAKA,EACLV,UAAW,IAAWA,GAAYe,EAAMa,QAAUd,IAClD,IAEJlB,EAAIiC,YAAc,MAClB,K,6OCjDA,MAAMC,EACJ,8UAEWC,EAAOA,IAClBpC,EAAAA,cAACqC,EAAAA,EAAG,CACFC,MAAM,mBACNC,eAAe,8GAIJ,SAASC,IACtB,OACExC,EAAAA,cAACyC,EAAAA,EAAM,CAACC,cAAY,GAClB1C,EAAAA,cAAC2C,EAAAA,EAAmB,CAClBL,MAAM,mBACNM,YAAaT,EACb5B,UAAU,oBAGZP,EAAAA,cAAA,OAAKK,UAAU,cAAcT,GAAG,WAC9BI,EAAAA,cAAC6C,EAAAA,EAAS,KACR7C,EAAAA,cAAA,MAAIJ,GAAG,YAAW,qBACeI,EAAAA,cAAA,YAAM,YAAe,YAEtDA,EAAAA,cAAA,SAAG,OACGA,EAAAA,cAAA,YAAM,YAAe,2GACoC,IAC7DA,EAAAA,cAAA,KAAG8C,KAAK,8BAA6B,kBAAkB,gBAAc,IACrE9C,EAAAA,cAAA,KAAG8C,KAAK,uCAAsC,UAAU,SAAO,KAEjE9C,EAAAA,cAAA,SAAG,2BACuBA,EAAAA,cAAA,YAAM,wBAA2B,KAE3DA,EAAAA,cAAA,KAAG8C,KAAK,uCACN9C,EAAAA,cAAC+C,EAAAA,EAAM,CAACC,KAAK,MAAK,6BAKxBhD,EAAAA,cAACiD,EAAAA,EAAO,MAERjD,EAAAA,cAAC6C,EAAAA,EAAS,KACR7C,EAAAA,cAAA,MAAIJ,GAAG,0BACLI,EAAAA,cAACkD,EAAAA,GAAU,MAAG,0BAGhBlD,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,YAAe,8NAGUA,EAAAA,cAAA,YAAM,cAAiB,2DAGxDA,EAAAA,cAACa,EAAAA,EAAG,KACFb,EAAAA,cAACmD,EAAAA,EAAmB,CAClBC,QAAQ,sCACR3C,QAAQ,4BACR4C,OAAO,wCAETrD,EAAAA,cAACmD,EAAAA,EAAmB,CAClBC,QAAQ,sCACR3C,QAAQ,wBACR4C,OAAO,wCAETrD,EAAAA,cAACmD,EAAAA,EAAmB,CAClBC,QAAQ,sCACR3C,QAAQ,gCACR4C,OAAO,0CAKbrD,EAAAA,cAACiD,EAAAA,EAAO,MAERjD,EAAAA,cAAC6C,EAAAA,EAAS,KACR7C,EAAAA,cAAA,MAAIJ,GAAG,kBACLI,EAAAA,cAACkD,EAAAA,GAAU,MAAG,+BAGhBlD,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,YAAe,sOAGyBA,EAAAA,cAAA,YAAM,cAAiB,KAEvEA,EAAAA,cAAA,OAAKW,MAAO,CAAE2C,SAAU,QAASC,OAAQ,SAAUC,QAAS,KAC1DxD,EAAAA,cAACyD,EAAAA,KAAI,CAACC,GAAG,iDACP1D,EAAAA,cAAC2D,EAAAA,EAAU,CACTP,QAAS,qDACT3C,QACE,8FAOVT,EAAAA,cAACiD,EAAAA,EAAO,MAERjD,EAAAA,cAAA,OAAKK,UAAU,cAAcT,GAAG,WAC9BI,EAAAA,cAAC6C,EAAAA,EAAS,KACR7C,EAAAA,cAACZ,EAAAA,EAAkB,CAACE,YAAY,mBAIpCU,EAAAA,cAACiD,EAAAA,EAAO,MAERjD,EAAAA,cAAC6C,EAAAA,EAAS,KACR7C,EAAAA,cAAC4D,EAAAA,EAAO,OAGV5D,EAAAA,cAACiD,EAAAA,EAAO,MAGd,C,yFC3HA,MAAMY,E,QAAcrE,EACjBC,QAAQqE,GAAyB,YAAhBA,EAAKnE,SACtBV,KAAK6E,GAASA,EAAKtD,OAEP,SAASF,EAAsBjB,GAAgC,IAA/B,UAAEkB,EAAS,QAAEE,EAAO,KAAEZ,GAAMR,EAEzE,MAAM0E,EAAkBF,EAAYG,SAASzD,GAE7C,OACEP,EAAAA,cAAAA,EAAAA,SAAA,KACI+D,EAaA/D,EAAAA,cAAA,OAAKK,UAAU,wBACbL,EAAAA,cAACyD,EAAAA,KAAI,CAACC,GAAI7D,GACRG,EAAAA,cAACiE,EAAAA,EAAW,CAAC1D,UAAWA,KAE1BP,EAAAA,cAAA,KAAGK,UAAU,sBAAsBI,IAhBrCT,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKK,UAAU,wBACbL,EAAAA,cAACyD,EAAAA,KAAI,CAACC,GAAI7D,GACRG,EAAAA,cAACiE,EAAAA,EAAW,CAAC1D,UAAWA,IACxBP,EAAAA,cAAA,OAAKK,UAAU,sBACbL,EAAAA,cAAA,OAAKK,UAAU,0BAAyB,QAI9CL,EAAAA,cAAA,KAAGK,UAAU,sBAAsBI,IAY7C,C,qEC5BO,MAAM4B,EAAMhD,IAAiD,IAAhD,MAAEiD,EAAK,eAAEC,EAAc,SAAE2B,EAAQ,MAAEC,GAAO9E,EAC5D,OACEW,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQsC,GACRtC,EAAAA,cAAA,QAAMoE,KAAK,OACXpE,EAAAA,cAAA,QACEqE,KAAK,cACLC,QAAS/B,GAAkB,qCAE7BvC,EAAAA,cAAA,QAAMqE,KAAK,SAASC,QAAQ,cAC5BtE,EAAAA,cAAA,QACEqE,KAAK,WACLC,QAASJ,GAAY,6CAGvBlE,EAAAA,cAAA,QAAMuE,SAAS,eAAeD,QAAQ,6BACtCtE,EAAAA,cAAA,QAAMuE,SAAS,WAAWD,QAAShC,IACnCtC,EAAAA,cAAA,QACEuE,SAAS,WACTD,QACEH,GACA,oGAGJnE,EAAAA,cAAA,QAAMuE,SAAS,iBAAiBD,QAAS/B,IACzCvC,EAAAA,cAAA,QAAMqE,KAAK,eAAeC,QAAQ,wBAClCtE,EAAAA,cAAA,QAAMqE,KAAK,eAAeC,QAAQ,qBACjC,C,mGC/BQ,SAASnB,EAAmB9D,GAAgC,IAA/B,QAAE+D,EAAO,QAAE3C,EAAO,OAAE4C,GAAQhE,EACtE,OACEW,EAAAA,cAACC,EAAAA,EAAG,CAACE,GAAI,GAAIC,GAAI,GACfJ,EAAAA,cAACyD,EAAAA,KAAI,CAACC,GAAIL,GACRrD,EAAAA,cAAC2D,EAAAA,EAAU,CAACP,QAASA,EAAS3C,QAASA,KAI/C,C,yFCPA,MAAM+D,EAAU,CACd,iBACA,yBACA,wBAKa,SAASb,EAAUtE,GAAwB,IAAvB,QAAE+D,EAAO,QAAE3C,GAASpB,EACrD,GAAImF,EAAQR,SAASZ,GACnB,OAAOpD,EAAAA,cAAA,SAAG,QAGZ,MAgBMmE,GAhBOM,EAAAA,EAAAA,gBAAe,cAgBTC,QAAQC,MAAMC,MAAMC,GAC9BA,EAAEC,KAAKT,KAAKL,SAASZ,KAG9B,OAAKe,EAMHnE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKK,UAAU,uBACbL,EAAAA,cAAC+E,EAAAA,EAAW,CACVZ,MAAOA,EAAMW,KAAKE,gBAAgBC,gBAClCC,IAAKzE,EACLJ,UAAU,kBAEXI,GACCT,EAAAA,cAAA,OAAKK,UAAU,qBACbL,EAAAA,cAAA,OAAKK,UAAU,yBACbL,EAAAA,cAAA,SAAIS,OAfP,IAsBX,C,4ECzDA,MAAMI,EAAmB,cAAiB,EACxCM,WACAd,YAEAY,GAAIC,EAAY,SACbJ,GACFC,KACD,MAAMoE,GAAoB,QAAmBhE,EAAU,OACjDE,GAAc,UACdC,GAAgB,UAChB8D,EAAa,GAAGD,SAChB5D,EAAU,GAehB,OAdAF,EAAYG,SAAQC,IAClB,MAAMC,EAAYZ,EAAMW,GAExB,IAAI4D,SADGvE,EAAMW,GAEI,MAAbC,GAA0C,iBAAdA,IAE5B2D,QACE3D,GAEJ2D,EAAO3D,EAET,MAAMI,EAAQL,IAAaH,EAAgB,IAAIG,IAAa,GAChD,MAAR4D,GAAc9D,EAAQQ,KAAK,GAAGqD,IAAatD,KAASuD,IAAO,KAE7C,SAAKnE,EAAW,CAClCH,IAAKA,KACFD,EACHT,UAAW,IAAWA,EAAW8E,KAAsB5D,IACvD,IAEJV,EAAIqB,YAAc,MAClB,K,gICzBe,SAASS,EAAmBtD,GAKvC,IALwC,MAC1CiD,EAAK,YACLM,EAAW,UACXrC,EAAS,iBACT+E,GAAmB,GACpBjG,EACC,MAAMkG,EAAY/F,EAAAA,EAAeoF,MAAMlF,GAAUA,EAAME,KAAOW,IAE9D,OACEP,EAAAA,cAAC6C,EAAAA,EAAS,KACR7C,EAAAA,cAAA,OAAKK,UAAU,uBACbL,EAAAA,cAAA,OAAKK,UAAU,YACbL,EAAAA,cAAA,MAAIK,UAAU,aAAaiC,GAC1BiD,GACCvF,EAAAA,cAAA,OAAKW,MAAO,CAAE6E,MAAO,IAAKC,SAAU,MAClCzF,EAAAA,cAACiE,EAAAA,EAAW,CAAC1D,UAAWgF,EAAU/E,SAKxCR,EAAAA,cAAA,MAAIK,UAAU,YAEU,iBAAhBuC,EACN5C,EAAAA,cAAA,OACEK,UAAU,cACVqF,wBAAyB,CAAEC,OAAQ/C,KAGrC5C,EAAAA,cAAA,OAAKK,UAAU,eAAeuC,GAG/B2C,GACCvF,EAAAA,cAAA,OAAKW,MAAO,CAAEiF,UAAW,SACvB5F,EAAAA,cAACyD,EAAAA,KAAI,CAACC,IAAI5D,EAAAA,EAAAA,GAAsByF,EAAUxF,YACxCC,EAAAA,cAAC+C,EAAAA,EAAM,CAACC,KAAK,MAAMuC,EAAU7E,MAAQ,aAEvCV,EAAAA,cAAA,KAAG8C,KAAMyC,EAAUM,cACjB7F,EAAAA,cAAC+C,EAAAA,EAAM,CAACC,KAAK,MAAK,uBAMzBsC,GACCtF,EAAAA,cAAA,OAAKK,UAAU,uBAAuBM,MAAO,CAAEmF,UAAW,OAIlE,C,mGCxDA,MAAMC,EAAsB,SAACC,EAAIC,GAC/B,SAD0C,IAAXA,IAAAA,EAAc,GACtCD,GACLC,GAAeD,EAAGE,UAAYF,EAAGG,UAAYH,EAAGI,UAChDJ,EAAKA,EAAGK,aAEV,OAAOJ,CACT,EAEe,SAASK,EAAcjH,GAAiB,IAAhB,UAAEkB,GAAWlB,EAClD,MAAM,EAACkH,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,OAAQ,GACRC,MAAO,GACPC,SAAU,KAIN,EAACC,EAAO,EAACC,IAAaL,EAAAA,EAAAA,UAAS,GAoCrC,OAjCAM,EAAAA,EAAAA,YAAU,KACR,MACMJ,EAAQK,MAAMC,KAAKC,SAASC,iBADjB,CAAC,aAEZT,EAASC,EAAM1H,KAAK6F,IAAI,CAC5BxC,MAAOwC,EAAKlF,IAAMkF,EAAKsC,UACvBC,MAAOC,OAAOxC,EAAKyC,SAAS,QAIxBX,EAAWY,KAAKC,IAAGC,MAARF,MAAIG,EAAAA,EAAAA,GAAQjB,EAAOzH,KAAK2I,GAAMA,EAAEP,UACjDb,EAAY,CAAEE,SAAQC,QAAOC,YAAW,GACvC,KAGHG,EAAAA,EAAAA,YAAU,KAER,MAAMc,EAAgBA,KACpB,MAAM,MAAElB,GAAUJ,EACZuB,EAAUnB,EAAM1H,KAAK+G,GAAOD,EAAoBC,KAChD+B,EAA4BC,OAAOC,QAAU,IAC7CC,EAAUJ,EAAQK,QAAO,SAAUC,EAAMC,GAC7C,OAAOb,KAAKc,IAAID,EAAON,GACrBP,KAAKc,IAAIF,EAAOL,GACdM,EACAD,CACN,GAAG,GACGG,EAAcT,EAAQU,WAAW5G,GAAWA,IAAWsG,IAC7DpB,GAA2B,IAAjByB,EAAqB,EAAIA,EAAY,EAGjD,OADAP,OAAOS,iBAAiB,SAAUZ,GAC3B,IAAMG,OAAOU,oBAAoB,SAAUb,EAAc,GAC/D,CAACtB,IAGFvG,EAAAA,cAAA,OAAKK,UAAU,oBACZkG,EAASG,OAAOzH,KAAI,CAAA0J,EAAmBC,KAAK,IAAvB,MAAEtG,EAAK,MAAE+E,GAAOsB,EAAA,OACpC3I,EAAAA,cAAA,KACEE,IAAKoC,EACL+E,MAAOA,EAAQd,EAASK,SACxBvG,UAAWwG,IAAW+B,EAAQ,2BAA6B,WAC3DC,QAAUC,IACRA,EAAMC,iBACNxC,EAASI,MAAMiC,GAAOI,eAAe,CACnCC,SAAU,SACVC,MAAO,QACPC,YAAY,GACZ,EAEJzD,wBAAyB,CAAEC,OAAQrD,IACnC,IAKV,CC3CA,MA/BmBjD,IAAiB,IAAhB,OAAE+J,GAAQ/J,EA4B5B,OA3BA0H,EAAAA,EAAAA,YAAU,KAORiB,OAAOqB,SAAWrB,OAAOqB,UAAY,CAAC,EACtCrB,OAAOqB,SAASC,IAAMtB,OAAOqB,SAASC,KAAO,GAC7CtB,OAAOqB,SAASE,OAAS,0BACzBvB,OAAOqB,SAASG,KAAO,mBAGvB,MAAMC,EAASvC,SAASwC,cAAc,UACtCD,EAAOE,OAAQ,EACfF,EAAOG,eAAiB,6BACxBH,EAAOI,IAAM,WACX7B,OAAOqB,SAASG,cACRJ,yBAA8BU,mBACtC9B,OAAO+B,SAASjH,QAIlB,MAAMkH,EAAc9C,SAAS+C,qBAAqB,UAAU,GAC5DD,EAAYE,WAAWC,aAAaV,EAAQO,EAAY,GACvD,CAACZ,IAEG,IAAI,ECXE,SAAS3G,EAAMpD,GAK1B,IAL2B,SAC7B+K,EAAQ,aACR1H,EAAY,UACZnC,EAAS,OACT8J,GAAS,GACVhL,EACC,OACEW,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACsK,EAAU,CAAClB,OAAO,6BAEnBpJ,EAAAA,cAAA,cACEA,EAAAA,cAACuK,EAAAA,EAAS,OAGZvK,EAAAA,cAAA,QAAMK,UAAWgK,EAAS,OAAS,YAAaD,GAEhDpK,EAAAA,cAACwK,EAAAA,EAAM,MAEN9H,GAAgB1C,EAAAA,cAACsG,EAAc,CAAC/F,UAAWA,IAGlD,C","sources":["webpack://the-python-graph-gallery/./src/components/ChartFamilySection.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./src/pages/circular-packing.js","webpack://the-python-graph-gallery/./src/components/SectionLogoWithOverlay.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/components/TableOfContent.js","webpack://the-python-graph-gallery/./src/components/AdInjector.js","webpack://the-python-graph-gallery/./src/components/Layout.js"],"sourcesContent":["import './chartFamilySection.css';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SectionLogoWithOverlay from './SectionLogoWithOverlay';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\n\nconst TITLES = {\n  distribution: 'Distribution',\n  correlation: 'Correlation',\n  ranking: 'Ranking',\n  partOfAWhole: 'Part Of A Whole',\n  evolution: 'Evolution',\n  map: 'Map',\n  flow: 'Flow',\n  general: 'General Knowledge',\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2} className=\"col-1-7\">\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div style={{ paddingBottom: 15 }}>\n      <h2 id=\"Related charts\" className={'sectionTitle ' + chartFamily}>\n        {TITLES?.[chartFamily]}\n      </h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib } from '../components/MiscellaneousLogos';\nimport ChartImage from '../components/ChartImage';\nimport { Button } from 'react-bootstrap';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/treemap.html'>treemap</a> displays hierarchical data as a set of nested rectangles. Each group is represented by a rectangle, which area is proportional to its value. In <code>Python</code>, the <code>squarify</code> library allows to compute the rectangle positions and plot it.</p>\";\n\nexport const Head = () => (\n  <SEO\n    title=\"Circular Packing\"\n    seoDescription=\"A collection of circular packing examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function CircularPacking() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Circular Packing\"\n        description={chartDescription}\n        chartType=\"circularPacking\"\n      />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <h2 id=\"Circlify\">\n            &#8505; &#65039; A note on the <code>Circlify</code> package\n          </h2>\n          <p>\n            The <code>circlify</code> package is a pure Python implementation of\n            a circle packing layout algorithm. It has been developped by{' '}\n            <a href=\"https://github.com/elmotec\">Jerome Lecomte</a> and lives on{' '}\n            <a href=\"https://github.com/elmotec/circlify\">github</a>. 🙏🙏{' '}\n          </p>\n          <p>\n            You can install it with <code>pip install circlify</code>.\n          </p>\n          <a href=\"https://github.com/elmotec/circlify\">\n            <Button size=\"sm\">Circlify documentation</Button>\n          </a>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"One level of hierarchy\">\n          <Matplotlib />\n          One level of hierarchy\n        </h2>\n        <p>\n          <code>Circlify</code> can work without a hierarchical structure, i.e.\n          with just a set of numeric varialbles that will be each displayed as a\n          bubble. Note that the package just compute the position and size of\n          each bubble. Once that's done, <code>matplotlib</code> is used to make\n          the chart itself with usual functions.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"circular-packing-1-level-hierarchy1\"\n            caption=\"Most basic circle packing\"\n            linkTo=\"/circular-packing-1-level-hierarchy\"\n          />\n          <ChartImageContainer\n            imgName=\"circular-packing-1-level-hierarchy2\"\n            caption=\"Add colors and labels\"\n            linkTo=\"/circular-packing-1-level-hierarchy\"\n          />\n          <ChartImageContainer\n            imgName=\"circular-packing-1-level-hierarchy3\"\n            caption=\"control space between bubbles\"\n            linkTo=\"/circular-packing-1-level-hierarchy\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Several levels\">\n          <Matplotlib />\n          Several levels of hierarchy\n        </h2>\n        <p>\n          <code>Circlify</code> also works from a hierarchical structure.\n          Bubbles representing the bottom of the hierarchy are encapsulated into\n          higher hierarchy bubbles and so on. Note that the process is a bit\n          more tedious here, but still doable thanks to <code>matplotlib</code>.\n        </p>\n        <div style={{ maxWidth: '800px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/circular-packing-several-levels-of-hierarchy\">\n            <ChartImage\n              imgName={'circular-packing-several-levels-of-hierarchy-large'}\n              caption={\n                'Circular packing with several levels of hierarchy with Python and the circlize library'\n              }\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"partOfAWhole\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","import './sectionLogoWithOverlay.css';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport SectionLogo from './SectionLogo';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\n\nconst generalList = chartTypesInfo\n  .filter((info) => info.family === 'general')\n  .map((info) => info.logo);\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType);\n\n  return (\n    <>\n      {!isGeneralFamily ? (\n        <>\n          <div className=\"sectionLogoContainer\">\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n              <div className=\"sectionLogoOverlay\">\n                <div className=\"sectionLogoOverlayText\">+</div>\n              </div>\n            </Link>\n          </div>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </>\n      ) : (\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n          </Link>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </div>\n      )}\n    </>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import './titleAndDescription.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'gatsby';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport { Container } from 'react-bootstrap';\nimport SectionLogo from './SectionLogo';\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({\n  title,\n  description,\n  chartType,\n  isRaptiveEnabled = true,\n}) {\n  const chartInfo = chartTypesInfo.find((chart) => chart.id === chartType);\n\n  return (\n    <Container>\n      <div className=\"titleAndDescription\">\n        <div className=\"titleRow\">\n          <h1 className=\"mainTitle\">{title}</h1>\n          {chartInfo && (\n            <div style={{ width: 100, minWidth: 100 }}>\n              <SectionLogo chartType={chartInfo.logo} />\n            </div>\n          )}\n        </div>\n\n        <hr className=\"smallHr\" />\n\n        {typeof description === 'string' ? (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        ) : (\n          <div className=\"description\">{description}</div>\n        )}\n\n        {chartInfo && (\n          <div style={{ marginTop: '30px' }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + ' section'}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n\n      {isRaptiveEnabled && (\n        <div className=\"raptive-video-player\" style={{ minHeight: 300 }} />\n      )}\n    </Container>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  chartType: PropTypes.string,\n  isRaptiveEnabled: PropTypes.bool,\n};\n","// Comes from https://janosh.dev/blog/sticky-active-smooth-responsive-toc\nimport './tableOfContent.css';\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst accumulateOffsetTop = (el, totalOffset = 0) => {\n  while (el) {\n    totalOffset += el.offsetTop - el.scrollTop + el.clientTop;\n    el = el.offsetParent;\n  }\n  return totalOffset;\n};\n\nexport default function TableOfContent({ chartType }) {\n  const [headings, setHeadings] = useState({\n    titles: [],\n    nodes: [],\n    minDepth: 0,\n  });\n\n  // Controls which heading is currently highlighted as active.\n  const [active, setActive] = useState(0);\n\n  // Read heading titles, depths and nodes from the DOM.\n  useEffect(() => {\n    const selector = ['main h2'];\n    const nodes = Array.from(document.querySelectorAll(selector));\n    const titles = nodes.map((node) => ({\n      title: node.id || node.innerHTML,\n      depth: Number(node.nodeName[1]),\n    }));\n    // Compute the minimum heading depth. Will be subtracted from each heading's\n    // depth to determine the indentation of that heading in the ToC.\n    const minDepth = Math.min(...titles.map((h) => h.depth));\n    setHeadings({ titles, nodes, minDepth });\n  }, []);\n\n  // Add scroll event listener to update currently active heading.\n  useEffect(() => {\n    // Throttling the scrollHandler saves computation and hence battery life.\n    const scrollHandler = () => {\n      const { nodes } = headings;\n      const offsets = nodes.map((el) => accumulateOffsetTop(el));\n      const currentVisualizedLocation = window.scrollY + 150;\n      const closest = offsets.reduce(function (prev, curr) {\n        return Math.abs(curr - currentVisualizedLocation) <\n          Math.abs(prev - currentVisualizedLocation)\n          ? curr\n          : prev;\n      }, 0);\n      const activeIndex = offsets.findIndex((offset) => offset === closest);\n      setActive(activeIndex === -1 ? 0 : activeIndex);\n    };\n    window.addEventListener(`scroll`, scrollHandler);\n    return () => window.removeEventListener(`scroll`, scrollHandler);\n  }, [headings]);\n\n  return (\n    <div className=\"table-of-content\">\n      {headings.titles.map(({ title, depth }, index) => (\n        <p\n          key={title}\n          depth={depth - headings.minDepth}\n          className={active === index ? 'toc-item active-toc-item' : 'toc-item'}\n          onClick={(event) => {\n            event.preventDefault();\n            headings.nodes[index].scrollIntoView({\n              behavior: `smooth`,\n              block: `start`,\n              alignToTop: true,\n            });\n          }}\n          dangerouslySetInnerHTML={{ __html: title }}\n        />\n      ))}\n      {/* {chartType && <ChartTypeLink chartType={chartType} />} */}\n    </div>\n  );\n}\n\nTableOfContent.propTypes = {\n  chartType: PropTypes.string,\n};\n","import React, { useEffect } from 'react';\n\n// This is for ESLint, it does not understand that process is a global variable in a gatsby environment\n/*global process*/\n\nconst AdInjector = ({ siteId }) => {\n  useEffect(() => {\n    // exit if dev mode\n    if (process.env.NODE_ENV === 'development') {\n      return;\n    }\n\n    // Initialize AdThrive object\n    window.adthrive = window.adthrive || {};\n    window.adthrive.cmd = window.adthrive.cmd || [];\n    window.adthrive.plugin = 'adthrive-ads-manual-spa';\n    window.adthrive.host = 'ads.adthrive.com';\n\n    // Create the script element\n    const script = document.createElement('script');\n    script.async = true;\n    script.referrerpolicy = 'no-referrer-when-downgrade';\n    script.src = `https://${\n      window.adthrive.host\n    }/sites/${siteId}/ads.min.js?referrer=${encodeURIComponent(\n      window.location.href\n    )}`;\n\n    // Insert the script element into the DOM\n    const firstScript = document.getElementsByTagName('script')[0];\n    firstScript.parentNode.insertBefore(script, firstScript);\n  }, [siteId]);\n\n  return null;\n};\n\nexport default AdInjector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Footer from '../components/Footer';\nimport TopNavbar from '../components/TopNavbar';\nimport TableOfContent from '../components/TableOfContent';\n\n// Every single page of this website has its content wrapped in this <Layout/> component\n// It allows to:\n// - import css files\n// - Add stuff in the Head of the html page for SEO\n// - Call the raptive script for ads\n// - Add the nabbar on top\n// - add the footer\n// - add the table of content\n\n// Import Styles = bootstrap + custom\n// Custom must be AFTER bootstrap. It makes sure custom style are not overriden\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/style.css';\nimport AdInjector from './AdInjector';\n\nexport default function Layout({\n  children,\n  isTocEnabled,\n  chartType,\n  isHome = false,\n}) {\n  return (\n    <>\n      <AdInjector siteId=\"6434366c7ccf1c58d32ab68f\" />\n\n      <header>\n        <TopNavbar />\n      </header>\n\n      <main className={isHome ? 'home' : 'not-home'}>{children}</main>\n\n      <Footer />\n\n      {isTocEnabled && <TableOfContent chartType={chartType} />}\n    </>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.any,\n  title: PropTypes.string,\n  isTocEnabled: PropTypes.bool,\n  chartType: PropTypes.string,\n  seoDescription: PropTypes.string,\n  keywords: PropTypes.string,\n  isHome: PropTypes.bool,\n};\n"],"names":["TITLES","distribution","correlation","ranking","partOfAWhole","evolution","map","flow","general","ChartFamilySection","_ref","chartFamily","allLogos","chartTypesInfo","filter","chart","family","id","link","fullUrlToInternalLink","pythonURL","React","Col","key","xs","md","className","SectionLogoWithOverlay","chartType","logo","caption","label","style","paddingBottom","Row","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","chartDescription","Head","SEO","title","seoDescription","CircularPacking","Layout","isTocEnabled","TitleAndDescription","description","Container","href","Button","size","Spacing","Matplotlib","ChartImageContainer","imgName","linkTo","maxWidth","margin","padding","Link","to","ChartImage","Contact","generalList","info","isGeneralFamily","includes","SectionLogo","keywords","image","lang","name","content","property","allGifs","useStaticQuery","allFile","edges","find","n","node","GatsbyImage","childImageSharp","gatsbyImageData","alt","decoratedBsPrefix","sizePrefix","cols","isRaptiveEnabled","chartInfo","width","minWidth","dangerouslySetInnerHTML","__html","marginTop","dataToVizURL","minHeight","accumulateOffsetTop","el","totalOffset","offsetTop","scrollTop","clientTop","offsetParent","TableOfContent","headings","setHeadings","useState","titles","nodes","minDepth","active","setActive","useEffect","Array","from","document","querySelectorAll","innerHTML","depth","Number","nodeName","Math","min","apply","_toConsumableArray","h","scrollHandler","offsets","currentVisualizedLocation","window","scrollY","closest","reduce","prev","curr","abs","activeIndex","findIndex","addEventListener","removeEventListener","_ref2","index","onClick","event","preventDefault","scrollIntoView","behavior","block","alignToTop","siteId","adthrive","cmd","plugin","host","script","createElement","async","referrerpolicy","src","encodeURIComponent","location","firstScript","getElementsByTagName","parentNode","insertBefore","children","isHome","AdInjector","TopNavbar","Footer"],"sourceRoot":""}