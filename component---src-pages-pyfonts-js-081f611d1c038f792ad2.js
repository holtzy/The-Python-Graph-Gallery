"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[8546],{620:function(e,t,n){n.r(t),n.d(t,{Head:function(){return y},default:function(){return g}});var l=n(6540),a=n(7238),o=n(7906),r=n(3048),m=n(3471),c=n(4479),i=n(834),s=n(4794),u=n(1105),f=n(5951),p=n(5216),h=n(3572),E=n(2816);const d=l.createElement(l.Fragment,null,l.createElement("p",null,l.createElement("a",{href:"https://y-sunflower.github.io/pyfonts/"},"PyFonts")," is a library that allows to load easily any font from the web and use it in your matplotlib charts."),l.createElement("p",null,"It was created by ",l.createElement("a",{href:"https://barbierjoseph.com/"},"Joseph Barbier")," ","in order to ",l.createElement("b",null,"simplify")," the process to loading fonts in matplotlib and"," ",l.createElement("b",null,"remove")," the need to install them on your computer.")),y=()=>l.createElement(E.k,{title:"PyFonts",seoDescription:"An overview of the PyFonts library in Python"});function g(){return l.createElement(o.A,{title:"PyFonts"},l.createElement(a.A,{title:"PyFonts: a simple way to load fonts for matplotlib",description:d,chartType:"pyfonts"}),l.createElement(r.A,null,l.createElement("h2",{id:"Quick"},"⏱ Quick start"),l.createElement("p",null,"Before using pyfonts you need to ",l.createElement("b",null,"install")," it. This can easily be done with ",l.createElement("code",null,"pip"),":"),l.createElement("br",null),l.createElement(f.A,null,v),l.createElement("br",null),l.createElement(c.A,{className:"align-items-center"},l.createElement(u.A,{md:6},l.createElement("p",null,"pyfonts has ",l.createElement("b",null,"a main simple function"),":",l.createElement("code",null,"load_google_font()"),": load a font from Google font and return a matplotlib font object.")),l.createElement(u.A,{md:6},l.createElement(h.A,{imgName:"quickstart-pyfonts",caption:"Basic use case of pyfonts"}))),l.createElement(f.A,null,b)),l.createElement(p.A,null),l.createElement(r.A,null,l.createElement("h2",null,"How to find good fonts"),l.createElement("p",null,"The easiest way to find great is to",l.createElement("ul",null,l.createElement("li",null,"browse"," ",l.createElement("a",{href:"https://fonts.google.com/",target:"_blank"},"Google Font")),l.createElement("li",null,"copy the name of the font you like"),l.createElement("li",null,"pass it to ",l.createElement("code",null,'load_google_font("Font Name")')))),l.createElement("p",null,"Then you can use the ",l.createElement("code",null,"weight")," argument to control is the font should be ",l.createElement("b",null,"bold")," or thin for example."),l.createElement("p",null,"You can control if the font should be ",l.createElement("i",null,"italic")," by specifying"," ",l.createElement("code",null,"italic=True")," (default to ",l.createElement("code",null,"False"),").")),l.createElement(p.A,null),l.createElement(r.A,null,l.createElement("h2",null,"Fonts that are not on Google font"),l.createElement("p",null,"Since not all fonts are available on Google fonts,"," ",l.createElement("code",null,"pyfonts")," provides a ",l.createElement("code",null,"load_font()")," function that allows to ",l.createElement("b",null,"load a font from any arbitrary url")," that points to a font file."),l.createElement("p",null,"Most font files are on Github repositories. In order to load a font from a Github repository, you have to:"),l.createElement("ul",null,l.createElement("li",null,"Copy the url of that font file. Here we'll use this url from pyfonts Github repository:"),l.createElement("p",null,l.createElement("code",null,"https://github.com/y-sunflower/pyfonts/blob/main/tests/Ultra-Regular.ttf")),l.createElement("li",null,"Then we add ",l.createElement("code",null,"?raw=true")," at the end, which gives us:"),l.createElement("p",null,l.createElement("code",null,"https://github.com/y-sunflower/pyfonts/blob/main/tests/Ultra-Regular.ttf?raw=true"))),l.createElement(c.A,{className:"align-items-center"},l.createElement(u.A,{md:6},l.createElement("p",null,"Use ",l.createElement("code",null,"load_font()")," by passing the font's URL."),l.createElement("p",null,"Then, provide the ",l.createElement("b",null,"output")," of ",l.createElement("code",null,"load_font()")," ","directly to any ",l.createElement("a",{href:"/matplotlib"},"matplotlib")," function that accepts a font, such as ",l.createElement("code",null,"ax.text()"),".")),l.createElement(u.A,{md:6},l.createElement(h.A,{imgName:"usecase-pyfonts-1-square",caption:"how to load a font with pyfonts"})),l.createElement(f.A,null,w))),l.createElement(p.A,null),l.createElement(r.A,null,l.createElement("h2",null,"Different weight and style"),l.createElement(c.A,{className:"align-items-center"},l.createElement(u.A,{md:7},l.createElement("p",null,"When you load a font, ",l.createElement("b",null,"you don't load all its extensions"),": bold, italic, thin etc, but only the one from the url. If you want to be able to use a font and its ",l.createElement("b",null,"bold")," version, for example, you need to load both fonts:")),l.createElement(u.A,{md:5},l.createElement(h.A,{imgName:"usecase-pyfonts-2-square",caption:"Combine a normal font and a bold font with pyfonts"}))),l.createElement(f.A,null,A)),l.createElement(p.A,null),l.createElement(r.A,null,l.createElement("h2",null,"Locally stored font"),l.createElement(c.A,{className:"align-items-center"},l.createElement(u.A,{md:7},l.createElement("p",null,l.createElement("code",null,"PyFonts")," also allows you to load a font file that you have on your own computer. You just have to give it the path to your font.")),l.createElement(u.A,{md:5},l.createElement(h.A,{imgName:"usecase-pyfonts-3-square",caption:"Load a locally stored font with pyfonts"}))),l.createElement(f.A,null,_)),l.createElement(p.A,null),l.createElement(r.A,null,l.createElement("h2",null,"Gallery of examples"),l.createElement("p",null,"Here are some examples of what you can do with ",l.createElement("code",null,"PyFonts"),". Click on the images to see the code."),l.createElement(c.A,null,l.createElement(u.A,{xs:12,md:4},l.createElement(s.Link,{to:"/web-waffle-chart-for-time-series"},l.createElement(h.A,{imgName:"web-waffle-chart-for-time-series-square",caption:"Waffle chart with nice theme and fonts"}))),l.createElement(u.A,{xs:12,md:4},l.createElement(s.Link,{to:"/web-lollipop-with-colormap-and-arrow"},l.createElement(h.A,{imgName:"web-lollipop-with-colormap-and-arrow-square",caption:"Lollipop chart with arrows"}))),l.createElement(u.A,{xs:12,md:4},l.createElement(s.Link,{to:"/web-area-chart-with-different-colors-for-positive-and-negative-values"},l.createElement(h.A,{imgName:"web-area-chart-with-different-colors-for-positive-and-negative-values-square",caption:"Minimalist style area chart"}))))),l.createElement(p.A,null),l.createElement(r.A,null,l.createElement("h2",null,"Going further"),l.createElement("p",null,"You might be interested in",l.createElement("ul",null,l.createElement("li",null,"The official"," ",l.createElement("a",{href:"https://y-sunflower.github.io/pyfonts/",target:"_blank"},"pyfonts documentation"),"."),l.createElement("li",null,"The"," ",l.createElement("a",{href:"https://github.com/y-sunflower/pyfonts"}," ","official github repo of pyfonts")," ","(⭐ give it a star!)"),l.createElement("li",null,"Learn more on"," ",l.createElement("a",{href:"custom-fonts-in-matplotlib"},"how matplotlib handle fonts")),l.createElement("li",null,"How to ",l.createElement("a",{href:"/drawarrow"},"draw arrows in matplotlib")),l.createElement("li",null,"How to create"," ",l.createElement("a",{href:"/advanced-custom-annotations-matplotlib"},"beautiful annotation in matplotlib"))))),l.createElement(p.A,null),l.createElement("div",{className:"greySection",id:"related"},l.createElement(r.A,null,l.createElement(i.A,{chartFamily:"general"}))),l.createElement(p.A,null),l.createElement(r.A,null,l.createElement(m.A,null)),l.createElement(p.A,null))}const b='import matplotlib.pyplot as plt\nfrom pyfonts import load_google_font\n\nfont = load_google_font("Cascadia Mono", weight="bold", italic=True)\n\nfig, ax = plt.subplots()\nax.text(\n  x=0.2,\n  y=0.5,\n  s="Hey there!",\n  size=30,\n  font=font # we pass it to the \'font\' argument\n)\nplt.show()\n',w='import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\n  "https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true"\n)\n\nfig, ax = plt.subplots(figsize=(10, 10), dpi=300)\nax.text(\n    x=0.5,\n    y=0.5,\n    s=f"Amaranth font\\nwith PyFonts!!!",\n    font=font,\n    fontsize=50,\n    ha="center",\n)\nplt.show()\n',A='import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\n  "https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Regular.ttf?raw=true"\n)\nbold_font = load_font(\n  "https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true"\n)\n\nfig, ax = plt.subplots(figsize=(6, 6), dpi=300)\nax.text(\n   x=0.5,\n   y=0.5,\n   s=f"Congrats, you now have a cool font!",\n   font=font,\n   fontsize=20,\n   ha="center",\n)\nax.text(x=0.5, y=0.3, s=f"And now it\'s bold", font=bold_font, fontsize=25, ha="center")\nplt.show()\n',_='import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font("path/to/myfont/Ultra-Regular.ttf")\n\nfig, ax = plt.subplots(figsize=(6, 6), dpi=300)\nax.text(\n   x=0.5,\n   y=0.5,\n   s=f"Yet another way to load font",\n   font=font,\n   fontsize=18,\n   ha="center",\n)\nplt.show()\n',v="pip install pyfonts"},2816:function(e,t,n){n.d(t,{k:function(){return a}});var l=n(6540);const a=e=>{let{title:t,seoDescription:n,keywords:a,image:o}=e;return l.createElement(l.Fragment,null,l.createElement("title",null,t),l.createElement("html",{lang:"en"}),l.createElement("meta",{name:"description",content:n||"How to build a chart with Python"}),l.createElement("meta",{name:"author",content:"Yan Holtz"}),l.createElement("meta",{name:"keywords",content:a||"python, chart, graph, code, viz, dataviz"}),l.createElement("meta",{property:"og:site_name",content:"The Python Graph Gallery"}),l.createElement("meta",{property:"og:title",content:t}),l.createElement("meta",{property:"og:image",content:o||"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true"}),l.createElement("meta",{property:"og:description",content:n}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:site",content:"@R_Graph_Gallery"}))}},3572:function(e,t,n){n.d(t,{A:function(){return m}});var l=n(6540),a=n(4794),o=n(2532);const r=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function m(e){let{imgName:t,caption:n}=e;if(r.includes(t))return l.createElement("p",null,"TODO");const m=(0,a.useStaticQuery)("2757772085").allFile.edges.find((e=>e.node.name.includes(t)));return m?l.createElement(l.Fragment,null,l.createElement("div",{className:"chartImageContainer"},l.createElement(o.G,{image:m.node.childImageSharp.gatsbyImageData,alt:n,className:"chartImageImg"}),n&&l.createElement("div",{className:"chartImageOverlay"},l.createElement("div",{className:"chartImageOverlayText"},l.createElement("p",null,n))))):null}}}]);
//# sourceMappingURL=component---src-pages-pyfonts-js-081f611d1c038f792ad2.js.map