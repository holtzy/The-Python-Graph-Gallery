{"version":3,"file":"component---src-pages-seaborn-js-8434069e6bc33e4eb280.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/pages/seaborn.js","webpack://the-python-graph-gallery/./src/components/FunctionExploration.js"],"sourcesContent":["// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Seaborn } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { Button } from 'react-bootstrap';\nimport { SEO } from '../components/SEO';\nimport FunctionExploration from '../components/FunctionExploration';\n\nconst chartDescription =\n  \"<p><code>Seaborn</code> is a python graphic library built on top of <a href='https://python-graph-gallery.com/matplotlib'>matplotlib</a>. It allows to make your charts prettier with less code. This page provides general seaborn tips. Visit individual chart sections if you need a specific type of plot. Note that most of the <a href='https://python-graph-gallery.com/matplotlib'>matplotlib customization options</a> also work for <code>seaborn</code>.</p > \";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# use the function regplot to make a scatterplot\nsns.regplot(x=df[\"sepal_length\"], y=df[\"sepal_width\"])\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Introduction to Seaborn for dataviz with Python\"\n    seoDescription=\"A collection of chart examples made with Seaborn, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function SeabornLib() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Seaborn\"\n        description={chartDescription}\n        chartType=\"seaborn\"\n      />\n\n      <Container>\n        <h2 id=\"Quick start\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <code>seaborn</code> offers some specific functions for almost\n              every kind of charts. For instance, <code>regplot()</code> can be\n              used to build a <Link to=\"/scatter-plot\">scatterplot</Link>.\n            </p>\n            <p>\n              Note that no additional code is needed to get the nice grey\n              background with grid and some good defaults for the dots 😍.\n              That's 4 lines of code for a pretty decent chart 🔥!\n            </p>\n            <Link to=\"/scatter-plot\">\n              <Button size=\"sm\">Scatterplot section</Button>\n            </Link>\n          </Col>\n          <Col md={6}>\n            <Link to={'/40-basic-scatterplot-seaborn'}>\n              <ChartImage\n                imgName=\"40_Basic_Scatterplot_seaborn\"\n                caption=\"Basic scatterplot with Python and Seaborn from various data input formats.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Lexicon\">\n          <Matplotlib />\n          Basic vocabulary\n        </h2>\n        <p>\n          Since <code>seaborn</code> is built on top of <code>matplotlib</code>,\n          most of its concepts and vocabulary are still correct. The figure\n          below describes the anatomy of a <code>matplotlib</code> charts. It\n          names all the main components, names that you need to know to\n          understand the documentation properly.\n        </p>\n        <p>\n          &#9888;&#65039; <u>Disclaimer</u>: this figure comes from the very\n          complete{' '}\n          <a href=\"https://matplotlib.org/faq/usage_faq.html#coding-styles\">\n            matplotlib documentation\n          </a>\n          . Have a look at it for a thorough explanation on how this library\n          works.\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <ChartImage\n            imgName={'matplotlib_vocabulary'}\n            caption={\n              'Anatomy of a matplotlib chart: all the basic vocabulary you need to know to understand the documentation properly'\n            }\n          />\n        </div>\n        <a href=\"https://matplotlib.org/faq/usage_faq.html#coding-styles\">\n          <Button size=\"sm\">Matplotlib doc</Button>\n        </a>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Main functions\">\n            🧐 Main <code>seaborn</code> functions\n          </h2>\n          <p>\n            <code>Seaborn</code> is a wrapper of{' '}\n            <a href=\"/matplotlib\">matplotlib</a>, meaning that when you call a\n            function in seaborn, it calls one or multiple matplotlib functions\n            under the hood.\n          </p>\n          <p>\n            Here is an overview of the <b>most common</b> <code>seaborn</code>{' '}\n            functions. It provides a glimpse of they're made for, what are their\n            parameters and links to their official doc.\n          </p>\n          <p>\n            <ul>\n              <li>\n                <code>relplot()</code> - High-level interface for creating\n                scatter and line plots.\n              </li>\n              <li>\n                <code>scatterplot()</code> - For creating scatter plots.\n              </li>\n              <li>\n                <code>lineplot()</code> - For creating line plots.\n              </li>\n              <li>\n                <code>displot()</code> - For creating distribution plots,\n                including histograms and KDE.\n              </li>\n              <li>\n                <code>histplot()</code> - For creating histograms.\n              </li>\n              <li>\n                <code>boxplot()</code> - For creating box plots.\n              </li>\n              <li>\n                <code>violinplot()</code> - For creating violin plots.\n              </li>\n              <li>\n                <code>heatmap()</code> - For creating heatmaps.\n              </li>\n              <li>\n                <code>pairplot()</code> - For creating a grid of scatter plots\n                for pairwise relationships.\n              </li>\n              <li>\n                <code>catplot()</code> - High-level interface for creating\n                various categorical plots.\n              </li>\n            </ul>\n          </p>\n          <br />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Title\">\n          <Seaborn />\n          Customizing titles with Seaborn\n        </h2>\n        <p>\n          Since <code>Seaborn</code> is built on top of <code>Matplotlib</code>,\n          title customization works pretty much the same. A seaborn chart (like\n          the one you get with <code>sns.boxplot()</code>) actually returns a{' '}\n          <code>matplotlib</code> axes instance.\n        </p>\n        <p>\n          This means that you will not be able to use the usual{' '}\n          <code>pyplot</code> method <code>plt.title()</code>, but will have to\n          use the corresponding argument for an <code>axes</code> which is{' '}\n          <code>ax.set_title()</code>. This is described more in depth in this\n          dedicated post:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"seaborn-title-customization\"\n            caption=\"Add a title on a seaborn chart\"\n            linkTo=\"/seaborn-title-customization\"\n          />\n        </Row>\n        <br />\n        <br />\n        <p>\n          Once you've understood how to add a title, customizing it should work\n          the same as for <code>matplotlib</code>:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"190_Custom_title6\"\n            caption=\"Python chart with subtitle and custom color\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title7\"\n            caption=\"Add a math formula in title with Matplotlib\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title5\"\n            caption=\"Control the height of the matplotlib title\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Axis\">\n          <Seaborn />\n          Customizing axis\n        </h2>\n        <p>\n          The exact same concept than explained for titles above applies for\n          axes. So please read the following blogpost about axis customization\n          with matplotlib and apply it to your seaborn chart.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"191_Custom_axis1\"\n            caption=\"Change the axis title and its appearance\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis2\"\n            caption=\"Control axis labels and ticks look\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis6\"\n            caption=\"Control axis limit with the xlim() function\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Themes\">🌈 Seaborn built-in themes</h2>\n        <p>\n          Seaborn comes with a few built-in themes. Those themes are available\n          through the <code>set_style()</code> function. Here is an overview of\n          what is offered.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"104_seaborn_themes1-square\"\n            caption=\"Control axis limit with the xlim() function\"\n            linkTo=\"/104-seaborn-themes\"\n          />\n          <ChartImageContainer\n            imgName=\"104_seaborn_themes2-square\"\n            caption=\" \"\n            linkTo=\"/104-seaborn-themes\"\n          />\n          <ChartImageContainer\n            imgName=\"104_seaborn_themes3-square\"\n            caption=\" \"\n            linkTo=\"/104-seaborn-themes\"\n          />\n          <ChartImageContainer\n            imgName=\"104_seaborn_themes4-square\"\n            caption=\" \"\n            linkTo=\"/104-seaborn-themes\"\n          />\n          <ChartImageContainer\n            imgName=\"104_seaborn_themes5-square\"\n            caption=\" \"\n            linkTo=\"/104-seaborn-themes\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Gallery\">⭐ Seaborn graph gallery</h2>\n        <p>\n          If you're interested in a specific type of chart like{' '}\n          <Link to=\"/boxplot\">boxplot</Link> or{' '}\n          <Link to=\"/heatmap\">heatmap</Link>, I suggest to visit the{' '}\n          <Link to=\"/\">dedicated section</Link> of the gallery. In case you're\n          interested in what <code>seaborn</code> can do, here is a glimpse of\n          what's offered in the gallery 🧐.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot1\"\n            caption=\"Histogram can be added around a scatterplot to show each variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"74_density_plot_multi_variables\"\n            caption=\"Density chart with several displayed groups\"\n            linkTo=\"/74-density-plot-of-several-variables\"\n          />\n          <ChartImageContainer\n            imgName=\"43_seaborn_map_color_to_a_avariable3\"\n            caption=\"Color dots according to a group\"\n            linkTo=\"/43-use-categorical-variable-to-color-scatterplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"58_Number_of_obs_on_violinplot_seaborn\"\n            caption=\"Show the number of observations per group\"\n            linkTo=\"/58-show-number-of-observation-on-violinplot\"\n          />\n          <ChartImageContainer\n            imgName=\"73_Control_bandwidth_densityplot_Seaborn2\"\n            caption=\"Changed the bandwidth used to compute the density\"\n            linkTo=\"/73-control-bandwidth-of-seaborn-density-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"91_Custom_heat_annotate_cells\"\n            caption=\"Seaborn heatmap customization: show numbers in cell\"\n            linkTo=\"/91-customize-seaborn-heatmap\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables1\"\n            caption=\"Compare the distribution of several groups on the same chart\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"80_bivariate_kernel_density_plot2\"\n            caption=\"Basic contourplot with seaborn.\"\n            linkTo=\"/80-contour-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"111_Correlogram_custom4\"\n            caption=\"Apply colors to each group and customized the scatterplot\"\n            linkTo=\"/111-custom-correlogram\"\n          />\n          <ChartImageContainer\n            imgName=\"85_2D_density_plot_matplotlib_1\"\n            caption=\"Basic 2d density chart.\"\n            linkTo=\"/85-density-plot-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables2\"\n            caption=\"Use small multiple to compare the distribution of several groups\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot6\"\n            caption=\"Histogram can be added around a 2d density chart to show x and y variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"51_Horizontal_violinplot_Seaborn\"\n            caption=\"Make your violin chart horizontal to make labels more readable\"\n            linkTo=\"/51-horizontal-violinplot\"\n          />\n          <ChartImageContainer\n            imgName=\"132_Matplotlib-connected-scatterplot\"\n            caption=\"Basic connected scatterplot with Python and Seaborn.\"\n            linkTo=\"/132-basic-connected-scatterplot\"\n          />\n          <ChartImageContainer\n            imgName=\"92_Control_color_heatmap1\"\n            caption=\"Color customization: how to select other color palettes and more\"\n            linkTo=\"/92-control-color-in-seaborn-heatmaps\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Spacing />\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"evolution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","import { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport ChartImage from './ChartImage';\n\nimport './functionExploration.css';\nimport CodeChunk from './CodeChunk';\n\nconst capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport default function FunctionExploration({ funDetails }) {\n  const [selectedParameter, setSelectedParameter] = useState(0);\n  const [selectedOpt, setSelectedOpt] = useState(0);\n\n  if (!funDetails) {\n    return null;\n  }\n\n  const selectedParameterInfo = funDetails.parameters[selectedParameter];\n  const selectedOptInfo = selectedParameterInfo.options?.[selectedOpt];\n\n  const argumentButtons = (\n    <div>\n      {funDetails.parameters.map((item, i) => (\n        <Button\n          key={i}\n          value={item.name}\n          size=\"sm\"\n          onClick={() => setSelectedParameter(i)}\n          className={selectedParameter === i ? 'isButtonSelected' : ''}\n        >\n          {item.name}\n        </Button>\n      ))}\n    </div>\n  );\n\n  return (\n    <div style={{ marginBottom: 70 }}>\n      <h2 id={capitalize(funDetails.name + ' details')}>\n        &#128270; <code>{funDetails.name}</code> function parameters\n        <a\n          style={{ marginLeft: '15px', fontSize: '14px' }}\n          href={funDetails.docUrl}\n        >\n          &rarr; see full doc\n        </a>\n      </h2>\n\n      <h3>&rarr; Description</h3>\n      <p>{funDetails.description}</p>\n\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'start',\n          alignItems: 'baseline',\n          gap: 14,\n        }}\n      >\n        <h3 style={{ width: 'auto', flexWrap: 'nowrap', whiteSpace: 'nowrap' }}>\n          &rarr; Arguments\n        </h3>\n        {argumentButtons}\n      </div>\n\n      <Row>\n        <Col md={8}>\n          <div style={{ fontSize: 16 }}>\n            <p className=\"argumentSectionTitle\">Description</p>\n            <p className=\"little-text\">{selectedParameterInfo.description}</p>\n\n            <p className=\"argumentSectionTitle\">\n              Possible values &rarr; {'  '}\n              <span className=\"parameterTypePill\">\n                {selectedParameterInfo.type}\n              </span>\n            </p>\n            <p className=\"little-text\">{selectedParameterInfo.howToUse}</p>\n            {selectedParameterInfo.options && (\n              <>\n                <div\n                  style={{ display: 'flex', gap: 2, alignItems: 'baseline' }}\n                >\n                  {selectedParameterInfo.options.map((opt, i) => {\n                    return (\n                      <Button\n                        size=\"sm\"\n                        className={i === selectedOpt ? 'isButtonSelected' : ''}\n                        onClick={() => setSelectedOpt(i)}\n                      >\n                        {opt.name}\n                      </Button>\n                    );\n                  })}\n                </div>\n                <p>{selectedParameterInfo.options[selectedOpt].explanation}</p>\n              </>\n            )}\n\n            <p className=\"argumentSectionTitle\">Code Example</p>\n            <div style={{ backgroundColor: 'white' }}>\n              <CodeChunk hasWhiteBackground>\n                {selectedParameterInfo.options\n                  ? selectedParameterInfo.basicUsage.replace(\n                      'paramgoeshere',\n                      selectedParameterInfo.options[selectedOpt].name\n                    )\n                  : selectedParameterInfo.basicUsage}\n              </CodeChunk>\n            </div>\n          </div>\n        </Col>\n\n        <Col md={4}>\n          <br />\n          <Link to={'/' + selectedParameterInfo.post}>\n            <ChartImage\n              imgName={selectedOptInfo?.img || selectedParameterInfo.img}\n              caption={'More about the ' + funDetails.name + ' function.'}\n            />\n          </Link>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"],"names":["SEO","_ref","title","seoDescription","keywords","image","React","lang","name","content","property","ChartImageContainer","imgName","caption","linkTo","Col","xs","md","Link","to","ChartImage","allGifs","includes","useStaticQuery","allFile","edges","find","n","node","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","chartDescription","quickCode","Head","SeabornLib","Layout","isTocEnabled","TitleAndDescription","description","chartType","Container","id","Row","Button","size","CodeChunk","Spacing","Matplotlib","href","style","maxWidth","margin","padding","Seaborn","ChartFamilySection","chartFamily","Contact","capitalize","s","charAt","toUpperCase","slice","FunctionExploration","_selectedParameterInf","funDetails","selectedParameter","setSelectedParameter","useState","selectedOpt","setSelectedOpt","selectedParameterInfo","parameters","selectedOptInfo","options","argumentButtons","map","item","i","key","value","onClick","marginBottom","marginLeft","fontSize","docUrl","display","flexDirection","justifyContent","alignItems","gap","width","flexWrap","whiteSpace","type","howToUse","opt","explanation","backgroundColor","hasWhiteBackground","basicUsage","replace","post","img"],"sourceRoot":""}