{"version":3,"file":"component---src-pages-scatter-plot-js-a9813146b073f99f71e2.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/FunctionExploration.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/functions/scatterplot.js","webpack://the-python-graph-gallery/./src/pages/scatter-plot.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport ChartImage from './ChartImage';\n\nimport './functionExploration.css';\nimport CodeChunk from './CodeChunk';\n\nconst capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport default function FunctionExploration({ funDetails }) {\n  const [selectedParameter, setSelectedParameter] = useState(0);\n  const [selectedOpt, setSelectedOpt] = useState(0);\n\n  if (!funDetails) {\n    return null;\n  }\n\n  const selectedParameterInfo = funDetails.parameters[selectedParameter];\n  const selectedOptInfo = selectedParameterInfo.options?.[selectedOpt];\n\n  const argumentButtons = (\n    <div>\n      {funDetails.parameters.map((item, i) => (\n        <Button\n          key={i}\n          value={item.name}\n          size=\"sm\"\n          onClick={() => setSelectedParameter(i)}\n          className={selectedParameter === i ? 'isButtonSelected' : ''}\n        >\n          {item.name}\n        </Button>\n      ))}\n    </div>\n  );\n\n  return (\n    <div style={{ marginBottom: 70 }}>\n      <h2 id={capitalize(funDetails.name + '()' + ' details')}>\n        &#128270; <code>{funDetails.name}</code> function parameters\n        <a\n          style={{ marginLeft: '15px', fontSize: '14px' }}\n          href={funDetails.docUrl}\n        >\n          &rarr; see full doc\n        </a>\n      </h2>\n\n      <h3>&rarr; Description</h3>\n      <p>{funDetails.description}</p>\n\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'start',\n          alignItems: 'baseline',\n          gap: 14,\n        }}\n      >\n        <h3 style={{ width: 'auto', flexWrap: 'nowrap', whiteSpace: 'nowrap' }}>\n          &rarr; Arguments\n        </h3>\n        {argumentButtons}\n      </div>\n\n      <Row>\n        <Col md={8}>\n          <div style={{ fontSize: 16 }}>\n            <p className=\"argumentSectionTitle\">Description</p>\n            <p className=\"little-text\">{selectedParameterInfo.description}</p>\n\n            <p className=\"argumentSectionTitle\">\n              Possible values &rarr; {'  '}\n              <span className=\"parameterTypePill\">\n                {selectedParameterInfo.type}\n              </span>\n            </p>\n            <p className=\"little-text\">{selectedParameterInfo.howToUse}</p>\n            {selectedParameterInfo.options && (\n              <>\n                <div\n                  style={{ display: 'flex', gap: 2, alignItems: 'baseline' }}\n                >\n                  {selectedParameterInfo.options.map((opt, i) => {\n                    return (\n                      <Button\n                        size=\"sm\"\n                        className={i === selectedOpt ? 'isButtonSelected' : ''}\n                        onClick={() => setSelectedOpt(i)}\n                      >\n                        {opt.name}\n                      </Button>\n                    );\n                  })}\n                </div>\n                <p>{selectedParameterInfo.options[selectedOpt].explanation}</p>\n              </>\n            )}\n\n            <p className=\"argumentSectionTitle\">Code Example</p>\n            <div style={{ backgroundColor: 'white' }}>\n              <CodeChunk hasWhiteBackground>\n                {selectedParameterInfo.options\n                  ? selectedParameterInfo.basicUsage.replace(\n                      'paramgoeshere',\n                      selectedParameterInfo.options[selectedOpt].name\n                    )\n                  : selectedParameterInfo.basicUsage}\n              </CodeChunk>\n            </div>\n          </div>\n        </Col>\n\n        <Col md={4}>\n          <br />\n          <Link to={'/' + selectedParameterInfo.post}>\n            <ChartImage\n              imgName={selectedOptInfo?.img || selectedParameterInfo.img}\n              caption={'More about the ' + funDetails.name + ' function.'}\n            />\n          </Link>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\n\nconst name = 'scatterplot';\nconst description = (\n  <>\n    <p>\n      The <code>scatterplot()</code> function of{' '}\n      <a href=\"https://python-graph-gallery.com/seaborn/\">seaborn</a> creates a\n      scatter plot to visualize the relationship between two continuous\n      variables. It displays each observation as a point on a two-dimensional\n      plane.\n    </p>\n  </>\n);\n\nconst docUrl = 'https://seaborn.pydata.org/generated/seaborn.scatterplot.html';\n\n//\n//\n//\n//\n//\n\nconst param1 = {\n  name: 'data',\n  description: (\n    <p>\n      Dataframe-like (pandas, numpy, polars...) with the columns we want to\n      plot.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.scatterplot(\n  data=df,\n  x='sepal_length',\n  y='sepal_width'\n)\n`.trim(),\n  type: 'dataframe',\n  howToUse: (\n    <div>\n      <p>\n        It just has to be a <code>pandas.DataFrame</code> (columns are\n        variables),\n        <code>numpy.ndarray</code> (rows/columns are variables), or any\n        mapping/sequence (dictionaries/lists)\n      </p>\n      <p>\n        Supports both long-form (each variable in its own column) and wide-form\n        (variables in separate columns; reshaped internally).\n      </p>\n    </div>\n  ),\n  img: '40_Basic_Scatterplot_seaborn',\n  post: '40-basic-scatterplot-seaborn',\n};\n//\n//\n//\n//\n//\nconst param2 = {\n  name: 'x',\n  description: (\n    <p>Variable name that specify which column to plot on the x-axis.</p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.scatterplot(\n  data=df,\n  x='sepal_length',\n  y='sepal_width',\n)\n`.trim(),\n  type: 'string',\n  howToUse: (\n    <p>\n      The simplest usage is to specify a column name (string) of a numerical\n      variable in <code>data</code>. Alternatively, you can omit{' '}\n      <code>data</code> and pass a vector-like object of numerical values to{' '}\n      <code>x</code>.\n    </p>\n  ),\n  img: '40_Basic_Scatterplot_seaborn',\n  post: '40-basic-scatterplot-seaborn',\n};\n//\n//\n//\n//\n//\nconst param3 = {\n  name: 'y',\n  description: (\n    <p>Variable name that specify which column to plot on the y-axis.</p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.scatterplot(\n  data=df,\n  x='sepal_length',\n  y='sepal_width',\n)\n`.trim(),\n  type: 'string',\n  howToUse: (\n    <p>\n      The simplest usage is to specify a column name (string) of a numerical\n      variable in <code>data</code>. Alternatively, you can omit{' '}\n      <code>data</code> and pass a vector-like object of numerical values to{' '}\n      <code>y</code>.\n    </p>\n  ),\n  img: '40_Basic_Scatterplot_seaborn',\n  post: '40-basic-scatterplot-seaborn',\n};\n//\n//\n//\n//\n//\nconst param4 = {\n  name: 'color',\n  description: (\n    <p>\n      Sets the color of the scatter points. Can be a single color for all points\n      or mapped to a variable using the <code>hue</code> parameter.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.scatterplot(\n  data=df,\n  x='sepal_length',\n  y='sepal_width',\n  color='purple'\n)\n`.trim(),\n  type: 'string',\n  howToUse: (\n    <p>\n      Can be a color name, a Hex code, or an RGB value. Read{' '}\n      <a href=\"https://python-graph-gallery.com/python-colors/\">this post</a> to\n      learn more.\n    </p>\n  ),\n  img: '40_Basic_Scatterplot_seaborn',\n  post: '40-basic-scatterplot-seaborn',\n};\n\n//\n//\n//\n//\n//\nconst param5 = {\n  name: 'hue',\n  description: (\n    <p>\n      <code>hue</code> is the name of the variable that determines the color of\n      scatter points. It allows for grouping and differentiating data points.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.scatterplot(\n  data=df,\n  x='sepal_length',\n  y='sepal_width',\n  hue='species'\n)\n`.trim(),\n  type: 'string',\n  howToUse: (\n    <p>\n      Specify the column name in your dataset that you want to use for\n      color-coding the points.\n    </p>\n  ),\n  img: '43_seaborn_map_color_to_a_avariable3',\n  post: '43-use-categorical-variable-to-color-scatterplot-seaborn',\n};\n\n//\n//\n//\n//\n//\nconst param6 = {\n  name: 'size',\n  description: (\n    <p>\n      Determines the size of the scatter points. Can be a fixed value or mapped\n      to a variable.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.scatterplot(\n  data=df,\n  x='sepal_length',\n  y='sepal_width',\n  size='petal_length'\n)\n`.trim(),\n  type: 'string or number',\n  howToUse: (\n    <p>\n      Use a number for fixed size or a column name to vary point sizes based on\n      data.\n    </p>\n  ),\n  img: 'bubble-plot-with-seaborn',\n  post: 'bubble-plot-with-seaborn',\n};\n\n//\n//\n//\n//\n//\nconst param7 = {\n  name: 'style',\n  description: (\n    <p>\n      <code>style</code> determines the marker style for scatter points. It can\n      be used to represent an additional categorical variable.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.scatterplot(\n  data=df,\n  x='sepal_length',\n  y='sepal_width',\n  style='species'\n)\n`.trim(),\n  type: 'string',\n  howToUse: (\n    <p>\n      Specify a column name to vary marker styles based on categories in that\n      column.\n    </p>\n  ),\n  img: '41_Scatterplot_change_marker_shape_seaborn',\n  post: '41-control-marker-features',\n};\n\n//\n//\n//\n//\n//\nconst param8 = {\n  name: 'legend',\n  description: (\n    <p>\n      Determines whether to show the legend for hue, size, or style mappings.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.scatterplot(\n  data=df,\n  x='sepal_length',\n  y='sepal_width',\n  hue='species',\n  legend=True\n)\n`.trim(),\n  type: 'boolean',\n  howToUse: (\n    <p>\n      Set to <code>True</code> to show the legend, <code>False</code> to hide\n      it.\n    </p>\n  ),\n  img: '43_seaborn_map_color_to_a_avariable3',\n  post: '43-use-categorical-variable-to-color-scatterplot-seaborn',\n};\n\nconst param9 = {\n  name: 'palette',\n  description: (\n    <p>\n      Defines colors for the hue semantic. It can be a list of colors or a\n      matplotlib colormap.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\nfrom pypalettes import get_hex\ndf = sns.load_dataset('iris')\n\n# Load the 'Acadia' palette\npalette = get_hex('Acadia')\n\n# Plot\nsns.scatterplot(\n  data=df,\n  x='sepal_length',\n  y='sepal_width',\n  hue='species',\n  palette=palette\n)\n`.trim(),\n  type: 'list',\n  howToUse: (\n    <div>\n      <p>\n        This parameter is used <b>in combination</b> with the <code>hue</code>{' '}\n        parameter and will a assign a different color to each category in{' '}\n        <code>hue</code>.\n      </p>\n      <p>\n        Moreover, the <a href=\"/color-palette-finder\">pypalettes library</a> can\n        help you find the best colors for your chart by providing access to\n        thousands of pre-made color palette.\n      </p>\n    </div>\n  ),\n  img: '43-use-categorical-variable-to-color-scatterplot-seaborn-pypalettes',\n  post: '43-use-categorical-variable-to-color-scatterplot-seaborn',\n};\n\nexport const scatterplot = {\n  name,\n  description,\n  docUrl,\n  parameters: [\n    param1,\n    param2,\n    param3,\n    param4,\n    param5,\n    param6,\n    param7,\n    param8,\n    param9,\n  ],\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport {\n  Matplotlib,\n  Pandas,\n  Plotly,\n  Plotnine,\n  Seaborn,\n} from '../components/MiscellaneousLogos';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\nimport { scatterplot } from '../functions/scatterplot';\nimport FunctionExploration from '../components/FunctionExploration';\n\nconst chartDescription = (\n  <>\n    <p>\n      A{' '}\n      <a href=\"https://www.data-to-viz.com/graph/scatter.html\">scatter plot</a>{' '}\n      displays the relationship between 2 numeric variables, one being displayed\n      on the X axis (horizontal) and the other on the Y axis (vertical). Each\n      data point is represented as a <b>circle</b>.\n    </p>\n    <p>\n      Several tools allow to build scatterplots in python.{' '}\n      <Link href=\"/seaborn\">Seaborn</Link> is probably the most straightforward\n      library for the job, but <Link href=\"/matplotlib\">matplotlib</Link> allows\n      a greater level of customization. If you are looking for an interactive\n      chart, <Link href=\"/plotly\">plotly</Link> is definitely the way to go.\n    </p>\n    <p>\n      This page provides many examples of scatterplots made with those Python\n      tools, going from <b>simple examples</b> to <b>highly customized</b>{' '}\n      versions.\n    </p>\n  </>\n);\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# use the function scatterplot() to make a scatterplot\nsns.scatterplot(x=df[\"sepal_length\"], y=df[\"sepal_width\"])\n`;\n\nconst quickCodeMatplotlib = `# libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\n# Create a dataset:\ndf=pd.DataFrame({'x_values': range(1,101), 'y_values': np.random.randn(100)*15+range(1,101) })\n\n# plot\nplt.plot( 'x_values', 'y_values', data=df, linestyle='none', marker='o')\nplt.show()\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Scatterplot\"\n    seoDescription=\"A collection of scatterplot examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function ScatterPlot() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Scatterplot\"\n        description={chartDescription}\n        chartType=\"scatter\"\n      />\n\n      <Container>\n        <h2 id=\"Quick start\">&#9201; Quick start (Seaborn)</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              The <code>scatterplot()</code> function of the{' '}\n              <code>Seaborn</code> library is definitely the best way to build a\n              scatterplot in seconds. 🔥\n            </p>\n            <p>\n              Simply pass a numeric column of a data frame to both the{' '}\n              <code>x</code> and <code>y</code> variable and the function will\n              handle the rest.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/40-basic-scatterplot-seaborn'}>\n              <ChartImage\n                imgName=\"40_Basic_Scatterplot_seaborn\"\n                caption=\"Basic boxplot with Python and Seaborn from various data input formats.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Common caveats\">\n            &#9888;&#65039; Scatterplot and overplotting\n          </h2>\n          <p>\n            The main danger with scatterplots is{' '}\n            <a href=\"https://www.data-to-viz.com/caveat/overplotting.html\">\n              overplotting\n            </a>\n            . When the sample size gets big, circles tend to overlap, making the\n            figure unreadable.\n          </p>\n          <p>\n            Several workarounds exist to fix the issue, like using opacity or\n            switching to another chart type:\n          </p>\n          <Row>\n            <ChartImageContainer\n              imgName=\"134_Fighting_overplotting1\"\n              caption=\"Basic boxplot. You can quickly read the median, quartiles and outliers of each group.\"\n              linkTo=\"/134-how-to-avoid-overplotting-with-python\"\n            />\n            <ChartImageContainer\n              imgName=\"134_Fighting_overplotting2\"\n              caption=\"If you add individual points with jitter, a bimodal distribution appears for group B\"\n              linkTo=\"/134-how-to-avoid-overplotting-with-python\"\n            />\n            <ChartImageContainer\n              imgName=\"134_Fighting_overplotting10\"\n              caption=\"If you have a very large dataset, the violin plot is a better alternative than jittering\"\n              linkTo=\"/134-how-to-avoid-overplotting-with-python\"\n            />\n          </Row>\n          <Link to=\"/134-how-to-avoid-overplotting-with-python\">\n            <Button size=\"sm\">Code and more</Button>\n          </Link>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Scatterplots with <code>Seaborn</code>\n        </h2>\n        <p>\n          <Link to=\"/seaborn\">Seaborn</Link> is a python library allowing to\n          make better charts easily. The <code>regplot()</code> function should\n          get you started in minutes. The{' '}\n          <Link to=\"/40-basic-scatterplot-seaborn\">first example</Link> below\n          explains how to build the most basic scatterplot with python. Then,\n          several types of customization are described: adding a{' '}\n          <Link to=\"/42-custom-linear-regression-fit-seaborn\">regression</Link>{' '}\n          line, tweaking <Link to=\"/41-control-marker-features\">markers</Link>{' '}\n          and <Link to=\"/44-control-axis-limits-of-plot-seaborn\">axis</Link>,\n          adding <Link to=\"/46-add-text-annotation-on-scatterplot\">labels</Link>{' '}\n          and more.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"40_Basic_Scatterplot_seaborn\"\n            caption=\"Most basic scatterplot with seaborn\"\n            linkTo=\"/40-basic-scatterplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"41_Scatterplot_change_marker_shape_seaborn\"\n            caption=\"Customize markers: color, size, opacity, type and more\"\n            linkTo=\"/41-control-marker-features\"\n          />\n          <ChartImageContainer\n            imgName=\"43_seaborn_map_color_to_a_avariable3\"\n            caption=\"Color dots according to a group\"\n            linkTo=\"/43-use-categorical-variable-to-color-scatterplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"44_seaborn_control_axis_limits\"\n            caption=\"Control X and Y axes limits\"\n            linkTo=\"/44-control-axis-limits-of-plot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"45_set_color_of_each_point_in_scatterplot_seaborn\"\n            caption=\"Control the marker's color according to their coordinates\"\n            linkTo=\"/45-control-color-of-each-marker-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"46_add_text_annotation_scatterplot_seaborn3\"\n            caption=\"Add labels manually on your scatterplot\"\n            linkTo=\"/46-add-text-annotation-on-scatterplot\"\n          />\n        </Row>\n        <br />\n        <p>\n          A nice way to add info and highlight trend in a scatter plot is to add\n          a <b>regression line</b> on top of the dots. Thanks to its{' '}\n          <code>regplot()</code> and <code>lmplot()</code> function, it&apos;s\n          quite easy!\n        </p>\n        <p>\n          The main difference between those 2 functions are that:\n          <ul>\n            <li>\n              <code>regplot()</code> is used for simple scatter plot with a\n              trend line\n            </li>\n            <li>\n              <code>lmplot()</code> can also be used for <b>facetting</b>: e.g\n              creating multiple scatter plots\n            </li>\n          </ul>\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"42_Scatterplot_custom_linear_fit_seaborn\"\n            caption=\"Add a regression thanks to the fit_reg parameter\"\n            linkTo=\"/42-custom-linear-regression-fit-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"47-faceted-scatter-plot-with-seaborn-1\"\n            caption=\"Split scatter plot by a category\"\n            linkTo=\"/47-faceted-scatter-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"47-faceted-scatter-plot-with-seaborn-2\"\n            caption=\"Faceted scatter plot with regression line\"\n            linkTo=\"/47-faceted-scatter-plot-with-seaborn\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <FunctionExploration funDetails={scatterplot} />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Related to Seaborn \">\n          &#128161; Other charts involving scatterplots and <code>Seaborn</code>\n        </h2>\n        <p>\n          If you are interested in scatterplots, some other chart could be\n          useful to you.\n        </p>\n        <p>\n          A scatterplot with{' '}\n          <Link to=\"/82-marginal-plot-with-seaborn\">marginal distribution</Link>{' '}\n          allows to check the distribution of both the <code>x</code> and{' '}\n          <code>y</code> variables. A{' '}\n          <Link to=\"/111-custom-correlogram\">correlogram</Link> allows to check\n          the relationship between each pair of numeric variables in a dataset.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot4\"\n            caption=\"Scatterplot with marginal distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"111_Correlogram_custom4\"\n            caption=\"Build a correlogram with the pairplot function\"\n            linkTo=\"/111-custom-correlogram\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Quick start\">&#9201; Quick start (Matplotlib)</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <Link to=\"/matplotlib\">Matplotlib</Link> also requires only a few\n              lines of code to draw a scatterplot thanks to its{' '}\n              <code>plot()</code> function. The resulting chart is not as\n              good-looking, but the function probably offers more flexibility in\n              term of customization.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/130-basic-matplotlib-scatterplot'}>\n              <ChartImage\n                imgName=\"130_Basic_Matplotlib_Scatterplot\"\n                caption=\"Most basic scatterplot with Matplotlib.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCodeMatplotlib}</CodeChunk>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Scatterplots with <code>Matplotlib</code>\n        </h2>\n        <p>\n          <code>Matplotlib</code> is another great alternative to build\n          scatterplots with python. As often, it takes a bit more lines of code\n          to get a decent chart, but allows more customization.\n        </p>\n        <p>\n          The examples below should get you covered for all the most common\n          problems: adding{' '}\n          <Link to=\"/193-annotate-matplotlib-chart\">markers</Link>, adding\n          <Link to=\"/193-annotate-matplotlib-chart\">labels</Link>, changing{' '}\n          <Link to=\"/131-custom-a-matplotlib-scatterplot\">shapes</Link> and\n          more.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"130_Basic_Matplotlib_Scatterplot\"\n            caption=\"Most basic scatterplot with Matplotlib\"\n            linkTo=\"/130-basic-matplotlib-scatterplot\"\n          />\n          <ChartImageContainer\n            imgName=\"131_Custom_Matplotlib_Scatterplot5\"\n            caption=\"Customize marker features: size, color, stroke, type and more\"\n            linkTo=\"/131-custom-a-matplotlib-scatterplot\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate6\"\n            caption=\"Display a math equation on your matplotlib chart\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate5\"\n            caption=\"Matplotlib: add horizontal and vertical ablines\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate2\"\n            caption=\"Highlight a specific area of the chart with Matplotlib\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate1\"\n            caption=\"Add an annotation to highlight a specific marker\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"manhattan-plot-with-matplotlib\"\n            caption=\"How to build a Manhattan plot with Python and Matplotlib\"\n            linkTo=\"/manhattan-plot-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib2\"\n            caption=\"Scatterplot with grouping and legend\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib6\"\n            caption=\"Legend customization: how to control location, add a background, customize labels and markers and more\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"scatterplot-and-log-scale-in-matplotlib\"\n            caption=\"How to use a log scale for the X or the Y axis.\"\n            linkTo=\"/scatterplot-and-log-scale-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"scatterplot-with-regression-fit-in-matplotlib\"\n            caption=\"How to compute and add a linear regression to a scatterplot with Python and matplotlib\"\n            linkTo=\"/scatterplot-with-regression-fit-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"556-visualize-linear-regression-1\"\n            caption=\"Linear regression with statistics on top of a scatterplot\"\n            linkTo=\"/556-visualize-linear-regression\"\n          />\n          <ChartImageContainer\n            imgName=\"556-visualize-linear-regression-2\"\n            caption=\"Customized linear regression with statistics on top of a scatterplot\"\n            linkTo=\"/556-visualize-linear-regression\"\n          />\n          <ChartImageContainer\n            imgName=\"534-highly-customized-layout\"\n            caption=\"Subplot, title, and margin customization\"\n            linkTo=\"/534-highly-customized-layout\"\n          />\n          <ChartImageContainer\n            imgName=\"513-add-logo-matplotlib\"\n            caption=\"How to add an img into a matplotlib chart\"\n            linkTo=\"/513-add-logo-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-custom-annotations-matplotlib\"\n            caption=\"Link title and scatter plot with custom annotations\"\n            linkTo=\"/how-to-custom-title-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Plotly\">\n          <Plotly />\n          Scatterplots with <code>Plotly</code>\n        </h2>\n        <p>\n          If you are looking for an <b>interactive</b> scatterplot,{' '}\n          <Link href=\"/plotly\">plotly</Link> is definitely the way to go. Try\n          hovering over the graph below!\n        </p>\n        <iframe\n          src=\"../../interactiveCharts/scatterplot-plotly-grouping.html\"\n          width=\"850\"\n          height=\"700\"\n        ></iframe>\n        <p>\n          Interactivity is a real plus for scatterplots. It is very useful to\n          have a <b>tooltip</b> associated to every markers to get some\n          additional information about it. <b>Zooming</b> on a specific area of\n          the scatterplot is also very valuable sometimes.\n        </p>\n        <p>\n          The examples below should help you get started quickly with the plotly\n          API:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"511-interactive-scatterplot-with-plotly-1\"\n            caption=\"Most basic scatterplot with plotly\"\n            linkTo=\"/511-interactive-scatterplot-with-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"511-interactive-scatterplot-with-plotly-2\"\n            caption=\"Plotly scatterplot with several levels of grouping\"\n            linkTo=\"/511-interactive-scatterplot-with-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"511-interactive-scatterplot-with-plotly-3\"\n            caption=\"Plotly scatterplot with a trend line\"\n            linkTo=\"/511-interactive-scatterplot-with-plotly\"\n          />\n        </Row>\n      </Container>\n      <Spacing />\n      <Container>\n        <h2 id=\"Pandas\">\n          <Pandas />\n          Scatterplots with <code>Pandas</code>\n        </h2>\n        <p>\n          <a href=\"https://python-graph-gallery.com/pandas/\">Pandas</a>, a data\n          analysis library, also offers functions to build scatterplots. It uses\n          matplotlib under the hood, but the <b>syntax is more concise</b>.\n        </p>\n        <p>\n          The main difference is that we have to work with <b>Pandas objects</b>{' '}\n          such as <code>Series</code> and <code>DataFrame</code>.\n        </p>\n        <p>\n          The examples below should help you get started quickly with the pandas\n          API:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"535-introduction-to-scatter-plot-with-pandas\"\n            caption=\"Introduction to scatter plot with pandas\"\n            linkTo=\"/535-introduction-to-scatter-plot-with-pandas\"\n          />\n          <ChartImageContainer\n            imgName=\"536-customizing-scatter-plots-with-pandas\"\n            caption=\"Customize scatter plots with pandas\"\n            linkTo=\"/536-customizing-scatter-plots-with-pandas\"\n          />\n          <ChartImageContainer\n            imgName=\"537-scatter-plots-grouped-by-color-with-pandas\"\n            caption=\"Scatter plots grouped by color with pandas\"\n            linkTo=\"/537-scatter-plots-grouped-by-color-with-pandas\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n      <Container>\n        <h2 id=\"Plotnine\">\n          <Plotnine />\n          Scatterplots with <code>Plotnine</code>\n        </h2>\n        <p>\n          <a href=\"https://python-graph-gallery.com/plotnine/\">Plotnine</a> is a\n          python library allowing to make charts using the grammar of graphics\n          principles. The <code>geom_point()</code> function should get you\n          started in minutes.\n        </p>\n        <p>\n          The examples below should help you get started quickly with the\n          plotnine API:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"573-introduction-scatterplot-plotnine-1\"\n            caption=\"Most basic scatterplot with plotnine\"\n            linkTo=\"/573-introduction-scatterplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"573-introduction-scatterplot-plotnine-2\"\n            caption=\"Change color markers\"\n            linkTo=\"/573-introduction-scatterplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"573-introduction-scatterplot-plotnine-3\"\n            caption=\"Color by group\"\n            linkTo=\"/573-introduction-scatterplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"574-custom-marker-scatter-plotnine-1\"\n            caption=\"Change marker size\"\n            linkTo=\"/574-custom-marker-scatter-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"574-custom-marker-scatter-plotnine-2\"\n            caption=\"Changer marker shape\"\n            linkTo=\"/574-custom-marker-scatter-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"574-custom-marker-scatter-plotnine-3\"\n            caption=\"Changer marker transparency\"\n            linkTo=\"/574-custom-marker-scatter-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"574-custom-marker-scatter-plotnine-4\"\n            caption=\"Custom edge colors\"\n            linkTo=\"/574-custom-marker-scatter-plotnine\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n      <Container>\n        <h2 id=\"Best\">\n          <Matplotlib />\n          Best python scatterplot examples\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://python-graph-gallery.com\">Python graph gallery</a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works.\n        </p>\n        <p>\n          The <Link to=\"/web-text-repel-with-matplotlib\">first example</Link>{' '}\n          below demos how to add clean labels on a scatterplot, automatically\n          avoiding overlapping. It also explains how to control background,\n          fonts, titles and more.\n        </p>\n        <p>\n          If you want to display your work here, please drop me a word or even\n          better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={4}>\n            <Link to={'/web-text-repel-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-text-repel-with-matplotlib-square'}\n                caption={\n                  'Learn how to use the adjustText library to add many labels with no overlaps.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link\n              to={'/web-scatterplot-text-annotation-and-regression-matplotlib'}\n            >\n              <ChartImage\n                imgName={\n                  'web-scatterplot-text-annotation-and-regression-matplotlib-square'\n                }\n                caption={\n                  'Scatterplot with regression fit, group colors and non-overlapping labels.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to={'/web-scatterplot-astronaut'}>\n              <ChartImage\n                imgName={'web-scatterplot-astronaut-square'}\n                caption={\n                  'Dark mode scatterplot with custom annotations, title and explanations. All of that with a very good appearance!'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to={'/web-scatterplot-with-images-in-circles'}>\n              <ChartImage\n                imgName={'web-scatterplot-with-images-in-circles'}\n                caption={\n                  'A scatter plot with images inside each marker to provide additional context'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to={'/web-bubble-plot-with-annotations-and-custom-features'}>\n              <ChartImage\n                imgName={'web-bubble-plot-with-annotations-and-custom-features'}\n                caption={\n                  'A scatter plot with custom annotations and colors, with some markers being circled'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to={'/web-scatter-with-customized-annotations'}>\n              <ChartImage\n                imgName={'web-scatter-with-customized-annotations-square'}\n                caption={\n                  'A scatter plot with custom annotations and specific highlights'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={8}>\n            <Link to={'/web-scatterplot-with-categorical-zoom-facets'}>\n              <ChartImage\n                imgName={'web-scatterplot-with-categorical-zoom-facets'}\n                caption={\n                  'A lattice of scatter plots, with data excerpted by category from a main joint axes onto faceted zoom grids'\n                }\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"correlation\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","capitalize","s","charAt","toUpperCase","slice","FunctionExploration","_selectedParameterInf","funDetails","selectedParameter","setSelectedParameter","useState","selectedOpt","setSelectedOpt","selectedParameterInfo","parameters","selectedOptInfo","options","argumentButtons","map","item","i","Button","key","value","size","onClick","style","marginBottom","id","marginLeft","fontSize","href","docUrl","description","display","flexDirection","justifyContent","alignItems","gap","width","flexWrap","whiteSpace","Row","type","howToUse","opt","explanation","backgroundColor","CodeChunk","hasWhiteBackground","basicUsage","replace","post","img","SEO","title","seoDescription","keywords","lang","content","property","scatterplot","trim","chartDescription","quickCode","quickCodeMatplotlib","Head","ScatterPlot","Layout","isTocEnabled","TitleAndDescription","chartType","Container","Spacing","Seaborn","Matplotlib","Plotly","src","height","Pandas","Plotnine","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}