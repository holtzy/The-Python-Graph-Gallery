"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[8907],{3572:function(e,t,a){a.d(t,{A:function(){return r}});var n=a(6540),l=a(4794),o=a(2532);const i=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function r(e){let{imgName:t,caption:a}=e;if(i.includes(t))return n.createElement("p",null,"TODO");const r=(0,l.useStaticQuery)("2757772085").allFile.edges.find((e=>e.node.name.includes(t)));return r?n.createElement(n.Fragment,null,n.createElement("div",{className:"chartImageContainer"},n.createElement(o.G,{image:r.node.childImageSharp.gatsbyImageData,alt:a,className:"chartImageImg"}),a&&n.createElement("div",{className:"chartImageOverlay"},n.createElement("div",{className:"chartImageOverlayText"},n.createElement("p",null,a))))):null}},3365:function(e,t,a){a.d(t,{A:function(){return r}});var n=a(6540),l=a(3572),o=a(1105),i=a(4794);function r(e){let{imgName:t,caption:a,linkTo:r}=e;return n.createElement(o.A,{xs:12,md:4},n.createElement(i.Link,{to:r},n.createElement(l.A,{imgName:t,caption:a})))}},8360:function(e,t,a){a.d(t,{A:function(){return p}});var n=a(4794),l=a(6540),o=a(5615),i=a(4479),r=a(1105),c=a(3572),m=a(5951);const s=e=>"string"!=typeof e?"":e.charAt(0).toUpperCase()+e.slice(1);function p(e){var t;let{funDetails:a}=e;const{0:p,1:u}=(0,l.useState)(0),{0:h,1:d}=(0,l.useState)(0);if(!a)return null;const g=a.parameters[p],E=null===(t=g.options)||void 0===t?void 0:t[h],b=l.createElement("div",null,a.parameters.map(((e,t)=>l.createElement(o.A,{key:t,value:e.name,size:"sm",onClick:()=>u(t),className:p===t?"isButtonSelected":""},e.name))));return l.createElement("div",{style:{marginBottom:70}},l.createElement("h2",{id:s(a.name+" details")},"🔎 ",l.createElement("code",null,a.name)," function parameters",l.createElement("a",{style:{marginLeft:"15px",fontSize:"14px"},href:a.docUrl},"→ see full doc")),l.createElement("h3",null,"→ Description"),l.createElement("p",null,a.description),l.createElement("div",{style:{display:"flex",flexDirection:"row",justifyContent:"start",alignItems:"baseline",gap:14}},l.createElement("h3",{style:{width:"auto",flexWrap:"nowrap",whiteSpace:"nowrap"}},"→ Arguments"),b),l.createElement(i.A,null,l.createElement(r.A,{md:8},l.createElement("div",{style:{fontSize:16}},l.createElement("p",{className:"argumentSectionTitle"},"Description"),l.createElement("p",{className:"little-text"},g.description),l.createElement("p",{className:"argumentSectionTitle"},"Possible values → ","  ",l.createElement("span",{className:"parameterTypePill"},g.type)),l.createElement("p",{className:"little-text"},g.howToUse),g.options&&l.createElement(l.Fragment,null,l.createElement("div",{style:{display:"flex",gap:2,alignItems:"baseline"}},g.options.map(((e,t)=>l.createElement(o.A,{size:"sm",className:t===h?"isButtonSelected":"",onClick:()=>d(t)},e.name)))),l.createElement("p",null,g.options[h].explanation)),l.createElement("p",{className:"argumentSectionTitle"},"Code Example"),l.createElement("div",{style:{backgroundColor:"white"}},l.createElement(m.A,{hasWhiteBackground:!0},g.options?g.basicUsage.replace("paramgoeshere",g.options[h].name):g.basicUsage)))),l.createElement(r.A,{md:4},l.createElement("br",null),l.createElement(n.Link,{to:"/"+g.post},l.createElement(c.A,{imgName:(null==E?void 0:E.img)||g.img,caption:"More about the "+a.name+" function."})))))}},435:function(e,t,a){a.d(t,{k:function(){return l}});var n=a(6540);const l=e=>{let{title:t,seoDescription:a,keywords:l,image:o}=e;return n.createElement(n.Fragment,null,n.createElement("title",null,t),n.createElement("html",{lang:"en"}),n.createElement("meta",{name:"description",content:a||"How to build a chart with Python"}),n.createElement("meta",{name:"author",content:"Yan Holtz"}),n.createElement("meta",{name:"keywords",content:l||"python, chart, graph, code, viz, dataviz"}),n.createElement("meta",{property:"og:site_name",content:"The Python Graph Gallery"}),n.createElement("meta",{property:"og:title",content:t}),n.createElement("meta",{property:"og:image",content:o||"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true"}),n.createElement("meta",{property:"og:description",content:a}),n.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),n.createElement("meta",{name:"twitter:site",content:"@R_Graph_Gallery"}))}},1985:function(e,t,a){a.d(t,{l:function(){return o}});var n=a(6540),l=a(7041);const o={name:"fig_arrow()",description:n.createElement(n.Fragment,null,n.createElement("p",null,"The ",n.createElement("code",null,"fig_arrow()")," function of drawarrow add an arrow on a given matplotlib figure. You can customize any of its properties such as its color, head/tail width, opacity...")),docUrl:"https://github.com/JosephBARBIERDARNAL/drawarrow",parameters:[{name:"tail_position",description:n.createElement("p",null,"Array-like of length 2 specifying the tail position of the arrow on the figure."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"list",howToUse:n.createElement("p",null,"The first value is the x-axis position, and the second value is the y-axis position."),img:"introduction-drawarrow-1",post:"drawarrow#Custom"},{name:"head_position",description:n.createElement("p",null,"Array-like of length 2 specifying the head position of the arrow on the figure."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"list",howToUse:n.createElement("p",null,"The first value is the x-axis position, and the second value is the y-axis position."),img:"introduction-drawarrow-1",post:"drawarrow#Custom"},{name:"radius",description:n.createElement("p",null,"Curvature of the arrow (default to 0.1)."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  radius=0.5,\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"number",howToUse:n.createElement("p",null,"It can be any value, but in most cases you want it to be between -1 and 1."),img:"tuto-drawarrow-1-square",post:"drawarrow#Custom"},{name:"color",description:n.createElement("p",null,"Color of the arrow"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  color='red',\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"string",howToUse:n.createElement("div",null,l.Wz),img:"tuto-drawarrow-2-square",post:"drawarrow#Custom"},{name:"tail_width",description:n.createElement("p",null,"Specify the width of the tail of the arrow."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  tail_width=15,\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"number",howToUse:n.createElement("div",null,n.createElement("p",null,"An arrow has 2 main parts: the head and the tail. Everything that is not the head is the tail."),n.createElement("p",null,"In most cases, you want the width of the tail to be between 1 and 50.")),img:"tuto-drawarrow-4-square",post:"drawarrow#Custom"},{name:"head_width",description:n.createElement("p",null,"Width of the head of the arrow."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  head_width=50,\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"number",howToUse:n.createElement("p",null,"Specify a value generally between 1 and 50 to modify the width of the head of your arrow."),img:"tuto-drawarrow-5-square",post:"drawarrow#Custom"},{name:"head_length",description:n.createElement("p",null,"Length of the head of the arrow"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  head_length=50,\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"number",howToUse:n.createElement("p",null,"The length of the head of the arrow is generally between 1 and 50. The default value is 8."),img:"tuto-drawarrow-6-square",post:"drawarrow#Custom"},{name:"hatch",description:n.createElement("p",null,"Symbol of the pattern to fill the arrow"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(dpi=150, figsize=(10,10))\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  hatch='*',\n  mutation_scale=20,\n  edgecolor='red',\n  facecolor='black',\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"string",howToUse:n.createElement("div",null,l.Pq),img:"tuto-drawarrow-7-square",post:"drawarrow#Custom"},{name:"mutation_scale",description:n.createElement("p",null,"Value used to scale the entire arrow (head and body)"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(dpi=150, figsize=(10,10))\n\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  mutation_scale=2,\n  fig=fig\n)\n\nfig_arrow(\n  tail_position=[0.2, 0.3],\n  head_position=[0.6, 0.8],\n  mutation_scale=10,\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"number",howToUse:n.createElement("p",null,"This argument makes easier to change the size of the arrow by multiplying all style properties by its value. If ",n.createElement("code",null,"mutation_scale=4"),", the arrow will be 4 times larger."),img:"tuto-drawarrow-8-square",post:"drawarrow#Custom"},{name:"alpha",description:n.createElement("p",null,"Opacity of the arrow"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(dpi=150, figsize=(10,10))\n\nfig_arrow(\n  tail_position=[0.2, 0.3],\n  head_position=[0.6, 0.8],\n  mutation_scale=10,\n  alpha=0.5,\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"number",howToUse:n.createElement("div",null,l.D$),img:"tuto-drawarrow-9-square",post:"drawarrow#Custom"},{name:"invert",description:n.createElement("p",null,"Whether to invert the curvature of the arrow"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(dpi=150, figsize=(10,10))\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  mutation_scale=3,\n  radius=0.4,\n  fig=fig\n)\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  mutation_scale=3,\n  radius=0.4,\n  invert=True,\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"bool",howToUse:n.createElement("p",null,"If set to ",n.createElement("code",null,"True"),", the curvature of the arrow will be inverted. Another way of doing so is to set the radius to a negative value."),img:"tuto-drawarrow-10-square",post:"drawarrow#Custom"}]}},7041:function(e,t,a){a.d(t,{D$:function(){return l},DS:function(){return p},Dg:function(){return s},JE:function(){return g},Pq:function(){return c},Wf:function(){return f},Wz:function(){return o},XH:function(){return m},Z8:function(){return u},_d:function(){return d},_h:function(){return b},az:function(){return h},nM:function(){return E},pE:function(){return r},xZ:function(){return i}});var n=a(6540);const l=n.createElement("p",null,"Values range from ",n.createElement("code",null,"0")," (completely transparent) to ",n.createElement("code",null,"1")," ","(completely opaque)."),o=n.createElement("p",null,"Can be a color name, a Hex code, or an RGB value."," ",n.createElement("a",{href:"/python-colors"},"Learn more about colors.")),i=n.createElement("p",null,"Controls the drawing order of plot elements."),r=n.createElement("p",null,"Higher zorder values are drawn on top of lower values. This is useful when you want certain elements to appear above others."),c=n.createElement("p",null,"It must be in one of: ",n.createElement("code",null,"'/'"),", ",n.createElement("code",null,"'\\'"),", ",n.createElement("code",null,"'|'"),",",n.createElement("code",null,"'-'"),","," ",n.createElement("code",null,"'+'"),", ",n.createElement("code",null,"'x'"),","," ",n.createElement("code",null,"'o'"),", ",n.createElement("code",null,"'O'"),",",n.createElement("code",null,"'.'"),", ",n.createElement("code",null,"'*'")),m=n.createElement("p",null,"Specify the dataset column to use for color encoding in the chart. It allows for grouping and differentiating data points."),s=n.createElement("p",null,"Column name to use for color encoding in the chart. It's usually a categorical variable."),p=n.createElement("div",null,n.createElement("p",null,"It just has to be a ",n.createElement("code",null,"pandas.DataFrame")," (columns are variables),",n.createElement("code",null,"numpy.ndarray")," (rows/columns are variables), or any mapping/sequence (dictionaries/lists)"),n.createElement("p",null,"Supports both long-form (each variable in its own column) and wide-form (variables in separate columns; reshaped internally).")),u=n.createElement("p",null,"Dataframe-like (pandas, numpy, polars...) with the columns we want to plot."),h=n.createElement("p",null,"Determines the style of the line in the plot."),d=n.createElement("p",null,"Common values include '-' (solid), '--' (dashed), ':' (dotted), and '-.' (dash-dot)."),g=n.createElement("p",null,"Sets the width of the plotted line."),E=n.createElement("p",null,"Larger values create thicker lines. The default value is usually"," ",n.createElement("code",null,"1"),"."),b=n.createElement("p",null,"Defines colors for the ",n.createElement("code",null,"hue")," semantic. It can be a list of colors or a matplotlib colormap."),f=n.createElement("div",null,n.createElement("p",null,"This parameter is used ",n.createElement("b",null,"in combination")," with the ",n.createElement("code",null,"hue")," ","parameter and will a assign a different color to each category in"," ",n.createElement("code",null,"hue"),"."),n.createElement("p",null,"Moreover, the ",n.createElement("a",{href:"/color-palette-finder"},"pypalettes library")," can help you find the best colors for your chart by providing access to thousands of pre-made color palette."))},4282:function(e,t,a){a.r(t),a.d(t,{Head:function(){return U},default:function(){return D}});var n=a(6540),l=a(7238),o=a(7906),i=a(3048),r=a(9441),c=a(4479),m=a(3365),s=a(834),p=a(4794),u=a(8360),h=a(1985),d=a(7332),g=a(3691),E=a(2485),b=a.n(E),f=a(6519),w=a(5615),y=a(4848);const A=()=>{},k=n.forwardRef((({bsPrefix:e,name:t,className:a,checked:n,type:l,onChange:o,value:i,disabled:r,id:c,inputRef:m,...s},p)=>(e=(0,f.oU)(e,"btn-check"),(0,y.jsxs)(y.Fragment,{children:[(0,y.jsx)("input",{className:e,name:t,type:l,value:i,ref:m,autoComplete:"off",checked:!!n,disabled:!!r,onChange:o||A,id:c}),(0,y.jsx)(w.A,{...s,ref:p,className:b()(a,r&&"disabled"),type:void 0,role:void 0,as:"label",htmlFor:c})]}))));k.displayName="ToggleButton";var x=k,v=a(1105),_=a(5951),T=a(3572),N=a(5216),z=a(435);const C="<p><code>Matplotlib</code> is the most famous library for data visualization with <code>python</code>. It allows to create literally every type of chart with a great level of customization. This page provides some general tips that can be applied on any kind of chart made with <code>matplotlib</code> like customizing titles or colors. If you're looking at creating a specific chart type, visit <a href='https://python-graph-gallery.com'>the gallery</a> instead.</p>",I="# Library\nimport matplotlib.pyplot as plt\n\n# Create data\nx = [1, 2, 3, 4, 5]\ny = [1, 4, 6, 8, 4]\n\n# Area plot\nplt.fill_between(x, y)\nplt.show()\n",P="# import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Create a data frame\ndf = pd.DataFrame ({'Group':  ['A', 'B', 'C', 'D', 'E'], 'Value': [1,5,4,3,9]})\n\n# Create horizontal bars\nplt.barh(y=df.Group, width=df.Value);\n\n# Add title\nplt.title('A simple barplot');\n",L="# import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Create a data frame\ndf = pd.DataFrame ({'Group':  ['A', 'B', 'C', 'D', 'E'], 'Value': [1,5,4,3,9]})\n\n# Initialize a Figure and an Axes\nfig, ax = plt.subplots()\n\n# Fig size\nfig.set_size_inches(9,9)\n\n# Create horizontal bars\nax.barh(y=df.Group, width=df.Value);\n\n# Add title\nax.set_title('A simple barplot');\n",S=["seaborn-darkgrid","seaborn-notebook","classic","seaborn-ticks","grayscale","bmh","seaborn-talk","dark_background","ggplot","fivethirtyeight","_classic_test","seaborn-colorblind","seaborn-deep","seaborn-whitegrid","seaborn-bright","seaborn-poster","seaborn-muted","seaborn-paper","seaborn-white","seaborn-pastel","seaborn-dark","seaborn","seaborn-dark-palette"],U=()=>n.createElement(z.k,{title:"Matplotlib",seoDescription:"A collection of charts, tips and tricks on the Matplotlib Python library."});function D(){const[e,t]=n.useState(S[0]);S.map(((a,l)=>n.createElement(x,{type:"radio",active:!0,key:l,className:"functionButton",variant:"secondary",size:"sm",value:a,checked:e===a,onChange:e=>t(e.currentTarget.value)},a)));return n.createElement(o.A,{isTocEnabled:!0},n.createElement(l.A,{title:"Matplotlib",description:C,chartType:"matplotlib"}),n.createElement(i.A,null,n.createElement("h2",{id:"Quick"},"⏱ Quick start"),n.createElement(c.A,{className:"align-items-center"},n.createElement(v.A,{md:6},n.createElement("p",null,n.createElement("code",null,"Matplotlib")," is the most famous python data visualization library. It is widely used and most of other viz libraries (like ",n.createElement("code",null,"seaborn"),") are actually built on top of it."),n.createElement("p",null,"Once installed, matplotlib must be imported, usually using"," ",n.createElement("code",null,"import matplotlib.pyplot as plt"),". You can then use use the functions available in the ",n.createElement("code",null,"plt")," object.")),n.createElement(v.A,{md:6},n.createElement(p.Link,{to:"/240-basic-area-chart"},n.createElement(T.A,{imgName:"240_basic_area_chart",caption:"The most basic area chart one can make with python and matplotlib"})))),n.createElement(_.A,null,I)),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Lexicon"},n.createElement(g.$P,null),"Basic vocabulary"),n.createElement("p",null,"The figure below describes the anatomy of a ",n.createElement("code",null,"matplotlib")," ","charts. It names all the main components, names that you need to know to understand the documentation properly."),n.createElement("p",null,"⚠️ ",n.createElement("u",null,"Disclaimer"),": this figure comes from the very complete"," ",n.createElement("a",{href:"https://matplotlib.org/stable/users/explain/quick_start.html#parts-of-a-figure"},"matplotlib documentation"),". Have a look at it for a thorough explanation on how this library works."),n.createElement("div",{style:{maxWidth:"600px",margin:"0 auto",padding:30}},n.createElement(T.A,{imgName:"matplotlib_vocabulary_new",caption:"Anatomy of a matplotlib chart: all the basic vocabulary you need to know to understand the documentation properly"})),n.createElement("a",{href:"https://matplotlib.org/stable"},n.createElement(w.A,{size:"sm"},"Matplotlib doc"))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"APIs"},n.createElement(g.$P,null),"Two distinct APIs"),n.createElement("p",null,"There are 2 main ways to build a chart with matplotlib: the"," ",n.createElement("code",null,"pyplot API")," and the ",n.createElement("code",null,"object-oriented API"),"."),n.createElement("p",null,"➡️ ",n.createElement("code",null,"pyplot API")),n.createElement("p",null,"Pyplot is a collection of functions, each function applying a change to a figure. For instance, ",n.createElement("code",null,"plt.barh()")," will build a barplot and ",n.createElement("code",null,"plt.title()")," will add a title to it."),n.createElement(_.A,null,P),n.createElement("br",null),n.createElement("br",null),n.createElement("p",null,"➡️ ",n.createElement("code",null,"object oriented API")),n.createElement("p",null,"The object oriented API usually starts by initializing one"," ",n.createElement("code",null,"Figure")," object and one or more ",n.createElement("code",null,"Axes")," object using the ",n.createElement("code",null,"subplot()")," function. Then the methods of those objects will be used to apply changes to the chart."),n.createElement(_.A,null,L),n.createElement("br",null),n.createElement("br",null),n.createElement("p",null,"See how the syntax slightly differs between both options? (",n.createElement("code",null,"plt.title")," versus ",n.createElement("code",null,"ax.set_title()"),". This is pretty confusing and I advise to have a look to the"," ",n.createElement("a",{href:"https://matplotlib.org/stable/api/index.html#usage-patterns"},"official documentation")," ","for a more thorough explanation. In the gallery, both APIs are used.")),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Title"},n.createElement(g.$P,null),"Customizing titles"),n.createElement("p",null,"The title is a key part of a good chart. It has to ",n.createElement("u",null,"summarize")," ","its key message in a few words. Always avoid to simply repeat what is displayed on each axis. Try to provide some more insight allowing to understand the main result instead."),n.createElement("p",null,"The ",n.createElement(p.Link,{to:"/190-custom-matplotlib-title"},"post #190")," goes in depth on how to customize the ",n.createElement("code",null,"matplotlib"),"title. All the main types of change are descried: changing its color, adding a subtitle, using math formulas and so on. Give it a go!"),n.createElement(c.A,null,n.createElement(m.A,{imgName:"190_Custom_title6",caption:"Python chart with subtitle and custom color",linkTo:"/190-custom-matplotlib-title"}),n.createElement(m.A,{imgName:"190_Custom_title7",caption:"Add a math formula in title with Matplotlib",linkTo:"/190-custom-matplotlib-title"}),n.createElement(m.A,{imgName:"190_Custom_title5",caption:"Control the height of the matplotlib title",linkTo:"/190-custom-matplotlib-title"}),n.createElement(m.A,{imgName:"534-highly-customized-layout",caption:"Subplot, title, and margin customization",linkTo:"/534-highly-customized-layout"})),n.createElement("p",null,n.createElement("br",null),"An effective method in data visualization involves utilizing the title as a ",n.createElement("b",null,"legend"),", facilitated by the ",n.createElement("code",null,"highlight_text")," ","package. The subsequent two posts provide an introductory overview of this package:"),n.createElement(c.A,null,n.createElement(m.A,{imgName:"how-to-custom-annotations-matplotlib",caption:"How to customize color and style of the annotation",linkTo:"/how-to-custom-title-matplotlib"}),n.createElement(m.A,{imgName:"advanced-custom-annotations-matplotlib-3",caption:"Create one annotation for both title and subtitle",linkTo:"/advanced-custom-annotations-matplotlib"}),n.createElement(m.A,{imgName:"589-how-to-change-coordinate-system",caption:"How to change the coordinate system of the annotation",linkTo:"/589-how-to-change-coordinate-system"}))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Annotation"},n.createElement(g.$P,null),"Annotation"),n.createElement("p",null,"Annotation is a key part of a great visualization. It transforms a simple chart in a whole piece of story telling. Before you share your graph with anyone, make sure the key insight are highlighted with labels, shapes or color."),n.createElement("p",null,"All those kind of annotation are built thanks to various"," ",n.createElement("b",null,"matplotlib functions")," like ",n.createElement("code",null,"annotate()")," or"," ",n.createElement("code",null,"add_patch()"),". The blogposts showcased below should get you started with it."),n.createElement(c.A,null,n.createElement(m.A,{imgName:"193_annotate2",caption:"Add a square to highlight an area",linkTo:"/193-annotate-matplotlib-chart"}),n.createElement(m.A,{imgName:"193_annotate3",caption:"Add a circle to highlight an area",linkTo:"/193-annotate-matplotlib-chart"}),n.createElement(m.A,{imgName:"193_annotate4",caption:"Add a segment",linkTo:"/193-annotate-matplotlib-chart"}),n.createElement(m.A,{imgName:"193_annotate5",caption:"Add vertical and horizontal ablines",linkTo:"/193-annotate-matplotlib-chart"}),n.createElement(m.A,{imgName:"193_annotate6",caption:"Annotate with an equation",linkTo:"/193-annotate-matplotlib-chart"}),n.createElement(m.A,{imgName:"534-highly-customized-layout",caption:"Subplot, title, and margin customization",linkTo:"/534-highly-customized-layout"}),n.createElement(m.A,{imgName:"513-add-logo-matplotlib",caption:"How to add an img into a matplotlib chart",linkTo:"/513-add-logo-matplotlib"}),n.createElement(m.A,{imgName:"589-how-to-change-coordinate-system",caption:"How to change the coordinate system of a chart",linkTo:"/589-how-to-change-coordinate-system"})),n.createElement("p",null,n.createElement("br",null),"The main problem with matplotlib annotations is that"," ",n.createElement("b",null,"you can't")," have different font styles (",n.createElement("i",null,"color, weight, size..."),") inside a same annotation. And this is a big issue because highlighting text has a ",n.createElement("b",null,"major role")," in data visualization."),n.createElement("p",null,"Fortunately for us, the ",n.createElement("code",null,"highlight_text")," package exists! And it makes the process of creating ",n.createElement("b",null,"beautiful annotations")," much easier. Check the examples below:"),n.createElement(c.A,null,n.createElement(m.A,{imgName:"how-to-custom-annotations-matplotlib",caption:"How to customize color and style of the annotation",linkTo:"/how-to-custom-title-matplotlib"}),n.createElement(m.A,{imgName:"advanced-custom-annotations-matplotlib-1",caption:"Add a background to the annotation",linkTo:"/advanced-custom-annotations-matplotlib"}),n.createElement(m.A,{imgName:"advanced-custom-annotations-matplotlib-2",caption:"Add a path effect to the annotation",linkTo:"/advanced-custom-annotations-matplotlib"})),n.createElement("p",null,n.createElement("br",null),"A similar tool to highlight_text is"," ",n.createElement("a",{href:"/594-introduction-flexitext"},"flexitext"),". The core difference relies on the syntax used, where flexitext has something more ",n.createElement("b",null,"similar to HTML")," compared to highlight_text."),n.createElement(c.A,null,n.createElement(m.A,{imgName:"594-introduction-flexitext",caption:"Introduction to string styling with flexitext",linkTo:"/594-introduction-flexitext"}),n.createElement(m.A,{imgName:"595-advanced-flexitext-features-1",caption:"Dynamically change text size with flexitext",linkTo:"/595-advanced-flexitext-features"}),n.createElement(m.A,{imgName:"595-advanced-flexitext-features-2",caption:"Dynamically change text opacity with flexitext",linkTo:"/595-advanced-flexitext-features"}))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Arrow"},n.createElement(g.KM,null),"Arrows"),n.createElement("p",null,"Matplotlib offers built-in arrow functions like"," ",n.createElement("code",null,"annotate()")," and",n.createElement("code",null,"FancyArrowPatch()"),". For full customization, though, the"," ",n.createElement("a",{href:"/drawarrow"},"drawarrow")," library is a more"," ",n.createElement("b",null,"straightforward")," option."),n.createElement("p",null,"The following posts will guide you in creating"," ",n.createElement("b",null,"any arrow you need")," using both Matplotlib functions and those from ",n.createElement("a",{href:"/drawarrow"},"drawarrow"),"."),n.createElement(c.A,null,n.createElement(m.A,{imgName:"193_annotate1",caption:"Add a label with a segment",linkTo:"/193-annotate-matplotlib-chart"}),n.createElement(m.A,{imgName:"introduction-drawarrow-1",caption:"use DrawArrow to make arrow easily",linkTo:"/drawarrow"}),n.createElement(m.A,{imgName:"introduction-drawarrow-3",caption:"customize arrows with DrawArrow",linkTo:"/drawarrow"}),n.createElement(m.A,{imgName:"how-to-create-and-custom-arrows-matplotlib-1",caption:"How to create an arrow with an annotation",linkTo:"/how-to-create-and-custom-arrows-matplotlib"}),n.createElement(m.A,{imgName:"591-arrows-with-inflexion-point-1",caption:"How to create an arrow with an inflexion point",linkTo:"/591-arrows-with-inflexion-point"}),n.createElement(m.A,{imgName:"591-arrows-with-inflexion-point-2",caption:"Arrow with an inflexion in a real life example",linkTo:"/591-arrows-with-inflexion-point"}))),n.createElement("div",{className:"greySection"},n.createElement(i.A,null,n.createElement(i.A,null,n.createElement(u.A,{funDetails:h.l})))),n.createElement(N.A,null),n.createElement("div",{className:"greySection",id:"related"},n.createElement(i.A,null,n.createElement("h2",{id:"Cheatsheets"},"✨ Cheatsheets"),n.createElement("p",null,"It's pretty hard to remember all the matplotlib associated vocabulary. The ",n.createElement(p.Link,{to:"/cheat-sheets"},"cheatsheet section")," ","is here to help, with a few sheets that you'll probably want to use on a daily basis."),n.createElement(c.A,null,n.createElement(v.A,{xs:12,md:4},n.createElement(p.Link,{to:"/cheat-sheets"},n.createElement(T.A,{imgName:"matplotlib_cheat_sheet",caption:"Matplotlib cheatsheet by Datacamp"}))),n.createElement(v.A,{xs:12,md:4},n.createElement(p.Link,{to:"/cheat-sheets"},n.createElement(T.A,{imgName:"matplotlib-python-official-cheatsheet1",caption:"Official Matplotlib cheatsheet (page 1)"}))),n.createElement(v.A,{xs:12,md:4},n.createElement(p.Link,{to:"/cheat-sheets"},n.createElement(T.A,{imgName:"matplotlib-python-official-cheatsheet2",caption:"Official Matplotlib cheatsheet (page 2)"})))),n.createElement("br",null))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Colors"},n.createElement(g.$P,null),"Customize colors"),n.createElement("p",null,n.createElement("a",{href:"/python-colors"},"Colors")," are probably one the"," ",n.createElement("b",null,"most important aspects")," of your charts. But"," ",n.createElement("a",{href:"/color-palette-finder"},"finding the right color")," can be quite hard."),n.createElement(c.A,null,n.createElement(v.A,{xs:12,md:4},n.createElement(p.Link,{to:"/web-map-with-custom-legend"},n.createElement(T.A,{imgName:"web-map-with-custom-legend",caption:"Choropleth map with continuous palette"}))),n.createElement(v.A,{xs:12,md:4},n.createElement(p.Link,{to:"/web-stacked-area-with-inflexion-arrows"},n.createElement(T.A,{imgName:"web-stacked-area-with-inflexion-arrows",caption:"Stacked area chart with categorical palette"}))),n.createElement(v.A,{xs:12,md:4},n.createElement(p.Link,{to:"/591-arrows-with-inflexion-point"},n.createElement(T.A,{imgName:"591-arrows-with-inflexion-point-2",caption:"Bubble map with categorical palette"}))),n.createElement(v.A,{xs:12,md:4},n.createElement(p.Link,{to:"/web-stacked-line-chart-with-labels"},n.createElement(T.A,{imgName:"web-stacked-line-chart-with-labels",caption:"Stacked area chart with continuous palette"}))),n.createElement(v.A,{xs:12,md:4},n.createElement(p.Link,{to:"/532-customizing-circular-barplot-in-matplotlib"},n.createElement(T.A,{imgName:"532-episode1-each-line-anakin",caption:"Circular barplot with custom palette"}))),n.createElement(v.A,{xs:12,md:4},n.createElement(p.Link,{to:"/web-streamchart-with-matplotlib"},n.createElement(T.A,{imgName:"web-streamchart-with-matplotlib-square",caption:"Bubble map with categorical palette"})))),n.createElement(p.Link,{to:"/python-colors"},n.createElement(w.A,{size:"md"},"Learn more about colors")),n.createElement("br",null),n.createElement("br",null),n.createElement("p",null,"Use the ",n.createElement("a",{href:"/color-palette-finder"},"color palette finder")," to select the right chart colors. It's powered by the"," ",n.createElement("a",{href:"/introduction-to-pypalettes"},"PyPalettes")," library for"," ",n.createElement("b",null,"easy color customization"),"."),n.createElement("a",{href:"/color-palette-finder"},n.createElement("img",{src:d.A,alt:"Color palette finder demo",style:{maxWidth:"900px",width:"100%"}})),n.createElement(p.Link,{to:"/color-palette-finder"},n.createElement(w.A,{size:"md"},"Discover palettes"))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Font"},n.createElement(g.MV,null),"Custom fonts"),n.createElement("p",null,"Using custom fonts adds a nice touch to your graph and make it shine among all the other plots using defaults. The ",n.createElement("b",null,"simplest way")," to customize your fonts is with the ",n.createElement("a",{href:"/pyfonts"},"PyFonts")," ","library, which lets you ",n.createElement("b",null,"load any font from the web")," with just a single line of code!"),n.createElement("p",null,"The blog post below will walk you through using"," ",n.createElement("a",{href:"/pyfonts"},"PyFonts")," or installing and applying a local font with matplotlib functions."),n.createElement("div",{style:{maxWidth:"600px",margin:"0 auto",padding:30}},n.createElement(p.Link,{to:"/custom-fonts-in-matplotlib"},n.createElement(T.A,{imgName:"custom-fonts-in-matplotlib",caption:"How to use custom fonts with matplotlib"})))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Margin"},n.createElement(g.$P,null),"Add margin around a ",n.createElement("code",null,"matplotlib")," chart"),n.createElement("p",null,"It is a common struggle to deal with the margins around the chart. Fortunately this is pretty straightforward thanks to the"," ",n.createElement("code",null,"subplots_adjust()")," function as explained in the examples below."),n.createElement(c.A,null,n.createElement(m.A,{imgName:"192_increase_margin2",caption:"Increase the bottom margin of a matplotlib chart.",linkTo:"/192-about-matplotlib-margins"}),n.createElement(m.A,{imgName:"192_increase_margin4",caption:"Increase the top margin to fit a title",linkTo:"/192-about-matplotlib-margins"}),n.createElement(m.A,{imgName:"534-highly-customized-layout",caption:"Subplot, title, and margin customization",linkTo:"/534-highly-customized-layout"}))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Subplot"},n.createElement(g.$P,null),"Split the figure in subplots"),n.createElement("p",null,"It can be really useful to split your graphic window in several parts, in order to display several charts in the same time. The"," ",n.createElement("code",null,"subplot()")," function of ",n.createElement("code",null,"matplotlib")," allows to do it quickly with a great level of customization."),n.createElement(c.A,null,n.createElement(m.A,{imgName:"194_matplotlib_subplot4",caption:"Split the figure in 4 charts of same size.",linkTo:"/194-split-the-graphic-window-with-subplot"}),n.createElement(m.A,{imgName:"194_matplotlib_subplot6",caption:"Split the figure with a custom layout",linkTo:"/192-about-matplotlib-margins"}),n.createElement(m.A,{imgName:"194_matplotlib_subplot9",caption:"Manage chart size on subplots",linkTo:"/192-about-matplotlib-margins"})),n.createElement("p",null,n.createElement("br",null)),n.createElement("p",null,"Additional note: how to remove some unused entries in a grid using the"," ",n.createElement("code",null,"ax.remove()")," function:"),n.createElement(c.A,null,n.createElement(m.A,{imgName:"how-to-remove-axis-in-matplotlib",caption:"How to remove some unused entries in a chart grid.",linkTo:"/how-to-remove-axis-in-matplotlib"})),n.createElement("p",null,n.createElement("br",null)),n.createElement("p",null,"Adding a secondary graph ",n.createElement("b",null,"within")," the main graph area can be a powerful technique to add context to you figure. This is totally doable using the ",n.createElement("code",null,"inset_axes()")," function as suggested in the examples below:"),n.createElement(c.A,null,n.createElement(m.A,{imgName:"how-to-add-plot-inside-plot-1",caption:"Add an axis inside another axis",linkTo:"/how-to-add-plot-inside-plot"}),n.createElement(m.A,{imgName:"how-to-add-plot-inside-plot-2",caption:"Add a plot inside another plot",linkTo:"/how-to-add-plot-inside-plot"}),n.createElement(m.A,{imgName:"how-to-add-plot-inside-plot-3",caption:"Customize the axis of the inner plot",linkTo:"/how-to-add-plot-inside-plot"}))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Theme"},n.createElement(g.$P,null),"Available style sheets"),n.createElement("p",null,n.createElement("code",null,"Matplotlib")," comes with a set of 26 pre-built themes to style your chart easily."," ",n.createElement(p.Link,{to:"/199-matplotlib-style-sheets"},"This post")," is dedicated to this feature, explaining how to use ",n.createElement("code",null,"plt.style.use()")," to pick a theme up."),n.createElement("div",{style:{maxWidth:"600px",margin:"0 auto",padding:30}},n.createElement(p.Link,{to:"/199-matplotlib-style-sheets"},n.createElement(T.A,{imgName:"199-matplotlib-style-sheets-538-full",caption:"Customize a matplotlib chart with a preset theme"})))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Axis"},n.createElement(g.$P,null),"Customizing axis"),n.createElement("p",null,n.createElement("code",null,"Matplotlib")," allows every kind of axis configuration. It is mainly done thanks to the ",n.createElement("code",null,"tick_params()"),","," ",n.createElement("code",null,"xticks()")," and ",n.createElement("code",null,"xlabels()")," functions. The"," ",n.createElement(p.Link,{to:"/191-custom-axis-on-matplotlib-chart"},"post #191")," will guide you through all the possibilities."),n.createElement(c.A,null,n.createElement(m.A,{imgName:"191_Custom_axis1",caption:"Change the axis title and its appearance",linkTo:"/191-custom-axis-on-matplotlib-chart"}),n.createElement(m.A,{imgName:"191_Custom_axis2",caption:"Control axis labels and ticks look",linkTo:"/191-custom-axis-on-matplotlib-chart"}),n.createElement(m.A,{imgName:"191_Custom_axis6",caption:"Control axis limit with the xlim() function",linkTo:"/191-custom-axis-on-matplotlib-chart"}),n.createElement(m.A,{imgName:"basic-time-series-with-matplotlib",caption:"How to deal with the date format. How to represent those dates properly on the X axis.",linkTo:"/basic-time-series-with-matplotlib"}),n.createElement(m.A,{imgName:"scatterplot-and-log-scale-in-matplotlib",caption:"How to use a log scale for the X or the Y axis.",linkTo:"/scatterplot-and-log-scale-in-matplotlib"}),n.createElement(m.A,{imgName:"589-how-to-change-coordinate-system",caption:"How to change the coordinate system of a chart",linkTo:"/589-how-to-change-coordinate-system"}))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Legend"},n.createElement(g.$P,null),"Customizing the legend"),n.createElement("p",null,"If you have several colors or marker on your chart, you can't escape the hassle of building a nice legend. The blogpost linked below should help for all the most common use cases like positioning the legend, adding and customizing a title to it, controling markers and labels and more."),n.createElement(c.A,null,n.createElement(m.A,{imgName:"custom-legend-with-matplotlib1",caption:"How to add the default matplotlib legend",linkTo:"/custom-legend-with-matplotlib"}),n.createElement(m.A,{imgName:"custom-legend-with-matplotlib2",caption:"Legend location, learn how to add it anywhere including outside the plot area",linkTo:"/custom-legend-with-matplotlib"}),n.createElement(m.A,{imgName:"custom-legend-with-matplotlib3",caption:"Customize the legend label appearance",linkTo:"/custom-legend-with-matplotlib"}),n.createElement(m.A,{imgName:"custom-legend-with-matplotlib4",caption:"Add and customize the title of the legend",linkTo:"/custom-legend-with-matplotlib"}),n.createElement(m.A,{imgName:"custom-legend-with-matplotlib5",caption:"Customize the marker of each element item",linkTo:"/custom-legend-with-matplotlib"}),n.createElement(m.A,{imgName:"custom-legend-with-matplotlib6",caption:"Add a background, stroke and more legend customization",linkTo:"/custom-legend-with-matplotlib"}),n.createElement(m.A,{imgName:"how-to-use-rectangles-in-matplotlib-legends",caption:"How to customize the legend handle to have a different shape that the one used on the chart",linkTo:"/how-to-use-rectangles-in-matplotlib-legends"}),n.createElement(m.A,{imgName:"585-legend-for-categorical-data-matplotlib-1",caption:"Learn how to use the default legend in matplotlib",linkTo:"/585-legend-for-categorical-data-matplotlib"}),n.createElement(m.A,{imgName:"585-legend-for-categorical-data-matplotlib-2",caption:"Map color text to colors in chart",linkTo:"/585-legend-for-categorical-data-matplotlib"}),n.createElement(m.A,{imgName:"585-legend-for-categorical-data-matplotlib-3",caption:"Put directly the legend on each line",linkTo:"/585-legend-for-categorical-data-matplotlib"}),n.createElement(m.A,{imgName:"585-legend-for-categorical-data-matplotlib-4",caption:"Use arrows to point to the legend",linkTo:"/585-legend-for-categorical-data-matplotlib"}),n.createElement(m.A,{imgName:"web-map-with-custom-legend-square",caption:"Advanced use case with a custom legend for a map",linkTo:"/web-map-with-custom-legend"}))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Pattern"},"Patterns in charts"),n.createElement("p",null,n.createElement("b",null,"Hatchs and patterns")," are a great way to enhance the readability of your chart. The post below will guide you through the process of adding patterns to ",n.createElement("b",null,"different types")," of charts."),n.createElement(c.A,null,n.createElement(m.A,{imgName:"584-introduction-hatch-matplotlib-1",caption:"Patterns in barplot",linkTo:"/584-introduction-hatch-matplotlib"}),n.createElement(m.A,{imgName:"584-introduction-hatch-matplotlib-2",caption:"Patterns in area chart",linkTo:"/584-introduction-hatch-matplotlib"}),n.createElement(m.A,{imgName:"584-introduction-hatch-matplotlib-3",caption:"Patterns in histogram",linkTo:"/584-introduction-hatch-matplotlib"}),n.createElement(m.A,{imgName:"584-introduction-hatch-matplotlib-4",caption:"Patterns in boxplot",linkTo:"/584-introduction-hatch-matplotlib"}))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement("h2",{id:"Images"},"Insert images in a matplotlib graph"),n.createElement("p",null,"It can be very useful to insert ",n.createElement("b",null,"one or several images")," in a matplotlib graph. It can be used for the graph caption or even inside the chart area to provide more context."),n.createElement("p",null,"Please find below a"," ",n.createElement(p.Link,{href:"/513-add-logo-matplotlib"},"complete tutorial")," ","explaining how to proceed using the ",n.createElement("code",null,"PIL")," and"," ",n.createElement("code",null,"io")," libraries, and a"," ",n.createElement(p.Link,{href:"/web-stacked-line-chart-with-labels"},"real life usage")," ","of this technique to produce a beautiful & polished figure."),n.createElement(c.A,null,n.createElement(m.A,{imgName:"513-add-logo-matplotlib",caption:"How to add an img into a matplotlib chart",linkTo:"/513-add-logo-matplotlib"}),n.createElement(m.A,{imgName:"web-stacked-line-chart-with-labels-square",caption:"A clean stacked area chart with images in the caption",linkTo:"/web-stacked-line-chart-with-labels"}),n.createElement(m.A,{imgName:"web-scatterplot-with-images-in-circle",caption:"Use an image inside each scatterplot circle",linkTo:"/web-scatterplot-with-images-in-circles"}))),n.createElement(N.A,null),n.createElement("div",{className:"greySection",id:"related"},n.createElement(i.A,null,n.createElement(s.A,{chartFamily:"evolution"}))),n.createElement(N.A,null),n.createElement(i.A,null,n.createElement(r.A,null)),n.createElement(N.A,null))}},7332:function(e,t,a){t.A=a.p+"static/pypalettes-30c04e6e9cc4378a11aa4ded22376216.gif"}}]);
//# sourceMappingURL=component---src-pages-matplotlib-js-2b0519fc76d55afcd165.js.map