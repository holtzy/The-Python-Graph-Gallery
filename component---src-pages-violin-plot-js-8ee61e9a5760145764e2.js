"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[4706],{2785:function(e,t,n){n.r(t),n.d(t,{Head:function(){return C},default:function(){return L}});var l=n(6540),a=n(7238),o=n(7906),i=n(3048),r=n(9441),s=n(4479),c=n(3365),m=n(834),p=n(4794),u=n(3691),d=n(1105),h=n(5951),b=n(3572),E=n(5216),v=n(2816),f=n(8360),g=n(7041);const y=l.createElement(l.Fragment,null,l.createElement("p",null,"The ",l.createElement("code",null,"violinplot()")," function of ",l.createElement("a",{href:"/seaborn"},"seaborn")," ","creates violin plots which show the distribution of quantitative data across several levels of one (or more) categorical variables. It combines a box plot with a kernel density estimation.")),w={name:"x",description:l.createElement("p",null,"Inputs for plotting long-form data. This parameter specify the variable for the x axes."),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\n# Plot\nsns.violinplot(x="total_bill", data=tips)\nplt.show()\n'.trim(),type:"string, vector, or pd.Series",howToUse:l.createElement("p",null,"Can be vector names in the data DataFrame, or external vectors passed directly."),img:"tuto-violinplot-1-square",post:"50-basic-violinplot-and-input-formats"},_={name:"y",description:l.createElement("p",null,"Inputs for plotting long-form data. This parameter specify the variable for the y axes."),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\n# Plot\nsns.violinplot(y="total_bill", data=tips)\nplt.show()\n'.trim(),type:"string, vector, or pd.Series",howToUse:l.createElement("p",null,"Can be vector names in the data DataFrame, or external vectors passed directly."),img:"50_Basic_Violin_seaborn1",post:"50-basic-violinplot-and-input-formats"},A={name:"hue",description:l.createElement("div",null,g.XH),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\nsns.violinplot(\n  x="day",\n  y="total_bill",\n  hue="smoker",\n  data=tips\n)\nplt.show()\n'.trim(),type:"string or vector",howToUse:l.createElement("div",null,g.Dg),img:"51_Horizontal_violinplot_Seaborn",post:"51-horizontal-violinplot"},k={name:"split",description:l.createElement("p",null,"When using a hue variable, this determines whether the violins for different hue levels should be plotted on opposite sides of the main categorical axis."),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\nsns.violinplot(\n  x="day",\n  y="total_bill",\n  hue="smoker",\n  split=True,\n  data=tips\n)\nplt.show()\n'.trim(),type:"boolean",howToUse:l.createElement("p",null,"Set to ",l.createElement("code",null,"True")," to split violins for different hue levels."),img:"tuto-violinplot-2-square",post:"54-grouped-violinplot"},T={name:"palette",description:l.createElement("div",null,g._h),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\nsns.violinplot(\n  x="day",\n  y="total_bill",\n  data=tips,\n  palette="Set2"\n)\nplt.show()\n'.trim(),type:"string, list, dict, or matplotlib colormap",howToUse:l.createElement("div",null,g.Wf),img:"54_Grouped_violinplot_Seaborn",post:"54-grouped-violinplot"},x={name:"linewidth",description:l.createElement("div",null,g.JE),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\nsns.violinplot(\n  x="day",\n  y="total_bill",\n  data=tips,\n  linewidth=2\n)\nplt.show()\n'.trim(),type:"float",howToUse:l.createElement("div",null,g.nM),img:"52_Custom_violinplot_Appearance_Seaborn1",post:"52-custom-seaborn-violinplot"},S={name:"linecolor",description:l.createElement("p",null,"Defines the color of the lines"),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\nsns.violinplot(\n  x="day",\n  y="total_bill",\n  hue="smoker",\n  linecolor=\'white\',\n  linewidth=1.5,\n  data=tips\n)\nplt.show()\n'.trim(),type:"number",howToUse:l.createElement("div",null,g.Wz),img:"tuto-violinplot-3-square",post:"52-custom-seaborn-violinplot"},N={name:"saturation",description:l.createElement("p",null,"Level of saturation of the colors used in the violin."),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\nsns.violinplot(\n  x="day",\n  y="total_bill",\n  hue="smoker",\n  saturation=0.2,\n  data=tips\n)\nplt.show()\n'.trim(),type:"number",howToUse:l.createElement("div",null,l.createElement("p",null,"By default, all colours have a saturation level of 1, but this can be an effective way of improving the style by reducing it.")),img:"tuto-violinplot-4-square",post:"52-custom-seaborn-violinplot"},D={name:"fill",description:l.createElement("p",null,"Whether or not to fill in the violin colors."),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\nsns.violinplot(\n  x="day",\n  y="total_bill",\n  hue="smoker",\n  fill=False,\n  data=tips\n)\nplt.show()\n'.trim(),type:"bool",howToUse:l.createElement("p",null,"By default, the violin have a ",l.createElement("code",null,"linecolor")," and"," ",l.createElement("code",null,"color"),". This parameter is ",l.createElement("code",null,"True")," by default, but when set to ",l.createElement("code",null,"False"),", the color of the violin becomes the background color of the chart."),img:"tuto-violinplot-5-square",post:"52-custom-seaborn-violinplot"},z={name:"violinplot()",description:y,docUrl:"https://seaborn.pydata.org/generated/seaborn.violinplot.html",parameters:[w,_,{name:"color",description:l.createElement("p",null,"Whether or not to fill in the violin colors."),basicUsage:'\n# Library & Dataset\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ntips = sns.load_dataset("tips")\n\nsns.violinplot(\n  x="day",\n  y="total_bill",\n  color=\'red\',\n  data=tips\n)\nplt.show()\n'.trim(),type:"bool",howToUse:l.createElement("div",null,g.Wz),img:"tuto-violinplot-6-square",post:"53-control-color-of-seaborn-violinplot"},A,k,T,x,S,N,D]},U="<p>A <a href='https://www.data-to-viz.com/graph/violin.html'>violin plot</a> allows you to visualize the distribution of a numeric variable for one or several groups. <code>Seaborn</code> is particularly adapted to build it thanks to its <code>violin()</code> function. Violin plots deserve more attention than <a href='https://python-graph-gallery.com/boxplot'>boxplots</a>, which can sometimes hide features of the data.</p>",I='# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset(\'iris\')\n\n# plot\nsns.violinplot(x=df["species"], y=df["sepal_length"])\n',C=()=>l.createElement(v.k,{title:"Python Violin plot Gallery | Dozens of examples with code",seoDescription:"A collection of violin plot examples made with Python, coming with explanation and reproducible code"});function L(){return l.createElement(o.A,{isTocEnabled:!0},l.createElement(a.A,{title:"Violin plot",description:U,chartType:"violin"}),l.createElement(i.A,null,l.createElement("h2",{id:"Quick start"},"‚è± Quick start"),l.createElement(s.A,{className:"align-items-center"},l.createElement(d.A,{md:6},l.createElement("p",null,l.createElement("code",null,"Seaborn")," is definitely the best library to quickly build a violin plot. It offers a dedicated"," ",l.createElement("code",null,"violinplot()")," function that roughly works as follows:üî•")),l.createElement(d.A,{md:6},l.createElement(p.Link,{to:"/50-basic-violinplot-and-input-formats"},l.createElement(b.A,{imgName:"50_Basic_Violin_seaborn2",caption:"The most basic violin plot one can make with python and seaborn"})))),l.createElement(h.A,null,I)),l.createElement(E.A,null),l.createElement(i.A,null,l.createElement("h2",{id:"Seaborn"},l.createElement(u.$A,null),"Violin charts with ",l.createElement("code",null,"Seaborn")),l.createElement("p",null,l.createElement("code",null,"Seaborn")," is a python library that enables you to make better visualizations. It is well adapted to build density charts thanks to its ",l.createElement("code",null,"violin")," function. The following charts will guide you through its usage, going from a very"," ",l.createElement(p.Link,{to:"/50-basic-violinplot-and-input-formats"},"basic violin plot")," ","to something much more"," ",l.createElement(p.Link,{to:"/52-custom-seaborn-violinplot"},"customized"),"."),l.createElement(s.A,null,l.createElement(c.A,{imgName:"50_Basic_Violin_seaborn1",caption:"How to build a very basic violin. Shows example based on different input formats.",linkTo:"/50-basic-violinplot-and-input-formats"}),l.createElement(c.A,{imgName:"51_Horizontal_violinplot_Seaborn",caption:"Make your violin chart horizontal to make labels more readable",linkTo:"/51-horizontal-violinplot"}),l.createElement(c.A,{imgName:"52_Custom_violinplot_Appearance_Seaborn1",caption:"Chart appearance: control violin width, stroke width and more",linkTo:"/52-custom-seaborn-violinplot"}),l.createElement(c.A,{imgName:"53_Custom_violinplot_color_Seaborn3",caption:"How to manage colors on a python violin plot",linkTo:"/53-control-color-of-seaborn-violinplot"}),l.createElement(c.A,{imgName:"55_Specific_order_violinplot_Seaborn2",caption:"Control the groups order, very useful if you want to display them by increasing mean",linkTo:"/55-control-order-of-groups-in-violinplot-seaborn"}),l.createElement(c.A,{imgName:"54_Grouped_violinplot_Seaborn",caption:"If you have both groups and subgroups, you'll be interested in a grouped violin plot",linkTo:"/54-grouped-violinplot"}),l.createElement(c.A,{imgName:"tuto-violinplot-2",caption:"Split subgroups on the same axis",linkTo:"/54-grouped-violinplot"}),l.createElement(c.A,{imgName:"58_Number_of_obs_on_violinplot_seaborn",caption:"Show the number of observations per group",linkTo:"/58-show-number-of-observation-on-violinplot"}),l.createElement(c.A,{imgName:"502-violinplot-and-swarmplot",caption:"Add a swarmplot on top of a violin chart to show individual data points",linkTo:"/502-violinplot-and-swarmplot"}),l.createElement(c.A,{imgName:"54_Grouped_violinplot_Seaborn2",caption:"If you have both groups and subgroups, you'll be interested in a grouped violin plot",linkTo:"/54-grouped-violinplot"}))),l.createElement(E.A,null),l.createElement("div",{className:"greySection"},l.createElement(i.A,null,l.createElement(f.A,{funDetails:z}))),l.createElement(E.A,null),l.createElement(i.A,null,l.createElement("h2",{id:"Matplotlib"},l.createElement(u.$P,null),"Violin charts with ",l.createElement("code",null,"Matplotlib")),l.createElement("p",null,l.createElement(p.Link,{href:"/matplotlib"},"Matplotlib"),", as usual, is another great otion to build violin charts with python. It comes with a"," ",l.createElement("code",null,"violinplot()")," function that does all the hard work for us."),l.createElement("p",null,"Here are a couple of examples:"),l.createElement(s.A,null,l.createElement(c.A,{imgName:"557-anova-visualization-with-matplotlib-2",caption:"Violin plot with ANOVA results on top",linkTo:"/557-anova-visualization-with-matplotlib"}),l.createElement(c.A,{imgName:"557-anova-visualization-with-matplotlib-3",caption:"Customized violin plot with ANOVA results on top",linkTo:"/557-anova-visualization-with-matplotlib"}))),l.createElement(E.A,null),l.createElement("div",{className:"greySection"},l.createElement(i.A,null,l.createElement(f.A,{functionName:"violin"}))),l.createElement(E.A,null),l.createElement(i.A,null,l.createElement("h2",{id:"Best"},l.createElement(u.$P,null),"Best python violin chart examples"),l.createElement("p",null,"The web is full of astonishing charts made by awesome bloggers, (often using ",l.createElement("a",{href:"https://www.r-graph-gallery.com"},"R"),"). The"," ",l.createElement("a",{href:"https://python-graph-gallery.com"},"Python graph gallery")," ","tries to display (or translate from R) some of the best creations and explain how their source code works. If you want to display your work here, please drop me a word or even better, submit a"," ",l.createElement("a",{href:"https://github.com/holtzy/The-Python-Graph-Gallery"},"Pull Request"),"!"),l.createElement(s.A,null,l.createElement(d.A,{xs:12,md:6},l.createElement(p.Link,{to:"/web-ggbetweenstats-with-matplotlib"},l.createElement(b.A,{imgName:"web-ggbetweenstats-with-matplotlib-square",caption:"A combination of a violin plot and a boxplot. Allows the comparison of several groups with statistical test results on top."}))))),l.createElement(E.A,null),l.createElement("div",{className:"greySection",id:"related"},l.createElement(i.A,null,l.createElement(m.A,{chartFamily:"distribution"}))),l.createElement(E.A,null),l.createElement(i.A,null,l.createElement(r.A,null)),l.createElement(E.A,null))}},2816:function(e,t,n){n.d(t,{k:function(){return a}});var l=n(6540);const a=e=>{let{title:t,seoDescription:n,keywords:a,image:o}=e;return l.createElement(l.Fragment,null,l.createElement("title",null,t),l.createElement("html",{lang:"en"}),l.createElement("meta",{name:"description",content:n||"How to build a chart with Python"}),l.createElement("meta",{name:"author",content:"Yan Holtz"}),l.createElement("meta",{name:"keywords",content:a||"python, chart, graph, code, viz, dataviz"}),l.createElement("meta",{property:"og:site_name",content:"The Python Graph Gallery"}),l.createElement("meta",{property:"og:title",content:t}),l.createElement("meta",{property:"og:image",content:o||"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true"}),l.createElement("meta",{property:"og:description",content:n}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:site",content:"@R_Graph_Gallery"}))}},3365:function(e,t,n){n.d(t,{A:function(){return r}});var l=n(6540),a=n(3572),o=n(1105),i=n(4794);function r(e){let{imgName:t,caption:n,linkTo:r}=e;return l.createElement(o.A,{xs:12,md:4},l.createElement(i.Link,{to:r},l.createElement(a.A,{imgName:t,caption:n})))}},3572:function(e,t,n){n.d(t,{A:function(){return r}});var l=n(6540),a=n(4794),o=n(2532);const i=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function r(e){let{imgName:t,caption:n}=e;if(i.includes(t))return l.createElement("p",null,"TODO");const r=(0,a.useStaticQuery)("2757772085").allFile.edges.find((e=>e.node.name.includes(t)));return r?l.createElement(l.Fragment,null,l.createElement("div",{className:"chartImageContainer"},l.createElement(o.G,{image:r.node.childImageSharp.gatsbyImageData,alt:n,className:"chartImageImg"}),n&&l.createElement("div",{className:"chartImageOverlay"},l.createElement("div",{className:"chartImageOverlayText"},l.createElement("p",null,n))))):null}},7041:function(e,t,n){n.d(t,{D$:function(){return a},DS:function(){return p},Dg:function(){return m},JE:function(){return b},Pq:function(){return s},Wf:function(){return f},Wz:function(){return o},XH:function(){return c},Z8:function(){return u},_d:function(){return h},_h:function(){return v},az:function(){return d},nM:function(){return E},pE:function(){return r},xZ:function(){return i}});var l=n(6540);const a=l.createElement("p",null,"Values range from ",l.createElement("code",null,"0")," (completely transparent) to ",l.createElement("code",null,"1")," ","(completely opaque)."),o=l.createElement("p",null,"Can be a color name, a Hex code, or an RGB value."," ",l.createElement("a",{href:"/python-colors"},"Learn more about colors.")),i=l.createElement("p",null,"Controls the drawing order of plot elements."),r=l.createElement("p",null,"Higher zorder values are drawn on top of lower values. This is useful when you want certain elements to appear above others."),s=l.createElement("p",null,"It must be in one of: ",l.createElement("code",null,"'/'"),", ",l.createElement("code",null,"'\\'"),", ",l.createElement("code",null,"'|'"),",",l.createElement("code",null,"'-'"),","," ",l.createElement("code",null,"'+'"),", ",l.createElement("code",null,"'x'"),","," ",l.createElement("code",null,"'o'"),", ",l.createElement("code",null,"'O'"),",",l.createElement("code",null,"'.'"),", ",l.createElement("code",null,"'*'")),c=l.createElement("p",null,"Specify the dataset column to use for color encoding in the chart. It allows for grouping and differentiating data points."),m=l.createElement("p",null,"Column name to use for color encoding in the chart. It's usually a categorical variable."),p=l.createElement("div",null,l.createElement("p",null,"It just has to be a ",l.createElement("code",null,"pandas.DataFrame")," (columns are variables),",l.createElement("code",null,"numpy.ndarray")," (rows/columns are variables), or any mapping/sequence (dictionaries/lists)"),l.createElement("p",null,"Supports both long-form (each variable in its own column) and wide-form (variables in separate columns; reshaped internally).")),u=l.createElement("p",null,"Dataframe-like (pandas, numpy, polars...) with the columns we want to plot."),d=l.createElement("p",null,"Determines the style of the line in the plot."),h=l.createElement("p",null,"Common values include '-' (solid), '--' (dashed), ':' (dotted), and '-.' (dash-dot)."),b=l.createElement("p",null,"Sets the width of the plotted line."),E=l.createElement("p",null,"Larger values create thicker lines. The default value is usually"," ",l.createElement("code",null,"1"),"."),v=l.createElement("p",null,"Defines colors for the ",l.createElement("code",null,"hue")," semantic. It can be a list of colors or a matplotlib colormap."),f=l.createElement("div",null,l.createElement("p",null,"This parameter is used ",l.createElement("b",null,"in combination")," with the ",l.createElement("code",null,"hue")," ","parameter and will a assign a different color to each category in"," ",l.createElement("code",null,"hue"),"."),l.createElement("p",null,"Moreover, the ",l.createElement("a",{href:"/introduction-to-pypalettes"},"pypalettes library")," ","can help you find the best colors for your chart by providing access to thousands of pre-made color palette."))},8360:function(e,t,n){n.d(t,{A:function(){return p}});var l=n(4794),a=n(6540),o=n(5615),i=n(4479),r=n(1105),s=n(3572),c=n(5951);const m=e=>"string"!=typeof e?"":e.charAt(0).toUpperCase()+e.slice(1);function p(e){var t;let{funDetails:n}=e;const{0:p,1:u}=(0,a.useState)(0),{0:d,1:h}=(0,a.useState)(0);if(!n)return null;const b=n.parameters[p],E=null===(t=b.options)||void 0===t?void 0:t[d],v=a.createElement("div",null,n.parameters.map(((e,t)=>a.createElement(o.A,{key:t,value:e.name,size:"sm",onClick:()=>u(t),className:p===t?"isButtonSelected":""},e.name))));return a.createElement("div",{style:{marginBottom:70}},a.createElement("h2",{id:m(n.name+" details")},"üîé ",a.createElement("code",null,n.name)," function parameters",a.createElement("a",{style:{marginLeft:"15px",fontSize:"14px"},href:n.docUrl},"‚Üí see full doc")),a.createElement("h3",null,"‚Üí Description"),a.createElement("p",null,n.description),a.createElement("div",{style:{display:"flex",flexDirection:"row",justifyContent:"start",alignItems:"baseline",gap:14}},a.createElement("h3",{style:{width:"auto",flexWrap:"nowrap",whiteSpace:"nowrap"}},"‚Üí Arguments"),v),a.createElement(i.A,null,a.createElement(r.A,{md:8},a.createElement("div",{style:{fontSize:16}},a.createElement("p",{className:"argumentSectionTitle"},"Description"),a.createElement("p",{className:"little-text"},b.description),a.createElement("p",{className:"argumentSectionTitle"},"Possible values ‚Üí ","  ",a.createElement("span",{className:"parameterTypePill"},b.type)),a.createElement("p",{className:"little-text"},b.howToUse),b.options&&a.createElement(a.Fragment,null,a.createElement("div",{style:{display:"flex",gap:2,alignItems:"baseline"}},b.options.map(((e,t)=>a.createElement(o.A,{size:"sm",className:t===d?"isButtonSelected":"",onClick:()=>h(t)},e.name)))),a.createElement("p",null,b.options[d].explanation)),a.createElement("p",{className:"argumentSectionTitle"},"Code Example"),a.createElement("div",{style:{backgroundColor:"white"}},a.createElement(c.A,{hasWhiteBackground:!0},b.options?b.basicUsage.replace("paramgoeshere",b.options[d].name):b.basicUsage)))),a.createElement(r.A,{md:4},a.createElement("br",null),a.createElement(l.Link,{to:"/"+b.post},a.createElement(s.A,{imgName:(null==E?void 0:E.img)||b.img,caption:"More about the "+n.name+" function."})))))}}}]);
//# sourceMappingURL=component---src-pages-violin-plot-js-8ee61e9a5760145764e2.js.map