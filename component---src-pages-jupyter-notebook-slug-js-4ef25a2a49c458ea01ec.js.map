{"version":3,"file":"component---src-pages-jupyter-notebook-slug-js-4ef25a2a49c458ea01ec.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartFamilySection.js","webpack://the-python-graph-gallery/./src/components/TableOfContent.js","webpack://the-python-graph-gallery/./src/components/AdInjector.js","webpack://the-python-graph-gallery/./src/components/Layout.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/components/SectionLogoWithOverlay.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/pages/{jupyterNotebook.slug}.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import './chartFamilySection.css';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SectionLogoWithOverlay from './SectionLogoWithOverlay';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\n\nconst TITLES = {\n  distribution: 'Distribution',\n  correlation: 'Correlation',\n  ranking: 'Ranking',\n  partOfAWhole: 'Part Of A Whole',\n  evolution: 'Evolution',\n  map: 'Map',\n  flow: 'Flow',\n  general: 'General Knowledge',\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2} className=\"col-1-7\">\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div style={{ paddingBottom: 15 }}>\n      <h2 id=\"Related charts\" className={'sectionTitle ' + chartFamily}>\n        {TITLES?.[chartFamily]}\n      </h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","// Comes from https://janosh.dev/blog/sticky-active-smooth-responsive-toc\nimport './tableOfContent.css';\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst accumulateOffsetTop = (el, totalOffset = 0) => {\n  while (el) {\n    totalOffset += el.offsetTop - el.scrollTop + el.clientTop;\n    el = el.offsetParent;\n  }\n  return totalOffset;\n};\n\nexport default function TableOfContent({ chartType }) {\n  const [headings, setHeadings] = useState({\n    titles: [],\n    nodes: [],\n    minDepth: 0,\n  });\n\n  // Controls which heading is currently highlighted as active.\n  const [active, setActive] = useState(0);\n\n  // Read heading titles, depths and nodes from the DOM.\n  useEffect(() => {\n    const selector = ['main h2'];\n    const nodes = Array.from(document.querySelectorAll(selector));\n    const titles = nodes.map((node) => ({\n      title: node.id || node.innerHTML,\n      depth: Number(node.nodeName[1]),\n    }));\n    // Compute the minimum heading depth. Will be subtracted from each heading's\n    // depth to determine the indentation of that heading in the ToC.\n    const minDepth = Math.min(...titles.map((h) => h.depth));\n    setHeadings({ titles, nodes, minDepth });\n  }, []);\n\n  // Add scroll event listener to update currently active heading.\n  useEffect(() => {\n    // Throttling the scrollHandler saves computation and hence battery life.\n    const scrollHandler = () => {\n      const { nodes } = headings;\n      const offsets = nodes.map((el) => accumulateOffsetTop(el));\n      const currentVisualizedLocation = window.scrollY + 150;\n      const closest = offsets.reduce(function (prev, curr) {\n        return Math.abs(curr - currentVisualizedLocation) <\n          Math.abs(prev - currentVisualizedLocation)\n          ? curr\n          : prev;\n      }, 0);\n      const activeIndex = offsets.findIndex((offset) => offset === closest);\n      setActive(activeIndex === -1 ? 0 : activeIndex);\n    };\n    window.addEventListener(`scroll`, scrollHandler);\n    return () => window.removeEventListener(`scroll`, scrollHandler);\n  }, [headings]);\n\n  return (\n    <div className=\"table-of-content\">\n      {headings.titles.map(({ title, depth }, index) => (\n        <p\n          key={title}\n          depth={depth - headings.minDepth}\n          className={active === index ? 'toc-item active-toc-item' : 'toc-item'}\n          onClick={(event) => {\n            event.preventDefault();\n            headings.nodes[index].scrollIntoView({\n              behavior: `smooth`,\n              block: `start`,\n              alignToTop: true,\n            });\n          }}\n          dangerouslySetInnerHTML={{ __html: title }}\n        />\n      ))}\n      {/* {chartType && <ChartTypeLink chartType={chartType} />} */}\n    </div>\n  );\n}\n\nTableOfContent.propTypes = {\n  chartType: PropTypes.string,\n};\n","import React, { useEffect } from 'react';\n\n// This is for ESLint, it does not understand that process is a global variable in a gatsby environment\n/*global process*/\n\nconst AdInjector = ({ siteId }) => {\n  useEffect(() => {\n    // exit if dev mode\n    if (process.env.NODE_ENV === 'development') {\n      return;\n    }\n\n    // Initialize AdThrive object\n    window.adthrive = window.adthrive || {};\n    window.adthrive.cmd = window.adthrive.cmd || [];\n    window.adthrive.plugin = 'adthrive-ads-manual-spa';\n    window.adthrive.host = 'ads.adthrive.com';\n\n    // Create the script element\n    const script = document.createElement('script');\n    script.async = true;\n    script.referrerpolicy = 'no-referrer-when-downgrade';\n    script.src = `https://${\n      window.adthrive.host\n    }/sites/${siteId}/ads.min.js?referrer=${encodeURIComponent(\n      window.location.href\n    )}`;\n\n    // Insert the script element into the DOM\n    const firstScript = document.getElementsByTagName('script')[0];\n    firstScript.parentNode.insertBefore(script, firstScript);\n  }, [siteId]);\n\n  return null;\n};\n\nexport default AdInjector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Footer from '../components/Footer';\nimport TopNavbar from '../components/TopNavbar';\nimport TableOfContent from '../components/TableOfContent';\n\n// Every single page of this website has its content wrapped in this <Layout/> component\n// It allows to:\n// - import css files\n// - Add stuff in the Head of the html page for SEO\n// - Call the raptive script for ads\n// - Add the nabbar on top\n// - add the footer\n// - add the table of content\n\n// Import Styles = bootstrap + custom\n// Custom must be AFTER bootstrap. It makes sure custom style are not overriden\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/style.css';\nimport AdInjector from './AdInjector';\n\nexport default function Layout({\n  children,\n  isTocEnabled,\n  chartType,\n  isHome = false,\n}) {\n  return (\n    <>\n      <AdInjector siteId=\"6434366c7ccf1c58d32ab68f\" />\n\n      <header>\n        <TopNavbar />\n      </header>\n\n      <main className={isHome ? 'home' : 'not-home'}>{children}</main>\n\n      <Footer />\n\n      {isTocEnabled && <TableOfContent chartType={chartType} />}\n    </>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.any,\n  title: PropTypes.string,\n  isTocEnabled: PropTypes.bool,\n  chartType: PropTypes.string,\n  seoDescription: PropTypes.string,\n  keywords: PropTypes.string,\n  isHome: PropTypes.bool,\n};\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import './sectionLogoWithOverlay.css';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport SectionLogo from './SectionLogo';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\n\nconst generalList = chartTypesInfo\n  .filter((info) => info.family === 'general')\n  .map((info) => info.logo);\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType);\n\n  return (\n    <>\n      {!isGeneralFamily ? (\n        <>\n          <div className=\"sectionLogoContainer\">\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n              <div className=\"sectionLogoOverlay\">\n                <div className=\"sectionLogoOverlayText\">+</div>\n              </div>\n            </Link>\n          </div>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </>\n      ) : (\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n          </Link>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </div>\n      )}\n    </>\n  );\n}\n","import './titleAndDescription.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'gatsby';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport { Container } from 'react-bootstrap';\nimport SectionLogo from './SectionLogo';\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({\n  title,\n  description,\n  chartType,\n  isRaptiveEnabled = true,\n}) {\n  const chartInfo = chartTypesInfo.filter((chart) => chart.id === chartType)[0];\n\n  return (\n    <Container>\n      <div className=\"titleAndDescription\">\n        <div className=\"titleRow\">\n          <h1>{title}</h1>\n          {chartType && <ChartTypeLink chartType={chartType} />}\n        </div>\n        <hr className=\"smallHr\" />\n        {typeof description === 'string' ? (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        ) : (\n          <div className=\"description\">{description}</div>\n        )}\n\n        {chartType && (\n          <div style={{ marginTop: '10px' }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + ' section'}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n\n      {isRaptiveEnabled && (\n        <div className=\"raptive-video-player\" style={{ minHeight: 300 }} />\n      )}\n    </Container>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  chartType: PropTypes.string,\n  isRaptiveEnabled: PropTypes.bool,\n};\n\nconst ChartTypeLink = ({ chartType }) => {\n  const chartDescription = chartTypesInfo.filter(\n    (chart) => chart.id === chartType\n  )[0];\n  const url = fullUrlToInternalLink(chartDescription.pythonURL);\n  return (\n    <div style={{ width: '80px', marginLeft: 40 }}>\n      <Link to={url}>\n        <SectionLogo chartType={chartDescription.logo} />\n      </Link>\n    </div>\n  );\n};\nChartTypeLink.propTypes = {\n  chartType: PropTypes.string,\n};\n","import '../styles/basic.css';\n\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport Contact from '../components/Contact';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst JupyterNotebook = ({ data }) => {\n  const {\n    title,\n    description,\n    family,\n    chartType,\n    slug,\n    seoDescription,\n    keywords,\n  } = data.jupyterNotebook.metadata;\n  return (\n    <Layout\n      title={title}\n      isTocEnabled\n      chartType={chartType}\n      seoDescription={seoDescription}\n      keywords={keywords}\n    >\n      <TitleAndDescription\n        title={title}\n        description={'<p>' + description + '</p>'}\n        chartType={chartType}\n      />\n\n      {/* Blog content */}\n      <Container>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: data.jupyterNotebook.html }}\n        />\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <ChartFamilySection chartFamily={family} hasGreyBackground />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact pageSlug={slug} isNotebook />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n};\n\nJupyterNotebook.propTypes = {\n  data: PropTypes.object,\n};\n\nexport const query = graphql`\n  query NotebookQuery($slug: String!) {\n    jupyterNotebook(slug: { eq: $slug }) {\n      html\n      metadata {\n        title\n        description\n        seoDescription\n        family\n        chartType\n        keywords\n        slug\n      }\n    }\n  }\n`;\n\nexport const Head = ({ data }) => (\n  <SEO\n    title={data.jupyterNotebook.metadata.title}\n    seoDescription={data.jupyterNotebook.metadata.seoDescription}\n    keywords={data.jupyterNotebook.metadata.keywords}\n  />\n);\nexport default JupyterNotebook;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["TITLES","distribution","correlation","ranking","partOfAWhole","evolution","map","flow","general","ChartFamilySection","_ref","chartFamily","allLogos","chartTypesInfo","filter","chart","family","id","link","fullUrlToInternalLink","pythonURL","React","Col","key","xs","md","className","SectionLogoWithOverlay","chartType","logo","caption","label","style","paddingBottom","Row","accumulateOffsetTop","el","totalOffset","offsetTop","scrollTop","clientTop","offsetParent","TableOfContent","headings","setHeadings","useState","titles","nodes","minDepth","active","setActive","useEffect","Array","from","document","querySelectorAll","node","title","innerHTML","depth","Number","nodeName","Math","min","apply","_toConsumableArray","h","scrollHandler","offsets","currentVisualizedLocation","window","scrollY","closest","reduce","prev","curr","abs","activeIndex","findIndex","offset","addEventListener","removeEventListener","_ref2","index","onClick","event","preventDefault","scrollIntoView","behavior","block","alignToTop","dangerouslySetInnerHTML","__html","siteId","adthrive","cmd","plugin","host","script","createElement","async","referrerpolicy","src","encodeURIComponent","location","href","firstScript","getElementsByTagName","parentNode","insertBefore","Layout","children","isTocEnabled","isHome","AdInjector","TopNavbar","Footer","SEO","seoDescription","keywords","image","lang","name","content","property","generalList","info","isGeneralFamily","includes","Link","to","SectionLogo","TitleAndDescription","description","isRaptiveEnabled","chartInfo","Container","ChartTypeLink","marginTop","Button","size","dataToVizURL","minHeight","chartDescription","url","width","marginLeft","Head","data","jupyterNotebook","metadata","slug","html","Spacing","hasGreyBackground","Contact","pageSlug","isNotebook","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","order","infix","push","useCol","length","displayName","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}