{"version":3,"file":"component---src-pages-pie-plot-js-bba962d036a21fcba7ce.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/pie-plot.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib } from '../components/MiscellaneousLogos';\nimport ChartImage from '../components/ChartImage';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/caveat/pie.html'>Pie Chart</a> is a circle divided into sectors that each represent a proportion of the whole. It is one of the most common viz type, but also probably the most <a href='https://www.data-to-viz.com/caveat/pie.html'>criticized</a>. In python, they are most of the time done thanks to the <code>pie()</code> function of the <code>Matplotlib</code> library.</p>\";\n\nconst quickCode = `# library\nimport matplotlib.pyplot as plt\n\n# create data: an array of values\nsize_of_groups=[12,11,3,30]\n\n# Create a pieplot\nplt.pie(size_of_groups)\nplt.show()\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Pie plot | Python & Matplotlib examples\"\n    seoDescription=\"A collection of pie chart examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Pie() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Pie Plot\"\n        description={chartDescription}\n        chartType=\"pie\"\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <code>matplotlib</code> allows to build a{' '}\n              <Link to=\"/pie-plot\">pie chart</Link> easily thanks to its{' '}\n              <code>pie()</code> function.\n            </p>\n            <p>\n              The input data you must provide is an array of numbers, where each\n              numbers will be mapped to one of the pie item.ðŸ”¥\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/pie-plot-matplotlib-basic'}>\n              <ChartImage\n                imgName=\"pie-plot-matplotlib-basic1\"\n                caption=\"Most basic donut chart with Python and Matplotlib\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Warning\">&#9888;&#65039; Mind the pie chart</h2>\n          <p>\n            Pie chart is probably the most criticized chart type. Humans are\n            pretty bad at reading angles, making it hard to rank the groups\n            accurately. Most of the time, it is better to display the\n            information as a <Link to=\"/barplot\">barchart</Link>, a{' '}\n            <Link to=\"/treemap\">treemap</Link> or a{' '}\n            <Link to=\"/lollipop-plot\">lollipop</Link> plot.\n          </p>\n          <p>\n            Have a look to the 3 pie charts below, can you spot the pattern\n            hidden in it?\n          </p>\n          <div style={{ maxWidth: '600px', margin: '0 auto' }}>\n            <a href=\"https://www.data-to-viz.com/caveat/pie.html\">\n              <ChartImage\n                imgName={'pieChartIssue'}\n                caption={\n                  \"Can you spot the pattern hidden behind those 3 pie charts? Click to see the same info visualized as barplots: much more insightful isn't it?\"\n                }\n              />\n            </a>\n          </div>\n          <a href=\"https://www.data-to-viz.com/caveat/pie.html\">\n            <Button size=\"sm\">See it as a barplot</Button>\n          </a>\n          <p>\n            Last but not least, please avoid the <code>explode</code> and{' '}\n            <code>shadow</code> options of the pie() function, they are killing\n            all the most basic dataviz principles.\n          </p>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Pie chart with <code>Matplotlib</code>\n        </h2>\n        <p>\n          The examples below should guide you through the <code>pie()</code>{' '}\n          function usage. It starts basics and then show how to add labels,\n          customize colors and more.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"pie-plot-matplotlib-basic-add-labels\"\n            caption=\"Add and customize the labels\"\n            linkTo=\"/pie-plot-matplotlib-basic\"\n          />\n          <ChartImageContainer\n            imgName=\"pie-plot-matplotlib-basic-add-padding\"\n            caption=\"Customize the pie section colors\"\n            linkTo=\"/pie-plot-matplotlib-basic\"\n          />\n          <ChartImageContainer\n            imgName=\"pie-plot-matplotlib-basic-colors\"\n            caption=\"Add blank space between each pie section.\"\n            linkTo=\"/pie-plot-matplotlib-basic\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"partOfAWhole\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","quickCode","Head","Pie","Layout","isTocEnabled","TitleAndDescription","description","chartType","Container","id","Row","CodeChunk","Spacing","style","maxWidth","margin","href","Button","size","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}