{"version":3,"file":"component---src-pages-index-js-2bfdebfc355ff522203a.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/VoronoiImagePatchwork.js","webpack://the-python-graph-gallery/./src/util/use-dimensions.js","webpack://the-python-graph-gallery/./src/components/Parallax.js","webpack://the-python-graph-gallery/./src/pages/index.js","webpack://the-python-graph-gallery/./src/util/list-of-best-charts.js","webpack://the-python-graph-gallery/./static/asset/pypalettes.gif"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport './voronoi-image-patchwork.css';\nimport { useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { Delaunay } from 'd3';\nimport { useDimensions } from '../util/use-dimensions';\nimport { listOfBestCharts } from '../util/list-of-best-charts';\nimport PropTypes from 'prop-types';\nimport { Container } from 'react-bootstrap';\nimport { Link } from 'gatsby';\n\n// All images in cells can be more or less zoomed in\n// If zoom is too strong, img will be blurry\n// If zoom  is not strong enough, img will be duplicated\nconst IMG_ZOOM = 400;\nconst NUMBER_OF_CELLS = 21;\nconst PADDING_BETWEEN_CELLS = 7;\nconst HEIGHT = 400;\n\n// Arbitrary data.\n// Each data point is the circumcenter of a cell in the voronoi diagram\n// x goes from 0 to 800 and y from 0 to 400\n// const data = [\n//   { x: 110, y: 10 },\n//   { x: 224, y: 4 },\n//   { x: 135, y: 90 },\n//   { x: 67, y: 34 },\n//   { x: 267, y: 34 },\n//   { x: 367, y: 34 },\n//   { x: 667, y: 234 },\n//   { x: 867, y: 134 },\n//   { x: 367, y: 340 },\n//   { x: 767, y: 34 },\n// ];\n\nexport const VoronoiImagePatchworkResponsive = () => {\n  const chartRef = useRef(null);\n  const chartSize = useDimensions(chartRef);\n\n  return (\n    <div ref={chartRef} className=\"patchwork-container\">\n      <VoronoiImagePatchwork height={HEIGHT} width={chartSize.width} />\n    </div>\n  );\n};\n\nconst VoronoiImagePatchwork = ({ width, height }) => {\n  const data = generateRandomData(NUMBER_OF_CELLS);\n\n  const xScale = d3.scaleLinear().domain([0, 1000]).range([0, width]);\n  const yScale = d3.scaleLinear().domain([0, 800]).range([0, height]);\n\n  //\n  // State\n  //\n  const [hovered, setHovered] = useState(undefined);\n\n  //\n  // Delaunay triangulation\n  //\n  const delaunay = useMemo(() => {\n    const formattedData = data.map((d) => [xScale(d.x), yScale(d.y)]);\n    return Delaunay.from(formattedData);\n  }, [width, height]);\n\n  //\n  // Voronoi Diagram Coordinates\n  //\n  const voronoi = useMemo(() => {\n    return delaunay.voronoi([0, 0, width, height]);\n  }, [data, width, height]);\n\n  //\n  // Draw cells with images in it\n  //\n  const allCells = data.map((cell, i) => {\n    const key = 'img' + i;\n    const cellPath = voronoi.renderCell(i);\n\n    const imgInfo = listOfBestCharts[i % listOfBestCharts.length];\n    const imgUrl =\n      'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/graph/' +\n      imgInfo.img +\n      '?raw=true';\n\n    return (\n      <g key={key}>\n        <defs>\n          <pattern\n            id={'img' + i}\n            patternUnits=\"objectBoundingBox\"\n            width={1}\n            height={1}\n          >\n            <image\n              href={imgUrl}\n              x={-100} // the -100 here allows to center the image a bit\n              y={-100}\n              width={IMG_ZOOM}\n              height={IMG_ZOOM}\n            />\n          </pattern>\n        </defs>\n        <Link href={imgInfo.link}>\n          <path\n            className={hovered ? 'voronoi-cell dimmed' : 'voronoi-cell'}\n            onMouseEnter={() => setHovered(imgInfo)}\n            onMouseLeave={() => setHovered(undefined)}\n            d={cellPath}\n            stroke=\"#f8f9fa\"\n            strokeWidth={PADDING_BETWEEN_CELLS}\n            fill={'url(#' + key + ')'}\n          />\n        </Link>\n      </g>\n    );\n  });\n\n  return (\n    <>\n      <svg width={width} height={height}>\n        {allCells}\n      </svg>\n      <Container>\n        <div style={{ height: 100, display: 'flex' }}>\n          {hovered && (\n            <div className=\"cell-caption\">\n              <p>\n                <span className=\"cell-caption-title\">\n                  <b>{hovered.title}</b>\n                </span>\n                <span className=\"cell-caption-author\">\n                  <i>{'by ' + hovered.author}</i>\n                </span>\n              </p>\n              <p>\n                <span className=\"cell-caption-description\">\n                  {hovered.description}\n                </span>\n              </p>\n              <p>\n                <span className=\"cell-caption-click\">\n                  <i>Click to read code</i>\n                </span>\n              </p>\n            </div>\n          )}\n        </div>\n      </Container>\n    </>\n  );\n};\n\nVoronoiImagePatchwork.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nfunction generateRandomData(n) {\n  const dataArray = [];\n\n  for (let i = 0; i < n; i++) {\n    const x = Math.random() * 1000; // Uniform distribution between 0 and 1000\n    const y = Math.random() * 800; // Uniform distribution between 0 and 800\n\n    dataArray.push({ x, y });\n  }\n\n  return dataArray;\n}\n","import { useEffect, useLayoutEffect, useState } from 'react';\n\nexport const useDimensions = (targetRef) => {\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0,\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  return dimensions;\n};\n","import React from 'react';\n\nexport default function Parallax({ imgLink, opacity, height, children }) {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        backgroundImage: 'url(' + imgLink + ')',\n        height: height,\n        backgroundAttachment: 'fixed',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n      }}\n    >\n      <div\n        style={{\n          height: '100%',\n          width: '100%',\n          backgroundColor: 'white',\n          opacity: 1 - opacity,\n          position: 'absolute',\n        }}\n      />\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Spacing from '../components/Spacing';\nimport { VoronoiImagePatchworkResponsive } from '../components/VoronoiImagePatchwork';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport pypalettesGIF from '../../static/asset/pypalettes.gif';\n\nimport {\n  Matplotlib,\n  Pandas,\n  Plotly,\n  Plotnine,\n  Seaborn,\n} from '../components/MiscellaneousLogos';\nimport { Link } from 'gatsby';\nimport { SEO } from '../components/SEO';\nimport SubscribeButton from '../components/SubscribeButton';\nimport Parallax from '../components/Parallax';\n\nconst siteDescription = (\n  <>\n    <p>\n      👋 The Python Graph Gallery is a collection of <b>hundreds of charts</b>{' '}\n      made with <code>Python</code>.\n    </p>\n    <p>\n      Graphs are dispatched in about 40 sections following the{' '}\n      <a href=\"https://www.data-to-viz.com\">data-to-viz</a> classification.\n      There are also sections dedicated to more general topics like{' '}\n      <a\n        href=\"https://python-graph-gallery.com/matplotlib/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        matplotlib\n      </a>{' '}\n      or{' '}\n      <a\n        href=\"https://python-graph-gallery.com/seaborn/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        seaborn\n      </a>\n      .\n    </p>\n    <p>\n      Each example is accompanied by its corresponding <b>reproducible code</b>{' '}\n      along with comprehensive <b>explanations</b>. The gallery offers tutorials\n      that cater to beginners to help kickstart their journey, as well as\n      advanced examples that demonstrate the potency of Python in the realm of\n      data visualization.\n    </p>\n    <br />\n    <p>❤️ Love the project?</p>\n    <p>\n      You can contribute on{' '}\n      <a\n        href=\"https://github.com/holtzy/The-Python-Graph-Gallery\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        github\n      </a>\n      , send me a feedback on{' '}\n      <a\n        href=\"https://twitter.com/R_Graph_Gallery\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        twitter\n      </a>{' '}\n      or join 4000+ subscribers to the newsletter to know when new examples are\n      published! 🔥\n    </p>\n    <SubscribeButton />\n  </>\n);\n\nexport const Head = () => (\n  <SEO\n    title=\"Python Graph Gallery\"\n    seoDescription=\"The Python Graph Gallery displays hundreds of charts made with Python, always with explanation and reproduciible code\"\n  />\n);\n\nexport default function Home() {\n  return (\n    <Layout isHome>\n      <TitleAndDescription\n        title=\"The Python Graph Gallery\"\n        description={siteDescription}\n      />\n      <div className=\"greySection\">\n        <Container>\n          <br />\n          <h2 style={{ borderBottom: 'none' }}>\n            The biggest list of python chart examples\n          </h2>\n          <p>\n            Within our collection, we cover <b>every chart type</b> imaginable\n            to ensure we fullfil your data visualization needs. To streamline\n            the process of finding your required chart, we meticulously{' '}\n            <b>classified</b> all the examples under their respective chart\n            types.\n          </p>\n          <p>\n            For each chart type, we kick off with a <b>foundational tutorial</b>{' '}\n            that introduces its basic structure and utility. After mastering the\n            basics, users can delve into our step-by-step guides on the most\n            elementary <b>customizations</b>, ensuring your chart not only\n            presents data but does so with an individual touch that caters to\n            your specific requirements.\n          </p>\n          <br />\n          <ChartFamilySection chartFamily=\"distribution\" />\n          <ChartFamilySection chartFamily=\"correlation\" />\n          <ChartFamilySection chartFamily=\"ranking\" />\n          <ChartFamilySection chartFamily=\"partOfAWhole\" />\n          <ChartFamilySection chartFamily=\"evolution\" />\n          <ChartFamilySection chartFamily=\"map\" />\n          <ChartFamilySection chartFamily=\"flow\" />\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n      <Container>\n        <br />\n        <h2 style={{ borderBottom: 'none' }}>\n          Hunting the most beautiful Python charts\n        </h2>\n        <p>\n          Explore our curated collection of the <b>finest Python charts</b>,\n          handpicked for their superior <b>design</b> and <b>accuracy</b>. Go\n          beyond the defaults with chart examples that are both visually\n          stunning and instructive.\n        </p>\n        <p>\n          Accompanied by in-depth tutorials, this section will please seasoned\n          professionals aspiring to <b>elevate their craft</b>. Featuring the\n          finest charts on the web, we stay ahead of the curve, showcasing the\n          latest tips, tricks, and <b>advanced techniques</b> in data\n          visualization.\n        </p>\n        <Link href=\"/best-python-chart-examples\">\n          <Button size=\"sm\" style={{ borderWidth: 1, marginLeft: 0 }}>\n            Check the best Examples\n          </Button>\n        </Link>\n        <br />\n        <br />\n      </Container>\n      <VoronoiImagePatchworkResponsive />\n      <Spacing />\n      <Spacing />\n      <div className=\"greySection\">\n        <Container>\n          <br />\n          <h2 style={{ borderBottom: 'none' }}>Palette color finder</h2>\n          <p>\n            {' '}\n            Selecting <b>optimal chart colors</b> can be challenging and\n            time-intensive. The <a>pypalettes</a> library simplifies this\n            process by providing access to over <b>2,500 color palettes</b> with\n            a single line of code.{' '}\n          </p>{' '}\n          <p>\n            {' '}\n            Additionally, the Python Graph Gallery features a{' '}\n            <a href=\"/color-palette-finder\">dedicated page</a> where you can\n            <b>browse all these palettes</b> and preview their appearance on\n            your charts.{' '}\n          </p>\n          <a href=\"/color-palette-finder\">\n            <img\n              src={pypalettesGIF}\n              alt=\"Color palette finder demo\"\n              style={{ maxWidth: '900px', width: '100%' }}\n            />\n          </a>\n          <br />\n          <br />\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Link href=\"/color-palette-finder\">\n              <Button\n                size=\"lg\"\n                style={{ borderWidth: 1, marginLeft: 0, marginTop: 10 }}\n              >\n                Use the palette finder\n              </Button>\n            </Link>\n          </div>\n          <br />\n          <br />\n        </Container>\n      </div>\n      <Spacing />\n      <Spacing />\n      <Container>\n        <br />\n        <h2 style={{ borderBottom: 'none' }}>\n          Python Graphing with State-of-the-Art Libraries\n        </h2>\n        <p>\n          The python graph gallery relies on the <b>latest</b> and most{' '}\n          <b>powerful</b> charting libraries.\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <h3>\n              <Matplotlib />\n              Matplotlib\n            </h3>\n            <p>\n              The <b>foundation</b> of Python visualization. Offers a wide array\n              of customizable 2D plots and an <b>extensive set of tools</b> for\n              creating intricate figures and charts.\n            </p>\n            <Link href=\"/matplotlib\">Tutorial</Link>\n            <br />\n          </Col>\n          <Col xs={12} md={6}>\n            <h3>\n              <Seaborn />\n              Seaborn\n            </h3>\n            <p>\n              Built atop Matplotlib, Seaborn <b>elevates</b> data visualization\n              by providing a higher-level interface and stunning default themes.\n            </p>\n            <Link href=\"/seaborn\">Tutorial</Link>\n            <br />\n          </Col>\n          <Col xs={12} md={6}>\n            <h3>\n              <Pandas />\n              Pandas\n            </h3>\n            <p>\n              Beyond its powerful <b>data manipulation</b> capabilities, Pandas\n              offers convenient plotting methods, enabling users to visualize\n              data directly from DataFrame and Series objects.\n            </p>\n            <Link href=\"/pandas\">Tutorial</Link>\n            <br />\n          </Col>\n          <Col xs={12} md={6}>\n            <h3>\n              <Plotly />\n              Plotly\n            </h3>\n            <p>\n              Delivering <b>interactive</b> and browser-based visualizations,\n              Plotly allows users to craft visually captivating charts, bridging\n              the gap between static graphs and <b>web-based interactivity</b>.\n            </p>\n            <Link href=\"/plotly\">Tutorial</Link>\n            <br />\n          </Col>\n          <Col xs={12} md={6}>\n            <h3>\n              <Plotnine />\n              Plotnine\n            </h3>\n            <p>\n              Plotnine is a Python library for creating statistical\n              visualizations with a simple <b>grammar of graphics</b> interface,\n              inspired by{' '}\n              <a href=\"https://r-graph-gallery.com/ggplot2-package.html\">\n                ggplot2\n              </a>{' '}\n              in R.\n            </p>\n            <Link href=\"/plotnine\">Tutorial</Link>\n            <br />\n          </Col>\n        </Row>\n        <br />\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Link href=\"/best-dataviz-packages\">\n            <Button size=\"lg\" style={{ borderWidth: 1, marginLeft: 0 }}>\n              Check the full list\n            </Button>\n          </Link>\n        </div>\n        <br />\n        <br />\n      </Container>\n      <Spacing />\n      <Parallax\n        imgLink=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/asset/dataviz-inspiration-overview.png?raw=true\"\n        height={300}\n        opacity={0.3}\n      >\n        <div\n          style={{\n            position: 'relative',\n            height: '100%',\n            width: '100%',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <div style={{ maxWidth: 600, textAlign: 'center' }}>\n            <h2 className=\"contactTitle\">Love beautiful charts?</h2>\n            <p>\n              The Python Graph Gallery complements{' '}\n              <a href=\"https://www.dataviz-inspiration.com\" target=\"_blank\">\n                dataviz-Inspiration.com\n              </a>\n              , a website featuring hundreds of my favorite data visualization\n              projects.\n            </p>\n            <a href=\"https://www.dataviz-inspiration.com\" target=\"_blank\">\n              <Button size=\"md\">Get some inspiration</Button>\n            </a>\n          </div>\n        </div>\n      </Parallax>\n\n      <Spacing />\n      <Contact />\n      <Spacing />\n    </Layout>\n  );\n}\n","export const listOfBestCharts = [\n  {\n    link: 'web-lollipop-with-colormap-and-arrow',\n    title: 'Evolution of temperature variation',\n    description:\n      'Temperature change compared to the average between 1951 and 1980.',\n    img: 'web-lollipop-with-colormap-and-arrow-square.png',\n    alt: 'Waffle chart about storms frequency',\n    author: 'Joseph Barbier',\n  },\n  {\n    link: 'web-waffle-chart-for-time-series',\n    title: 'Share of cereals used as animal feeds',\n    description:\n      'Change in the number of storms by storm type between 2010 and 2022.',\n    img: 'web-waffle-chart-for-time-series.png',\n    alt: 'Waffle chart about storms frequency',\n    author: 'Muhammad Azhar',\n  },\n  {\n    link: 'web-waffle-chart-as-share',\n    title: 'Share of cereals used as animal feeds',\n    description:\n      'Breakdown by continent of the percentage of cereals used for animal feed.',\n    img: 'web-waffle-chart-as-share-square.png',\n    alt: 'Waffle chart about cereals',\n    author: 'Benjamin Nowak',\n  },\n  {\n    link: 'web-minimalist-area-chart',\n    title: \"Japan's population evolution\",\n    description: \"Evolution of Japan's population between 1952 and 2024.\",\n    img: 'web-minimalist-area-chart-square.png',\n    alt: 'Area chart',\n    author: 'Joseph Barbier',\n  },\n  {\n    link: 'web-bubble-map-with-arrows',\n    title: 'Earthquakes around the world',\n    description:\n      'Repartition of earthquakes around the world, with description of extensive description and annotations.',\n    img: 'web-bubble-map-with-arrows-square.png',\n    alt: 'Cartogram of Asia',\n    author: 'Joseph Barbier',\n  },\n  {\n    link: '592-non-contiguous-cartogram-in-python',\n    title: 'Density population in Asia',\n    description: 'Cartogram (non-contiguous) of population density in Asia.',\n    img: '592-non-contiguous-cartogram-in-python.png',\n    alt: 'Cartogram of Asia',\n    author: 'Joseph Barbier',\n  },\n  {\n    link: 'web-map-with-custom-legend',\n    title: 'CO2 consumption in Europe',\n    description:\n      'Choropleth map of CO2 consumption per capita in Europe, with a custom legend.',\n    img: 'web-map-with-custom-legend.png',\n    alt: 'Choropleth map of CO2 consumption per capita in Europe',\n    author: 'Joseph Barbier',\n  },\n  {\n    link: 'web-waffle-with-small-multiples',\n    title: 'London recycling rates',\n    description:\n      'Repartition of London recycling rates by boroughs, with small multiples of waffle charts.',\n    img: 'web-waffle-with-small-multiples-square.png',\n    alt: 'Small multiples of waffle charts',\n    author: 'Lisa Hornung',\n  },\n  {\n    link: 'web-stacked-area-with-inflexion-arrows',\n    title: 'Evolution of natural disasters',\n    description:\n      'Number of natural disasters over time per disaster type, with inflexion arrows for the legend.',\n    img: 'web-stacked-area-with-inflexion-arrows-square.png',\n    alt: 'Stacked area chart with labels',\n    author: 'Joseph Barbier',\n  },\n  {\n    link: 'web-small-multiple-with-highlights',\n    title: 'Unemployment rate during COVID-19',\n    description:\n      'Evolution of unemployment rates between different regions across the world during the COVID-19 pandemic.',\n    img: 'web-small-multiple-with-highlights-square.png',\n    alt: 'Picture of a clean small multiple line chart made with matplotlib',\n    author: 'Joseph Barbier',\n  },\n  {\n    link: 'web-lollipop-with-background-image',\n    title: 'Lollipop about music genres',\n    description:\n      'A lollipop plot with a background image to visualize the popularity of music genres over time.',\n    img: 'web-lollipop-with-background-image-square.png',\n    alt: 'A diverging lollipop chart with an image in the background',\n    author: 'Joseph Barbier',\n  },\n\n  {\n    link: 'web-map-usa-with-scatter-plot-on-top',\n    title: 'Map with scatter plot on top',\n    description:\n      'Path and duration of solar eclipses in the USA, in 2023 and 2024.',\n    img: 'web-map-usa-with-scatter-plot-on-top.png',\n    alt: 'bubble map',\n    author: 'Joseph Barbier',\n  },\n\n  {\n    link: 'web-multiple-maps',\n    title: 'Multiple choropleth map',\n    description:\n      'Combine multiple maps about happiness together, with a lollipop plot for the legend.',\n    img: 'web-multiple-maps-square.png',\n    alt: 'choropleth map',\n    author: 'Joseph Barbier',\n  },\n\n  {\n    link: 'web-scatter-with-customized-annotations',\n    title: 'Scatter plot with specific highlights',\n    description:\n      'Relationship between footprint and biocapacity of countries, with specific highlights on some countries.',\n    img: 'web-scatter-with-customized-annotations-square.png',\n    alt: 'choropleth map',\n    author: 'Joseph Barbier',\n  },\n\n  {\n    link: 'web-dumbell-chart',\n    title: 'Dumbell chart',\n    description:\n      'Advanced dumbell chart about wins and losses in the Bundesliga.',\n    img: 'web-dumbell-chart.png',\n    alt: 'lollipop plot',\n    author: 'Cédric Scherer',\n  },\n\n  {\n    link: 'web-heatmap-comparison',\n    title: 'Double heatmap for comparison',\n    description:\n      'A double heatmap to compare normalized and non-normalized data about energy consumption in France',\n    img: 'web-heatmap-comparison-5.png',\n    alt: 'ridgeline plot',\n    author: 'Joseph Barbier',\n  },\n\n  {\n    link: 'web-ridgeline-by-text',\n    title: 'Ridgeline with quantiles display',\n    description:\n      'A ridgeline plot with quantiles and annotations to visualize the price distribution of rents in San Francisco.',\n    img: 'web-ridgeline-by-text.png',\n    alt: 'ridgeline plot',\n    author: 'Ansgar Wolsing',\n  },\n\n  {\n    link: '564-publication-ready-table-with-plottable',\n    title: 'Polished table with bubbles',\n    description:\n      'Investigating the 10 best and worst countries to live in, with bubble in cells to represent the data. A good way to showcase the plottable library.',\n    img: '564-publication-ready-table-with-plottable.png',\n    alt: 'Clean table with plottable',\n    author: 'Fortune Uwha',\n  },\n\n  {\n    link: 'web-stacked-charts',\n    title: 'Line chart with word cloud',\n    description:\n      'Movie titles in the background of a line chart to visualize average ratings over time.',\n    img: 'web-stacked-charts.png',\n    alt: 'Clean table with plottable',\n    author: 'Joseph Barbier',\n  },\n\n  {\n    link: 'web-stacked-area-charts-on-a-map',\n    title: 'Mini stacked areas for US states',\n    description:\n      'This compendium of stacked area charts went viral. Read a translation in python of this work by Enrin, originally written in R.',\n    img: 'web-stacked-area-charts-on-a-map.png',\n    alt: 'Stacked area charts displayed on a map',\n    author: 'Erin',\n  },\n\n  {\n    link: 'web-map-europe-with-color-by-country',\n    title: 'Choropleth map with gradient color',\n    description:\n      'A choropleth map with a gradient color scale to visualize the number of people with cancer in European countries.',\n    img: 'web-map-europe-with-color-by-country.png',\n    alt: 'Choropleth map with gradient color',\n    author: 'Joseph Barbier',\n  },\n\n  {\n    link: '532-customizing-circular-barplot-in-matplotlib',\n    title: 'Ordered & Mirrored barplot',\n    description:\n      'A highly customized circular barplot visualizing Star Wars data using Python and Matplotlib. It provides a step-by-step guide from a basic barplot to a fully customized version including fonts, y-axis scaling, annotations and legend.',\n    img: '532-episode1-each-line-anakin.png',\n    alt: 'Circular Barplot about star wars',\n    author: 'Lisa Hornung',\n  },\n  {\n    link: 'web-ordered-mirror-barplot',\n    title: 'Ordered & Mirrored barplot',\n    description:\n      'A mirror barplot with individual observations using the Matplotlib library to visualize data about the Erasmus Program in European countries.',\n    img: 'web-ordered-mirror-barplot.png',\n    alt: 'Ordered mirrored barplot made with matplotlib',\n    author: 'Benjamin Nowak',\n  },\n  {\n    link: 'web-bubble-plot-with-annotations-and-custom-features',\n    title: 'Scatterplot with grouping, highlighting and annotation',\n    description:\n      'A scatter plot with custom annotations and colors, with some markers being circled.',\n    img: 'web-bubble-plot-with-annotations-and-custom-features.png',\n    alt: 'Polished scatterplot made with Python',\n    author: 'Data Wrapper',\n  },\n  {\n    link: 'web-histogram-with-annotations',\n    title: 'Histogram with clean color scale and annotation',\n    description:\n      'A clean and insightful histogram produced by the french institute of statistics showing the salary distribution in the country.',\n    img: 'web-histogram-with-annotations.png',\n    alt: 'Clean histogram reproduction in Python',\n    author: 'INSEE',\n  },\n  {\n    link: '524-area-chart-over-flexible-baseline',\n    title: 'Area over flexible baseline chart',\n    description:\n      'An area over a flexible baseline to show deviations from a reference or baseline made with Python and Matplotlib or Plotly.',\n    img: '524-area-over-flexible-baseline_square.png',\n    alt: 'Area over a flexible baseline made with Python and Matplotlib/Plotly',\n    author: 'J. Kühn',\n  },\n  {\n    link: 'web-circular-barplot-with-matplotlib',\n    title: 'Circular Barplot',\n    description:\n      'A circular barchart with several features per group made with Python and Matplotlib',\n    img: 'web-circular-barplot-with-matplotlib-square.png',\n    alt: 'clean circular barplot made with Python and Matplotlib',\n    author: 'T. Stadler',\n  },\n  {\n    link: 'web-circular-lollipop-plot-with-matplotlib',\n    title: 'Circular Lollipop Plot',\n    description:\n      'A circular lollipop plot with customized layout, great color palette and in circle legend',\n    img: 'web-circular-lollipop-plot-with-matplotlib-square.png',\n    alt: 'circular lollipop plot made with Python and Matplotlib',\n    author: 'C. Scherer',\n  },\n  {\n    link: 'web-ggbetweenstats-with-matplotlib',\n    title: 'Violin and Boxplot combination',\n    description:\n      'Allows the comparison of several groups with statistical test results on top',\n    img: 'web-ggbetweenstats-with-matplotlib-square.png',\n    alt: 'Combination of a violin and a boxplot made with Python and Matplotlib',\n    author: 'T. Wang',\n  },\n  {\n    link: 'web-heatmap-and-radial-barchart-plastics',\n    title: 'Circle Heatmap',\n    description:\n      'A heatmap where each cell is filled by a circle with varying size',\n    img: 'web-heatmap-and-radial-barchart-plastics-square1.png',\n    alt: 'Heatmap with varying circle in cells',\n    author: 'M. Siple',\n  },\n  {\n    link: 'web-heatmap-and-radial-barchart-plastics',\n    title: 'Circular barplot',\n    description: 'A circular barplot with small multiples',\n    img: 'web-heatmap-and-radial-barchart-plastics-square2.png',\n    alt: 'Circular barplot with small multiple',\n    author: 'M. Siple',\n  },\n  {\n    link: 'web-highlighted-lineplot-with-faceting',\n    title: 'Line chart with faceting',\n    description:\n      'Several highlighted lineplots arranged in a multi panel layout to explore the evolution of the water source installation rankings by country',\n    img: 'web-highlighted-lineplot-with-faceting-square.png',\n    alt: 'multi panel layout with Python line charts',\n    author: 'A. Madjid',\n  },\n\n  {\n    link: 'web-scatterplot-with-images-in-circles',\n    title: 'Scatterplot with images',\n    description:\n      'A scatter plot with images inside each marker to provide additional context',\n    img: 'web-scatterplot-with-images-in-circles.png',\n    alt: 'Scatterplot with images in python',\n    author: 'Tanya Shapiro',\n  },\n\n  {\n    link: 'web-horizontal-barplot-with-labels-the-economist',\n    title: 'Horizontal Barplot',\n    description:\n      'A reproduction of an horizontal barplot made by The Economist to showcase the power of Python for dataviz',\n    img: 'web-horizontal-barplot-with-labels-the-economist-square.png',\n    alt: \"Horizonal barplot with the Economist's style\",\n    author: 'The Economist',\n  },\n  {\n    link: 'web-lemurs-parallel-chart',\n    title: 'Parallel chart',\n    description:\n      'A parallel coordinate chart to explore the maximum ages recorded for different species of lemurs with Python and Matplotlib.',\n    img: 'web-lemurs-parallel-chart-square.png',\n    alt: 'Parallel chart made with Python',\n    author: 'G. Karamanis',\n  },\n  {\n    link: 'web-line-chart-with-labels-at-line-end',\n    title: 'Inline labels',\n    description:\n      'Good looking line chart with inline labels at the end of each line',\n    img: 'web-line-chart-with-labels-at-line-end-square.png',\n    alt: 'Line chart with inline labels',\n    author: 'C. Scherer',\n  },\n  {\n    link: 'web-lineplots-and-area-chart-the-economist',\n    title: 'Line chart from the Economist',\n    description:\n      'Mimicking the style of the Economist to get a clean line chart',\n    img: 'web-lineplots-and-area-chart-the-economist-square1.png',\n    alt: 'Python line chart with style of the Economist',\n    author: 'The Economist',\n  },\n  {\n    link: 'web-lineplots-and-area-chart-the-economist',\n    title: 'Area chart from the Economist',\n    description:\n      'Mimicking the style of the Economist to get a clean area chart',\n    img: 'web-lineplots-and-area-chart-the-economist-square2.png',\n    alt: 'Python area chart with style of the Economist',\n    author: 'The Economist',\n  },\n  {\n    link: 'web-lollipop-plot-with-python-mario-kart-64-world-records',\n    title: 'Lollipop chart',\n    description:\n      'A highly customized lollipop chart showing world records for the Mario Kart 64 racing game on the Nintendo 64',\n    img: 'web-lollipop-plot-with-python-mario-kart-64-world-records-square.png',\n    alt: 'Lollipop Chart made with Python and matplotlib',\n    author: 'C. Scherer',\n  },\n  {\n    link: 'web-multiple-lines-and-panels',\n    title: 'Line chart with small multiple',\n    description:\n      'A line chart with several groups per panel on a small multiple layout. With a beautiful color palette.',\n    img: 'web-multiple-lines-and-panels-square.png',\n    alt: 'Line chart with several groups per panel on a small multiple layout',\n    author: 'O. Medina',\n  },\n  {\n    link: 'web-radar-chart-with-matplotlib',\n    title: 'Radar chart with matplotlib',\n    description:\n      'A highly customized radar chart with custom annotations and labels to explore the palmerpenguins dataset made with Python and Matplotlib.',\n    img: 'web-radar-chart-with-matplotlib-square.png',\n    alt: 'Radar chart with Matplotlib',\n    author: 'T. Wang',\n  },\n  {\n    link: 'web-scatterplot-astronaut',\n    title: 'Astronaut Scatterplot',\n    description:\n      'A chart made of a scatterplot with variable color, shape, and opacity, and several annotations to explore the relationship between the characteristics of astronauts and space missions',\n    img: 'web-scatterplot-astronaut-square.png',\n    alt: 'Scatterplot with variable color in Python',\n    author: 'C. Thompson',\n  },\n  {\n    link: 'web-scatterplot-text-annotation-and-regression-matplotlib',\n    title: 'Scatterplot with regression fit',\n    description:\n      'A custom scatterplot with an overlayed regression fit and auto-positioned labels to explore the relationship between the Corruption Perceptions Index and Human Development Index',\n    img: 'web-scatterplot-text-annotation-and-regression-matplotlib-square.png',\n    alt: 'Scatterplot with regression fit',\n    author: 'C. O. Wilke',\n  },\n  {\n    link: 'web-stacked-line-chart-with-labels',\n    title: 'Stacked barchart',\n    description:\n      'A clean stacked barplot with nice color palette, some very clean inline labels, a powerful title and slick footer caption with logos.',\n    img: 'web-stacked-line-chart-with-labels-square.png',\n    alt: 'Clean stacked barplot',\n    author: 'G. Fontana',\n  },\n  {\n    link: 'web-streamchart-with-matplotlib',\n    title: 'X-men Streamchart',\n    description:\n      \"A streamchart to explore the appearances of the most popular characters in Chris Claremont's X-Men comics with Python\",\n    img: 'web-streamchart-with-matplotlib.png',\n    alt: 'Streamchart made in Python',\n    author: 'C. Scherer',\n  },\n  {\n    link: 'web-text-repel-with-matplotlib',\n    title: 'Scatterplot with text repel',\n    description:\n      'A custom scatterplot with auto-positioned labels to explore the palmerpenguins dataset made with Python and Matplotlib',\n    img: 'web-text-repel-with-matplotlib-square.png',\n    alt: 'Scatterplot with smart labels',\n    author: 'T. Wang',\n  },\n  {\n    link: 'web-time-series-and-facetting-with-matplotlib',\n    title: 'Timeseries and faceting',\n    description:\n      'Multiple lineplots with filled areas with a customized layout to explore the evolution of animal rescues across different boroughs in London',\n    img: 'web-time-series-and-facetting-with-matplotlib-square.png',\n    alt: 'Timeseries chart with filled areas and faceting',\n    author: 'G. Karamanis',\n  },\n  {\n    link: 'web-polar-chart',\n    title: 'Polar bar chart',\n    description:\n      'A polar bar chart showing the number of spanish speakers per country',\n    img: 'web-polar-chart.png',\n    alt: 'Polar barchart with Python',\n    author: 'nyx-it-up',\n  },\n  {\n    link: 'heatmap-for-timeseries-matplotlib',\n    title: 'Hourly heatmap',\n    description: 'A very clean heatmap used as a timeseries',\n    img: 'heatmap-for-timeseries-matplotlib-square.png',\n    alt: 'A very clean heatmap used as a timeseries',\n    author: 'J. MacKintosh',\n  },\n  {\n    link: 'web-line-chart-small-multiple',\n    title: 'Line chart & small multiple',\n    description:\n      'Small multiple is a dataviz technique allowing to study several groups on the same figure. Repeating all groups but faded out adds some useful context to each section.',\n    img: 'web-line-chart-small-multiple-square.png',\n    alt: 'Line chart with small multiple and all groups faded out',\n    author: 'G. Fontana',\n  },\n  {\n    link: 'web-barplot-with-annotations-and-arrows',\n    title: 'Barplot with annotations and arrows',\n    description:\n      'A barplot with annotations and arrows to highlight the most important features of the data',\n    img: 'web-barplot-with-annotations-and-arrows-square.png',\n    alt: 'Line chart with small multiple and all groups faded out',\n    author: 'J. Barbier',\n  },\n];\n","export default __webpack_public_path__ + \"static/pypalettes-30c04e6e9cc4378a11aa4ded22376216.gif\";"],"names":["VoronoiImagePatchworkResponsive","chartRef","useRef","chartSize","targetRef","getDimensions","width","current","offsetWidth","height","offsetHeight","dimensions","setDimensions","useState","handleResize","useEffect","window","addEventListener","removeEventListener","useLayoutEffect","useDimensions","React","ref","className","VoronoiImagePatchwork","_ref","data","n","dataArray","i","x","Math","random","y","push","generateRandomData","xScale","d3","domain","range","yScale","hovered","setHovered","undefined","delaunay","useMemo","formattedData","map","d","Delaunay","from","voronoi","allCells","cell","key","cellPath","renderCell","imgInfo","listOfBestCharts","length","imgUrl","img","id","patternUnits","href","Link","link","onMouseEnter","onMouseLeave","stroke","strokeWidth","fill","Container","style","display","title","author","description","Parallax","imgLink","opacity","children","position","backgroundImage","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","backgroundColor","siteDescription","target","rel","SubscribeButton","Head","SEO","seoDescription","Home","Layout","isHome","TitleAndDescription","borderBottom","ChartFamilySection","chartFamily","Button","size","borderWidth","marginLeft","Spacing","src","pypalettesGIF","alt","maxWidth","justifyContent","marginTop","Row","Col","xs","md","Matplotlib","Seaborn","Pandas","Plotly","Plotnine","alignItems","textAlign","Contact"],"sourceRoot":""}