"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[8546],{3572:function(e,t,n){n.d(t,{A:function(){return m}});var a=n(6540),l=n(4794),o=n(2532);const r=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function m(e){let{imgName:t,caption:n}=e;if(r.includes(t))return a.createElement("p",null,"TODO");const m=(0,l.useStaticQuery)("2757772085").allFile.edges.find((e=>e.node.name.includes(t)));return m?a.createElement(a.Fragment,null,a.createElement("div",{className:"chartImageContainer"},a.createElement(o.G,{image:m.node.childImageSharp.gatsbyImageData,alt:n,className:"chartImageImg"}),n&&a.createElement("div",{className:"chartImageOverlay"},a.createElement("div",{className:"chartImageOverlayText"},a.createElement("p",null,n))))):null}},435:function(e,t,n){n.d(t,{k:function(){return l}});var a=n(6540);const l=e=>{let{title:t,seoDescription:n,keywords:l,image:o}=e;return a.createElement(a.Fragment,null,a.createElement("title",null,t),a.createElement("html",{lang:"en"}),a.createElement("meta",{name:"description",content:n||"How to build a chart with Python"}),a.createElement("meta",{name:"author",content:"Yan Holtz"}),a.createElement("meta",{name:"keywords",content:l||"python, chart, graph, code, viz, dataviz"}),a.createElement("meta",{property:"og:site_name",content:"The Python Graph Gallery"}),a.createElement("meta",{property:"og:title",content:t}),a.createElement("meta",{property:"og:image",content:o||"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true"}),a.createElement("meta",{property:"og:description",content:n}),a.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),a.createElement("meta",{name:"twitter:site",content:"@R_Graph_Gallery"}))}},620:function(e,t,n){n.r(t),n.d(t,{Head:function(){return g},default:function(){return b}});var a=n(6540),l=n(7238),o=n(7906),r=n(3048),m=n(9441),i=n(4479),c=n(834),s=n(4794),u=n(1105),f=n(5951),h=n(5216),p=n(3572),d=n(435);const E=a.createElement(a.Fragment,null,a.createElement("p",null,a.createElement("a",{href:"https://github.com/JosephBARBIERDARNAL/pyfonts"},"PyFonts")," is a library that allows to load easily any font from the web and use it in your matplotlib charts."),a.createElement("p",null,"It was created by ",a.createElement("a",{href:"https://barbierjoseph.com/"},"Joseph Barbier")," ","in order to ",a.createElement("b",null,"simplify")," the process to loading fonts in matplotlib and"," ",a.createElement("b",null,"remove")," the need to install them on your computer.")),g=()=>a.createElement(d.k,{title:"PyFonts",seoDescription:"An overview of the PyFonts library in Python"});function b(){return a.createElement(o.A,{title:"PyFonts"},a.createElement(l.A,{title:"PyFonts: a simple way to load fonts for matplotlib",description:E,chartType:"pyfonts"}),a.createElement(r.A,null,a.createElement("h2",{id:"Quick"},"⏱ Quick start"),a.createElement("p",null,"Before using pyfonts you need to ",a.createElement("b",null,"install")," it. This can easily be done with ",a.createElement("code",null,"pip"),":"),a.createElement("br",null),a.createElement(f.A,null,v),a.createElement("br",null),a.createElement(i.A,{className:"align-items-center"},a.createElement(u.A,{md:6},a.createElement("p",null,"pyfonts provides ",a.createElement("b",null,"1 simple function"),":",a.createElement("code",null,"load_font()"),": load a font from the web (Github) and return a matplotlib font object.")),a.createElement(u.A,{md:6},a.createElement(p.A,{imgName:"quickstart-pyfonts",caption:"Basic use case of pyfonts"}))),a.createElement(f.A,null,y)),a.createElement(h.A,null),a.createElement(r.A,null,a.createElement("h2",null,"1- How to find fonts"),a.createElement("p",null,"There are many fonts available on the web. The"," ",a.createElement("strong",null,"easiest way")," to find one is to follow these steps:"),a.createElement("ul",null,a.createElement("li",null,"Browse ",a.createElement("a",{href:"https://fonts.google.com/"},"Google Font website")," ","to find a font that you like. Let's say you want to use"," ",a.createElement("a",{href:"https://fonts.google.com/specimen/Amaranth?query=amaranth"},"Amaranth"),"."),a.createElement("li",null,"Go to the"," ",a.createElement("a",{href:"https://github.com/google/fonts/tree/main/ofl"},"Google font GitHub repository")," ","and type the name of your desired font in the search bar. We find that ",a.createElement("i",null,"Amaranth font file")," in ",a.createElement("strong",null,"Bold")," is named"," ",a.createElement("code",null,"https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf"),"."),a.createElement("li",null,"Copy the URL and add ",a.createElement("code",null,"?raw=true")," at the end, which gives us"," ",a.createElement("code",null,"https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true"),"."))),a.createElement(h.A,null),a.createElement(r.A,null,a.createElement("h2",null,"2 - Load a font in matplotlib"),a.createElement(i.A,{className:"align-items-center"},a.createElement(u.A,{md:6},a.createElement("p",null,"Use ",a.createElement("code",null,"load_font()")," by passing the font's URL."),a.createElement("p",null,"Then, provide the ",a.createElement("b",null,"output")," of ",a.createElement("code",null,"load_font()")," ","directly to any ",a.createElement("a",{href:"/matplotlib"},"matplotlib")," function that accepts a font, such as ",a.createElement("code",null,"ax.text()"),".")),a.createElement(u.A,{md:6},a.createElement(p.A,{imgName:"usecase-pyfonts-1-square",caption:"how to load a font with pyfonts"})),a.createElement(f.A,null,w))),a.createElement(h.A,null),a.createElement(r.A,null,a.createElement("h2",null,"Different weight and style"),a.createElement(i.A,{className:"align-items-center"},a.createElement(u.A,{md:7},a.createElement("p",null,"When you load a font, ",a.createElement("b",null,"you don't load all its extensions"),": bold, italic, thin etc, but only the one from the url. If you want to be able to use a font and its ",a.createElement("b",null,"bold")," version, for example, you need to load both fonts:")),a.createElement(u.A,{md:5},a.createElement(p.A,{imgName:"usecase-pyfonts-2-square",caption:"Combine a normal font and a bold font with pyfonts"}))),a.createElement(f.A,null,A)),a.createElement(h.A,null),a.createElement(r.A,null,a.createElement("h2",null,"Gallery of examples"),a.createElement("p",null,"Here are some examples of what you can do with ",a.createElement("code",null,"PyFonts"),". Click on the images to see the code."),a.createElement(i.A,null,a.createElement(u.A,{xs:12,md:4},a.createElement(s.Link,{to:"/web-waffle-chart-for-time-series"},a.createElement(p.A,{imgName:"web-waffle-chart-for-time-series-square",caption:"Waffle chart with nice theme and fonts"}))),a.createElement(u.A,{xs:12,md:4},a.createElement(s.Link,{to:"/web-lollipop-with-colormap-and-arrow"},a.createElement(p.A,{imgName:"web-lollipop-with-colormap-and-arrow-square",caption:"Lollipop chart with arrows"}))),a.createElement(u.A,{xs:12,md:4},a.createElement(s.Link,{to:"/web-area-chart-with-different-colors-for-positive-and-negative-values"},a.createElement(p.A,{imgName:"web-area-chart-with-different-colors-for-positive-and-negative-values-square",caption:"Minimalist style area chart"}))))),a.createElement(h.A,null),a.createElement(r.A,null,a.createElement("h2",null,"Going further"),a.createElement("p",null,"You might be interested in",a.createElement("ul",null,a.createElement("li",null,"The"," ",a.createElement("a",{href:"https://github.com/JosephBARBIERDARNAL/pyfonts"}," ","official github repo of pyfonts")," ","(⭐ give it a star!)"),a.createElement("li",null,"Learn more on"," ",a.createElement("a",{href:"custom-fonts-in-matplotlib"},"how matplotlib handle fonts")),a.createElement("li",null,"How to ",a.createElement("a",{href:"/drawarrow"},"draw arrows in matplotlib")),a.createElement("li",null,"How to create"," ",a.createElement("a",{href:"/advanced-custom-annotations-matplotlib"},"beautiful annotation in matplotlib"))))),a.createElement(h.A,null),a.createElement("div",{className:"greySection",id:"related"},a.createElement(r.A,null,a.createElement(c.A,{chartFamily:"general"}))),a.createElement(h.A,null),a.createElement(r.A,null,a.createElement(m.A,null)),a.createElement(h.A,null))}const y='# Load pyfonts and matplotlib\nimport matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\n# load font from Github\nfont = load_font(\n   font_url="https://github.com/google/fonts/blob/main/apache/ultra/Ultra-Regular.ttf?raw=true"\n)\n\n# Create a plot with an annotation that uses the loaded font\nfig, ax = plt.subplots(figsize=(10, 6), dpi=300)\nax.text(\n   x=0.5,\n   y=0.5,\n   s=f"What an easy way to load fonts, isn\'t it?",\n   font=font,\n   fontsize=20,\n   ha="center",\n)\nplt.show()\n',w='import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\n  "https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true"\n)\n\nfig, ax = plt.subplots(figsize=(10, 10), dpi=300)\nax.text(\n    x=0.5,\n    y=0.5,\n    s=f"Amaranth font\\nwith PyFonts!!!",\n    font=font,\n    fontsize=50,\n    ha="center",\n)\nplt.show()\n',A='import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\n   "https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Regular.ttf?raw=true"\n)\nbold_font = load_font(\n   "https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true"\n)\n\nfig, ax = plt.subplots(figsize=(6, 6), dpi=300)\nax.text(\n   x=0.5,\n   y=0.5,\n   s=f"Congrats, you now have a cool font!",\n   font=font,\n   fontsize=20,\n   ha="center",\n)\nax.text(x=0.5, y=0.3, s=f"And now it\'s bold", font=bold_font, fontsize=25, ha="center")\nplt.show()\n',v="pip install pyfonts"}}]);
//# sourceMappingURL=component---src-pages-pyfonts-js-490723a084dca586b8ec.js.map