"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[3580],{3572:function(e,t,l){l.d(t,{A:function(){return c}});var a=l(6540),n=l(4794),o=l(2532);const r=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function c(e){let{imgName:t,caption:l}=e;if(r.includes(t))return a.createElement("p",null,"TODO");const c=(0,n.useStaticQuery)("2757772085").allFile.edges.find((e=>e.node.name.includes(t)));return c?a.createElement(a.Fragment,null,a.createElement("div",{className:"chartImageContainer"},a.createElement(o.G,{image:c.node.childImageSharp.gatsbyImageData,alt:l,className:"chartImageImg"}),l&&a.createElement("div",{className:"chartImageOverlay"},a.createElement("div",{className:"chartImageOverlayText"},a.createElement("p",null,l))))):null}},435:function(e,t,l){l.d(t,{k:function(){return n}});var a=l(6540);const n=e=>{let{title:t,seoDescription:l,keywords:n,image:o}=e;return a.createElement(a.Fragment,null,a.createElement("title",null,t),a.createElement("html",{lang:"en"}),a.createElement("meta",{name:"description",content:l||"How to build a chart with Python"}),a.createElement("meta",{name:"author",content:"Yan Holtz"}),a.createElement("meta",{name:"keywords",content:n||"python, chart, graph, code, viz, dataviz"}),a.createElement("meta",{property:"og:site_name",content:"The Python Graph Gallery"}),a.createElement("meta",{property:"og:title",content:t+" | The Python Graph Gallery"}),a.createElement("meta",{property:"og:image",content:o||"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true"}),a.createElement("meta",{property:"og:description",content:l}),a.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),a.createElement("meta",{name:"twitter:site",content:"@R_Graph_Gallery"}))}},345:function(e,t,l){l.r(t),l.d(t,{Head:function(){return f},default:function(){return w}});var a=l(6540),n=l(7238),o=l(7906),r=l(3048),c=l(9441),i=l(4479),m=l(834),s=l(4794),p=l(5615),u=l(1105),h=l(9359),E=l(5216),d=l(3572),g=l(435),y=l.p+"static/pypalettes-30c04e6e9cc4378a11aa4ded22376216.gif";const b=a.createElement(a.Fragment,null,a.createElement("p",null,a.createElement("a",{href:"https://python-graph-gallery.com/matplotlib"},"Matplotlib")," ","offers extensive customization of plots, including a wide range of features for working with colors."),a.createElement("p",null,"Dealing with colors in Matplotlib can be challenging. This page is here to address all your needs. It begins with tips on how to apply a"," ",a.createElement("b",null,"single color")," to a chart, and then discusses accessing"," ",a.createElement("b",null,"color palettes")," for both continuous and categorical data."),a.createElement("p",null,"Finally, it introduces ",a.createElement("code",null,"pypalettes"),", a Python library that provides access to 2,500+ color palettes. It also includes a"," ",a.createElement("a",{href:"https://python-graph-gallery.com/color-palette-finder/"},"color palette finder")," ","tool that you are sure to love. üíú")),f=()=>a.createElement(g.k,{title:"Tips about colors with Python",seoDescription:"How to manage colors in python charts"});function w(){return a.createElement(o.A,{isTocEnabled:!0},a.createElement(n.A,{title:"Dealing with colors in matplotlib",description:b}),a.createElement(r.A,null,a.createElement("h2",{id:"Single color"},"1Ô∏è‚É£ Applying a single Color"),a.createElement("p",null,"That's the most simple use-case. You just made a chart that has an uniform default color and want to change it."),a.createElement("p",null,"All ",a.createElement("a",{href:"/matplotlib"},"Matplotlib")," plotting function have a"," ",a.createElement("b",null,"color")," argument allowing to control the color."),a.createElement("br",null),a.createElement("p",null,"The color can be provided in multiple ways:"),a.createElement("ul",null,a.createElement("li",null,a.createElement("b",null,"Named colors:")," Use the name of the color. For example,"," ",a.createElement("code",null,"red"),",",a.createElement("code",null,"blue"),", ",a.createElement("code",null,"green"),"."),a.createElement("li",null,a.createElement("b",null,"RGB colors:")," Use a tuple of 3 values between 0 and 1. For example, ",a.createElement("code",null,"(1, 0, 0)")," for red. Note that a 4th value can be provided for the opacity."),a.createElement("li",null,a.createElement("b",null,"Hexadecimal colors:")," Use the hexadecimal code. For example,"," ",a.createElement("code",null,"#FF0000")," for red.")),a.createElement("p",null,"Code would look like this:"),a.createElement(h.A,null,A),a.createElement("br",null),a.createElement("p",null,"We wrote a post that goes in-depth in this topic. It also lists all the premade-colors."),a.createElement(s.Link,{to:"/available-colors-in-matplotlib"},a.createElement(p.A,{size:"md"},"Learn more about single color"))),a.createElement(E.A,null),a.createElement(r.A,null,a.createElement("h2",{id:"Qualitative palette"},"2Ô∏è‚É£ Categorical / Qualitative color palettes"),a.createElement("p",null,"Qualitative color schemes represent categorical variables, where the possible values of the variable are ",a.createElement("b",null,"discrete")," and"," ",a.createElement("b",null,"unordered"),"."),a.createElement("p",null,a.createElement("u",null,"Example"),": you want to color ",a.createElement("code",null,"group A")," in blue,"," ",a.createElement("code",null,"group B")," in red and so on. This applies for"," ",a.createElement(s.Link,{href:"/barplot"},"barplots"),","," ",a.createElement(s.Link,{href:"/pie-plot"},"pie")," charts,"," ",a.createElement(s.Link,{href:"/scatter-plot"},"scatterplot")," or any other chart that can be split by ",a.createElement("b",null,"group"),"."),a.createElement("h3",null,"Method 1: use a matplotlib pre-made palette"),a.createElement("p",null,"Matplotlib provides a set of"," ",a.createElement(s.Link,{to:"/categorical-color-palette"},"pre-made categorical palettes")," ","that are ready to be used."),a.createElement("br",null),a.createElement(i.A,null,a.createElement(u.A,{md:6},a.createElement("p",null,"Read ",a.createElement(s.Link,{to:"/categorical-color-palette"},"this post")," to find the entire list and to understand how to use those palettes."),a.createElement("p",null,"Basically, you will have to create a color map using the"," ",a.createElement("code",null,"get_cmap()")," function and pass this color map to the"," ",a.createElement("code",null,"color")," argument of the function you're using."),a.createElement(s.Link,{to:"/categorical-color-palette"},a.createElement(p.A,{size:"md"},"Read now"))),a.createElement(u.A,{md:6},a.createElement(s.Link,{to:"/categorical-color-palette"},a.createElement(d.A,{imgName:"categorical_palettes",caption:"Available categorical color palettes in Matplotlib"})))),a.createElement("h3",null,"Method 2: more palette with ",a.createElement("code",null,"pypalettes")),a.createElement("p",null,"Matplotlib only offers about a dozen"," ",a.createElement(s.Link,{to:"/categorical-color-palette"},"qualitative palettes"),". So we've just created ",a.createElement("code",null,"pypalettes"),", a python library that offers 2500+ color palettes. The library is described in depth below."),a.createElement(s.Link,{to:"#pypalettes"},a.createElement(p.A,{size:"md"},"More about pypalettes")),a.createElement("h3",null,"Method 3: provide an array of colors"),a.createElement("p",null,"You can pick some colors manually, and provide them as an array to the"," ",a.createElement("code",null,"color")," argument of the matplotlib function you're using."),a.createElement("p",null,"I strongly advise ",a.createElement("b",null,"not")," doing this though. It's time consuming and finding colors that go well together is a struggle."," "),a.createElement(s.Link,{to:"#own_colors"},a.createElement(p.A,{size:"md"},"Create my own palette"))),a.createElement(E.A,null),a.createElement(r.A,null,a.createElement("h2",{id:"Continuous palette"},"3Ô∏è‚É£ Continuous color palettes"),a.createElement("p",null,"A continuous color palette is a ",a.createElement("b",null,"smooth gradient")," of colors that transitions seamlessly from one hue to another."),a.createElement("p",null,a.createElement("u",null,"Example"),": you want to encode a value with a color. For instance,"," ",a.createElement("code",null,"0")," will be in light blue, and ",a.createElement("code",null,"100")," will be in dark blue. This applies for ",a.createElement(s.Link,{href:"/heatmap"},"heatmap"),","," ",a.createElement(s.Link,{href:"/choropleth-map"},"choropleth")," maps for example."),a.createElement("h3",null,"Method 1: use a matplotlib pre-made palette"),a.createElement("p",null,a.createElement("a",{href:"/matplotlib"},"Matplotlib")," provides a set of pre-made continuous palettes that are split into 2 main categories:"),a.createElement("ul",null,a.createElement("li",null,a.createElement("b",null,"Sequential:")," for representing data that ranges from low to high values."),a.createElement("li",null,a.createElement("b",null,"Diverging:")," for representing data that ranges from negative to positive values.")),a.createElement("br",null),a.createElement(i.A,null,a.createElement(u.A,{md:6},a.createElement(s.Link,{to:"/continuous-color-palette"},a.createElement(d.A,{imgName:"sequential_palettes",caption:"Available sequential color palettes in Matplotlib"}))),a.createElement(u.A,{md:6},a.createElement(s.Link,{to:"/continuous-color-palette"},a.createElement(d.A,{imgName:"diverging_palettes",caption:"Available diverging color palettes in Matplotlib"})))),a.createElement("br",null),a.createElement("p",null,"We've written ",a.createElement(s.Link,{to:"/continuous-color-palette"},"a post")," that will guide you through their usage, and provides an exhaustive list of all the available continuous palettes."),a.createElement(s.Link,{to:"/continuous-color-palette"},a.createElement(p.A,{size:"md"},"Continuous palettes in Matplotlib")),a.createElement("h3",null,"Method 2: more palette with ",a.createElement("code",null,"pypalettes")),a.createElement("p",null,a.createElement("code",null,"pypalettes")," is a python library that offers 2500+ color palettes. The library is described in depth below and will be useful if you're not satisfied with matplotlib built-in options."),a.createElement(s.Link,{to:"#pypalettes"},a.createElement(p.A,{size:"md"},"More about pypalettes")),a.createElement("h3",null,"Method 3: create your own"),a.createElement("p",null,"Strongly discouraged: you will struggle to build something great."),a.createElement("p",null,"But definitely doable. See the last section of this page!"),a.createElement(s.Link,{to:"#own_colors"},a.createElement(p.A,{size:"md"},"Create my own palette"))),a.createElement(E.A,null),a.createElement(r.A,null,a.createElement("h2",{id:"pypalettes"},"4Ô∏è‚É£ Need more palette options? Check ",a.createElement("code",null,"pypalettes"),"."),a.createElement("p",null,a.createElement("a",{href:"/introduction-to-pypalettes"},"PyPalettes")," is a Python library that gives access to 2500+ palettes."),a.createElement("p",null,"It's hosted on"," ",a.createElement("a",{href:"https://github.com/JosephBARBIERDARNAL/pypalettes"},"github"),", you can install it with ",a.createElement("code",null,"PyPI"),", and it's super easy to use."),a.createElement("h3",null,"User-friendly API"),a.createElement("p",null,a.createElement("code",null,"pypalettes")," is pretty straightfoward to use. For instance, this is how to use a palette called ",a.createElement("code",null,"Acadia")," once the library is installed:"),a.createElement(h.A,null,v),a.createElement("p",null,"The pypalettes API is super intuitive, and we've written a"," ",a.createElement("a",{href:"/introduction-to-pypalettes"},"digestible post")," to explain how it works."),a.createElement(s.Link,{to:"/introduction-to-pypalettes"},a.createElement(p.A,{size:"sm"},"Access 2500+ colors with pypalettes")),a.createElement("br",null),a.createElement("h3",null,"Color palette finder"),a.createElement("p",null,"Last but not least, we've also built a"," ",a.createElement("a",{href:"https://python-graph-gallery.com/color-palette-finder/"},"color palette finder"),"."),a.createElement("p",null,"It allows to quickly explore all the options, see them"," ",a.createElement("b",null,"in action")," on 7 different charts, export their code, simulate"," ",a.createElement("b",null,"color blindness"),", and so much more."),a.createElement("p",null,a.createElement("br",null)),a.createElement("a",{href:"https://python-graph-gallery.com/color-palette-finder/"},a.createElement("img",{src:y,alt:"Color palette finder demo",style:{maxWidth:"900px",width:"100%"}})),a.createElement("p",null,a.createElement("br",null)),a.createElement("a",{href:"https://python-graph-gallery.com/color-palette-finder/"},a.createElement(p.A,{size:"sm"},"Browse the palettes"))),a.createElement(E.A,null),a.createElement(r.A,null,a.createElement("h2",{id:"customization"},"5Ô∏è‚É£ How to work with color maps"),a.createElement(i.A,{className:"align-items-center"},a.createElement(u.A,{md:4},a.createElement("p",null,a.createElement("a",{href:"/matplotlib"},"Matplotlib")," provides a wide range of colormaps but also a specific way of working with them. This post will show you how to use colormaps in"," ",a.createElement("a",{href:"/matplotlib"},"Matplotlib")," to enhance the readability of your plots."),a.createElement(s.Link,{to:"/587-how-to-use-colormap"},a.createElement(p.A,{size:"sm"},"Learn more"))),a.createElement(u.A,{md:8},a.createElement(s.Link,{to:"/587-how-to-use-colormap"},a.createElement(d.A,{imgName:"587-how-to-use-colormap",caption:"Available colors in Matplotlib"}))))),a.createElement(E.A,null),a.createElement(r.A,null,a.createElement("h2",{id:"own_colors"},"6Ô∏è‚É£ Creating your own palette"),a.createElement("p",null,"If you're not satisfied with the ",a.createElement("b",null,"2500+ options")," offered in the previous sections, you can still create your own palette from scratch."),a.createElement("p",null,"We've built a full post on the topic, but here is a summary: "),a.createElement("p",null,a.createElement("a",{href:"/matplotlib"},"Matplotlib")," provides a few tools that, based on a ",a.createElement("b",null,"list of colors")," create a colormap with it. You can create",a.createElement("b",null,"both")," categorical and continuous palettes."),a.createElement("a",{href:"/create-your-own-color-maps"},a.createElement(p.A,{size:"sm"},"Create my own palette"))),a.createElement(E.A,null),a.createElement("div",{className:"greySection",id:"related"},a.createElement(r.A,null,a.createElement(m.A,{chartFamily:"general"}))),a.createElement(E.A,null),a.createElement(r.A,null,a.createElement(c.A,null)),a.createElement(E.A,null))}const A='# Hexadecimal color code\ncolor = "#FF5733"\n\n# Pre-defined color names\ncolor = "skyblue"\n\n# RGB tuple\ncolor = (0.1, 0.2, 0.5)\n\n# RGBA tuple\ncolor = (0.1, 0.2, 0.5, 0.4)\n\n# Use in a barplot\nfig, ax = plt.subplots()\nax.bar(x, y, color=color)\n',v='# Import pypalettes\nfrom pypalettes import load_cmap\n\n# Load the palette called Acadia\ncmap = load_cmap("Acadia")\n\n# Use the color map anywhere!\n'}}]);
//# sourceMappingURL=component---src-pages-python-colors-js-b78586eda3b696acbb3a.js.map