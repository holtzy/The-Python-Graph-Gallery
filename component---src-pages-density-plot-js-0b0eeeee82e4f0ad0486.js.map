{"version":3,"file":"component---src-pages-density-plot-js-0b0eeeee82e4f0ad0486.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/FunctionExploration.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/functions/kdeplot.js","webpack://the-python-graph-gallery/./src/pages/density-plot.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport ChartImage from './ChartImage';\n\nimport './functionExploration.css';\nimport CodeChunk from './CodeChunk';\n\nconst capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport default function FunctionExploration({ funDetails }) {\n  const [selectedParameter, setSelectedParameter] = useState(0);\n  const [selectedOpt, setSelectedOpt] = useState(0);\n\n  if (!funDetails) {\n    return null;\n  }\n\n  const selectedParameterInfo = funDetails.parameters[selectedParameter];\n\n  const argumentButtons = (\n    <div>\n      {funDetails.parameters.map((item, i) => (\n        <Button\n          key={i}\n          value={item.name}\n          size=\"sm\"\n          onClick={() => setSelectedParameter(i)}\n          className={selectedParameter === i ? 'isButtonSelected' : ''}\n        >\n          {item.name}\n        </Button>\n      ))}\n    </div>\n  );\n\n  return (\n    <div style={{ marginBottom: 70 }}>\n      <h2 id={capitalize(funDetails.name + '()' + ' details')}>\n        &#128270; <code>{funDetails.name}</code> function parameters\n        <a\n          style={{ marginLeft: '15px', fontSize: '14px' }}\n          href={funDetails.docUrl}\n        >\n          &rarr; see full doc\n        </a>\n      </h2>\n\n      <h3>&rarr; Description</h3>\n      <p>{funDetails.description}</p>\n\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'start',\n          alignItems: 'baseline',\n          gap: 14,\n        }}\n      >\n        <h3 style={{ width: 'auto' }}>&rarr; Arguments</h3>\n        {argumentButtons}\n      </div>\n\n      <Row>\n        <Col md={8}>\n          <div style={{ fontSize: 16 }}>\n            <p className=\"argumentSectionTitle\">Description</p>\n            <p className=\"little-text\">{selectedParameterInfo.description}</p>\n\n            <p className=\"argumentSectionTitle\">\n              Possible values &rarr; {'  '}\n              <span className=\"parameterTypePill\">\n                {selectedParameterInfo.type}\n              </span>\n            </p>\n            <p className=\"little-text\">{selectedParameterInfo.howToUse}</p>\n            {selectedParameterInfo.options && (\n              <>\n                <div\n                  style={{ display: 'flex', gap: 2, alignItems: 'baseline' }}\n                >\n                  {selectedParameterInfo.options.map((opt, i) => {\n                    return (\n                      <Button\n                        size=\"sm\"\n                        className={i === selectedOpt ? 'isButtonSelected' : ''}\n                        onClick={() => setSelectedOpt(i)}\n                      >\n                        {opt.name}\n                      </Button>\n                    );\n                  })}\n                </div>\n                <p>{selectedParameterInfo.options[selectedOpt].explanation}</p>\n              </>\n            )}\n\n            <p className=\"argumentSectionTitle\">Code Example</p>\n            <div style={{ backgroundColor: 'white' }}>\n              <CodeChunk hasWhiteBackground>\n                {selectedParameterInfo.options\n                  ? selectedParameterInfo.basicUsage.replace(\n                      'paramgoeshere',\n                      selectedParameterInfo.options[selectedOpt].name\n                    )\n                  : selectedParameterInfo.basicUsage}\n              </CodeChunk>\n            </div>\n          </div>\n        </Col>\n\n        <Col md={4}>\n          <br />\n          <Link to={'/' + selectedParameterInfo.post}>\n            <ChartImage\n              imgName={selectedParameterInfo.img}\n              caption={'More about the ' + funDetails.name + ' function.'}\n            />\n          </Link>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport CodeChunk from '../components/CodeChunk';\n\nconst name = 'kdeplot';\nconst description = (\n  <>\n    <p>\n      The <code>kdeplot()</code> function of{' '}\n      <a href=\"https://python-graph-gallery.com/seaborn/\">seaborn</a> generates\n      Kernel Density Estimates to depict the probability density function of a\n      continuous variable. It outputs a smoothed curve representing the\n      distribution of the data.\n    </p>\n  </>\n);\n\nconst docUrl = 'https://seaborn.pydata.org/generated/seaborn.kdeplot.html';\n\n//\n//\n//\n//\n//\nconst param1 = {\n  name: 'color',\n  description: (\n    <p>\n      Adjusts the shape's color, affecting both its outline and the area beneath\n      it. See <code>fill</code> to draw the area or not.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.kdeplot(data=df, x='sepal_width', color=\"purple\")\n`.trim(),\n  type: 'string',\n  howToUse: (\n    <p>\n      Can be a color name, a Hex code, or an RGB value. Read{' '}\n      <a href=\"https://python-graph-gallery.com/python-colors/\">this post</a> to\n      learn more.\n    </p>\n  ),\n  img: '71_Shaded_density_plot_Seaborn',\n  post: '71-density-plot-with-shade-seaborn',\n};\n\n//\n//\n//\n//\n//\nconst param2 = {\n  name: 'fill',\n  description: (\n    <p>\n      Control wether or not the area under the curve is filled with color. See\n      the <code>color</code> argument to control its color.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.kdeplot(data=df, x='sepal_width', color=\"purple\")\n`.trim(),\n  type: 'boolean',\n  howToUse: (\n    <p>\n      Use <code>true</code> to fill the area, <code>false</code> to use a line\n      only.\n    </p>\n  ),\n  img: '71_Shaded_density_plot_Seaborn',\n  post: '71-density-plot-with-shade-seaborn',\n};\n\n//\n//\n//\n//\n//\nconst param3 = {\n  name: 'bw_adjust',\n  description: (\n    <p>\n      Determines the smoothness of the graph. It basically tweaks the kernel\n      density estimation model.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.kdeplot(data=df, x='sepal_width', color=\"purple\")\n`.trim(),\n  type: 'number',\n  howToUse: (\n    <p>\n      A value close to <code>0</code> produces a very smooth graph, while a\n      value close to <code>1</code>\n      reveals more detailed variable density.\n    </p>\n  ),\n  img: '73_Control_bandwidth_densityplot_Seaborn2',\n  post: '73-control-bandwidth-of-seaborn-density-plot',\n};\n\n//\n//\n//\n//\n//\n// JOSEPH TODO\nconst param4 = {\n  name: 'cumulative',\n  description: (\n    <p>\n      <code>cumulative</code> determines whether a cumulative distribution\n      function should be estimated.\n    </p>\n  ),\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.kdeplot(data=df, x='sepal_width', color=\"purple\")\n`.trim(),\n  type: <p>bool</p>,\n  img: '70-basic-density-plot-with-seaborn-2',\n  post: '70-basic-density-plot-with-seaborn',\n};\n\n//\n//\n//\n//\n//\n// JODEPH TODO\nconst param5 = {\n  name: 'hue',\n  description: (\n    <p>\n      <code>hue</code> is the name of the variable used to split the estimate\n      into its categories.\n    </p>\n  ),\n  basicUsage: `\nsns.kdeplot(data=df, x='sepal_width', hue='species')\n`.trim(),\n  type: <p>string</p>,\n  img: '74_density_plot_multi_variables',\n  post: '70-basic-density-plot-with-seaborn',\n};\n\n//\n//\n//\n//\n//\nconst param6 = {\n  name: 'multiple',\n  description: <p>Determines how to display multiple groups on the chart.</p>,\n  basicUsage: `\n# Library & Dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot\nsns.kdeplot(data=df, x='sepal_width', multiple=\"paramgoeshere\")\n`.trim(),\n  type: 'string',\n  options: [\n    {\n      name: 'layer',\n      explanation: <p>Groups are overlapping each other</p>,\n      isDefault: true,\n      img: 'density-chart-multiple-groups-seaborn4',\n    },\n    {\n      name: 'stack',\n      explanation: <p>Groups are stacked on top of each other</p>,\n      isDefault: true,\n      img: 'density-chart-multiple-groups-seaborn4',\n    },\n    {\n      name: 'fill',\n      explanation: (\n        <p>entire graph will be filled in to show the breakdown by category.</p>\n      ),\n      isDefault: true,\n      img: 'density-chart-multiple-groups-seaborn4',\n    },\n  ],\n  img: 'density-chart-multiple-groups-seaborn4',\n  post: 'density-chart-multiple-groups-seaborn',\n};\n\nexport const kdeplot = {\n  name,\n  description,\n  docUrl,\n  parameters: [param1, param2, param3, param4, param5, param6],\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Seaborn } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport FunctionExploration from '../components/FunctionExploration';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\nimport { kdeplot } from '../functions/kdeplot';\n\nconst chartDescription =\n  \"<p>Density plots allow you to visualize the <b>distribution of a numeric variable</b> for one or several groups. They are very well adapted for large datasets, as stated in <a href='https://data-to-viz.com'>data-to-viz.com</a>.<br><br>Note that <b>2 approaches</b> exist to build them in python: the first one consists of <i>computing a kernel density estimate</i>, and the second one involves building a <i>high resolution histogram</i>.</p>\";\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Make default density plot\nsns.kdeplot(df['sepal_width'])\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Python Density Chart Gallery | Dozens of examples with code\"\n    seoDescription=\"A collection of density plot examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function DensityPlot() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Density chart\"\n        description={chartDescription}\n        chartType=\"density\"\n      />\n\n      <Container>\n        <h2 id=\"Quick start\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              If you are in a rush, the most straightforward way to build a\n              density chart is to use <code>Seaborn</code> and its{' '}\n              <code>kdeplot()</code> function. You just need to provide it with\n              a numeric variable from your dataset. 🔥\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/70-basic-density-plot-with-seaborn'}>\n              <ChartImage\n                imgName=\"70_Basic_density_plot_Seaborn\"\n                caption=\"The most basic density plot one can make with python and seaborn\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Density charts with <code>Seaborn</code>\n        </h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. It is well adapted to build density charts thanks to\n          its <code>kdeplot</code> function.\n        </p>\n        <p>\n          The following charts will guide you through its usage, going from a\n          very <Link to=\"\">basic density plot</Link> to something much more{' '}\n          <Link to=\"\">customized</Link>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"70_Basic_density_plot_Seaborn\"\n            caption=\"The most basic density plot one can make with python and seaborn\"\n            linkTo=\"/70-basic-density-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"70-basic-density-plot-with-seaborn-2\"\n            caption=\"Cumulative version of the most basic density plot\"\n            linkTo=\"/70-basic-density-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"71_Shaded_density_plot_Seaborn\"\n            caption=\"seaborn densty chart with filled area\"\n            linkTo=\"/71-density-plot-with-shade-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"72_Horizontal_density_plot_Seaborn\"\n            caption=\"vertical seaborn density chart\"\n            linkTo=\"/72-horizontal-density-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"73_Control_bandwidth_densityplot_Seaborn1\"\n            caption=\"control density chart color\"\n            linkTo=\"/73-control-bandwidth-of-seaborn-density-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"73_Control_bandwidth_densityplot_Seaborn2\"\n            caption=\"Changed the bandwidth used to compute the density\"\n            linkTo=\"/73-control-bandwidth-of-seaborn-density-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"74_density_plot_multi_variables\"\n            caption=\"Density chart with several displayed groups\"\n            linkTo=\"/74-density-plot-of-several-variables\"\n          />\n          <ChartImageContainer\n            imgName=\"density-mirror\"\n            caption=\"Mirror density chart to compare the distribution of 2 variables\"\n            linkTo=\"/density-mirror\"\n          />\n          <ChartImageContainer\n            imgName=\"575-distribution-plot-with-quantiles-2\"\n            caption=\"Density chart with quantiles displayed\"\n            linkTo=\"/575-distribution-plot-with-quantiles\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Multiple groups\">\n          <Seaborn />\n          Density charts, <code>Seaborn</code> and multiple groups\n        </h2>\n        <p>\n          It is a common use case to compare the density of several groups in a\n          dataset. Several options exist to do so.\n        </p>\n        <p>\n          You can plot all items on the same chart, using <b>transparency</b>{' '}\n          and annotation to make the comparison possible.\n        </p>\n        <p>\n          Or you can use a technique called <b>small multiples</b> where the\n          graph window is split in individual charts, avoiding group overlaps\n          that are sometimes hard to read.\n        </p>\n        <br />\n        <Row>\n          <ChartImageContainer\n            imgName=\"density-chart-multiple-groups-seaborn1\"\n            caption=\"Density chart with multiple groups overlapped\"\n            linkTo=\"/density-chart-multiple-groups-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"density-chart-multiple-groups-seaborn3\"\n            caption=\"Density chart with multiple groups overlapped\"\n            linkTo=\"/density-chart-multiple-groups-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"density-chart-multiple-groups-seaborn4\"\n            caption=\"Density chart with multiple groups overlapped\"\n            linkTo=\"/density-chart-multiple-groups-seaborn\"\n          />\n        </Row>\n        <div style={{ margin: '0 auto', padding: 0 }}>\n          <Link to=\"/density-chart-multiple-groups-seaborn\">\n            <ChartImage\n              imgName=\"density-chart-multiple-groups-seaborn5\"\n              caption={\n                'A density chart with multiple groups displayed, transparency and clean annotation.'\n              }\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <FunctionExploration funDetails={kdeplot} />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib /> Density charts with <code>Matplotlib</code>\n        </h2>\n        <p>\n          It is possible to build a density chart with <code>matplotlib</code>,\n          but it is truely a struggle compared to making it with{' '}\n          <code>seaborn</code> as shown above.\n        </p>\n        <p>\n          Here is an example to prove it is doable, but I strongly advise to go\n          for <code>seaborn</code>.\n        </p>\n        <br />\n        <Row>\n          <ChartImageContainer\n            imgName=\"density-chart-matplotlib-vector\"\n            caption=\"Basic density chart with python and matplotlib from a vector of data\"\n            linkTo=\"/density-chart-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"density-chart-matplotlib-csv\"\n            caption=\"Read a csv file and plot the density of a column\"\n            linkTo=\"/density-chart-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"raincloud-plot-with-matplotlib-and-ptitprince\"\n            caption=\"Combining density and boxplot\"\n            linkTo=\"/raincloud-plot-with-matplotlib-and-ptitprince\"\n          />\n          <ChartImageContainer\n            imgName=\"575-distribution-plot-with-quantiles-2\"\n            caption=\"Density chart with quantiles displayed\"\n            linkTo=\"/575-distribution-plot-with-quantiles\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","capitalize","s","charAt","toUpperCase","slice","FunctionExploration","funDetails","selectedParameter","setSelectedParameter","useState","selectedOpt","setSelectedOpt","selectedParameterInfo","parameters","argumentButtons","map","item","i","Button","key","value","size","onClick","style","marginBottom","id","marginLeft","fontSize","href","docUrl","description","display","flexDirection","justifyContent","alignItems","gap","width","Row","type","howToUse","options","opt","explanation","backgroundColor","CodeChunk","hasWhiteBackground","basicUsage","replace","post","img","SEO","title","seoDescription","keywords","lang","content","property","kdeplot","trim","isDefault","chartDescription","quickCode","Head","DensityPlot","Layout","isTocEnabled","TitleAndDescription","chartType","Container","Spacing","Seaborn","margin","padding","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}