{"version":3,"file":"component---src-pages-heatmap-js-efe474c091ebec6780fd.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/heatmap.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Seaborn } from '../components/MiscellaneousLogos';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p>A <a href='https://www.data-to-viz.com/graph/heatmap.html'>heatmap</a> is a graphical representation of data where each value of a matrix is represented as a color. This page explains how to build a heatmap with <code>Python</code>, with an emphasis on the <code>Seaborn</code> library.</p>\";\n\nconst quickCode = `# library\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\n\n# Create a dataset\ndf = pd.DataFrame(np.random.random((5,5)), columns=[\"a\",\"b\",\"c\",\"d\",\"e\"])\n\n# Default heatmap\np1 = sns.heatmap(df)\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Heatmap | Python Graph Gallery\"\n    seoDescription=\"A collection of heatmap examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Heatmap() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription title=\"Heatmap\" description={chartDescription} />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              If you're in a rush and want to make a heatmap with{' '}\n              <code>Python</code> as quick as possible, have a look to this code\n              snippet that uses the <code>heatmap()</code> function of{' '}\n              <code>Seaborn</code>.🔥\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/90-heatmaps-with-various-input-format'}>\n              <ChartImage\n                imgName=\"90_Input_format_for_heatmap1\"\n                caption=\"Basic heatmap with Python and Seaborn from various data input formats.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Heatmap with <code>Seaborn</code>\n        </h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily thanks to its <code>heatmap()</code> function. This\n          section starts with a post describing the basic usage of the function\n          based on any kind of data input. Next it will guide you through the\n          different ways to customize the chart, like{' '}\n          <Link to=\"\">controling color</Link> and{' '}\n          <Link to=\"\">data normalization</Link>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"90_Input_format_for_heatmap1\"\n            caption=\"The heatmap() function and how to apply it to any kind of data input\"\n            linkTo=\"/90-heatmaps-with-various-input-format\"\n          />\n          <ChartImageContainer\n            imgName=\"90_Input_format_for_heatmap2bis\"\n            caption=\"Plotting only one half of the heatmap\"\n            linkTo=\"/90-heatmaps-with-various-input-format\"\n          />\n          <ChartImageContainer\n            imgName=\"91_Custom_heat_control_lines\"\n            caption=\"Seaborn heatmap customization: grid\"\n            linkTo=\"/91-customize-seaborn-heatmap\"\n          />\n          <ChartImageContainer\n            imgName=\"91_Custom_heat_annotate_cells\"\n            caption=\"Seaborn heatmap customization: show numbers in cell\"\n            linkTo=\"/91-customize-seaborn-heatmap\"\n          />\n          <ChartImageContainer\n            imgName=\"91_Custom_heat_hide_colorbar\"\n            caption=\"Seaborn heatmap customization: hide the color bar\"\n            linkTo=\"/91-customize-seaborn-heatmap\"\n          />\n          <ChartImageContainer\n            imgName=\"92_Control_color_heatmap1\"\n            caption=\"Color customization: how to select other color palettes and more\"\n            linkTo=\"/92-control-color-in-seaborn-heatmaps\"\n          />\n          <ChartImageContainer\n            imgName=\"92-control-color-in-seaborn-heatmaps-square\"\n            caption=\"Customize colormaps\"\n            linkTo=\"/92-control-color-in-seaborn-heatmaps\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Warning\">&#9888;&#65039; Python heatmap and normalization</h2>\n          <p>\n            Consider the left heatmap below. The second column from the left (\n            <code>variable 1</code>) has very high values compared to others. As\n            a result, the variation existing in other variables is hidden.\n          </p>\n          <p>\n            Highlighting the <code>variable 1</code> can be the main message of\n            your chart. But if you're interested in other variable variations as\n            well, you probably want to apply some normalization as shown on the\n            right heatmap.\n          </p>\n          <p>\n            If you want to know more about normalization, check{' '}\n            <a href=\"https://www.data-to-viz.com/graph/heatmap.html\">\n              data-to-viz.com\n            </a>\n            . If you want some python code to do it,{' '}\n            <Link to=\"/94-use-normalization-on-seaborn-heatmap\">it's here</Link>\n            .\n          </p>\n          <Row>\n            <ChartImageContainer\n              imgName=\"94_Heatmap_Normalization_Seaborn1\"\n              caption=\"A heatmap that probably needs to be normalized.\"\n              linkTo=\"/94-use-normalization-on-seaborn-heatmap\"\n            />\n            <ChartImageContainer\n              imgName=\"94_Heatmap_Normalization_Seaborn2\"\n              caption=\"The exact same heatmap after normalization\"\n              linkTo=\"/94-use-normalization-on-seaborn-heatmap\"\n            />\n          </Row>\n          <Link to=\"/94-use-normalization-on-seaborn-heatmap\">\n            <Button size=\"sm\">Code and explanation</Button>\n          </Link>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Clustering\">&#10052; Python, Heatmap and Clustering</h2>\n        <p>\n          It is very common to apply some <code>clustering</code> techniques on\n          a heatmap. The idea is to group items that have the same kind of\n          pattern for their numeric variables. &#128161;\n        </p>\n        <p>\n          Usually, it is recommended to display a <code>dendrogram</code> on top\n          of the heatmap to explain how the clusterization has been performed.\n          Last but not least, it can be useful to compare the grouping we got\n          with an expected structure, shown as an additional color.\n        </p>\n        <Link to=\"/dendrogram\">\n          <Button size=\"sm\">Related: dendrogram section</Button>\n        </Link>\n        <Link to=\"/405-dendrogram-with-heatmap-and-coloured-leaves\">\n          <Button size=\"sm\">Code and explanation</Button>\n        </Link>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/405-dendrogram-with-heatmap-and-coloured-leaves\">\n            <ChartImage\n              imgName={'405_Dendro_and_heatmap_and_rowcolor'}\n              caption={\n                'A seaborn heatmap with clusterization and dendrogram applied'\n              }\n            />\n          </Link>\n        </div>\n        <Row>\n          <ChartImageContainer\n            imgName=\"404_Dendro_and_heatmap3\"\n            caption=\"Most basic heatmap with dendrogram with seaborn\"\n            linkTo=\"/404-dendrogram-with-heat-map\"\n          />\n          <ChartImageContainer\n            imgName=\"404_Dendro_and_heatmap9\"\n            caption=\"Change color palette\"\n            linkTo=\"/404-dendrogram-with-heat-map\"\n          />\n          <ChartImageContainer\n            imgName=\"404_Dendro_and_heatmap11\"\n            caption=\"Learn how to normalize data in the heatmap, avoiding that kind of result\"\n            linkTo=\"/404-dendrogram-with-heat-map\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Timeseries\">Heatmap for timeseries</h2>\n        <p>\n          A heatmap can be used to display some temporal data. Here is an\n          example using <Link to=\"/matplotlib\">matplotlib</Link> where the\n          evolution of a temperature is displayed over the hour of the day (Y\n          axis) and the day of the year (X axis) organized by month.\n        </p>\n        <div style={{ maxWidth: '800px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/heatmap-for-timeseries-matplotlib\">\n            <ChartImage\n              imgName={'heatmap-for-timeseries-matplotlib'}\n              caption={'A heatmap for temporal data with Python and Matplotlib'}\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Best\">\n          <Matplotlib />\n          Best python heatmap examples\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://python-graph-gallery.com\">Python graph gallery</a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works. If you want to display your work\n          here, please drop me a word or even better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Link to={'/web-heatmap-and-radial-barchart-plastics'}>\n              <ChartImage\n                imgName={'web-heatmap-and-radial-barchart-plastics'}\n                caption={\n                  'How to combine a heatmap with a radial barplot on the same figure with heaps of visual tweaks.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/web-heatmap-comparison'}>\n              <ChartImage\n                imgName={'web-heatmap-comparison-5'}\n                caption={\n                  'A comparison heatmap with a lot of customization options.'\n                }\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"correlation\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","quickCode","Head","Heatmap","Layout","isTocEnabled","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","Seaborn","href","Button","size","style","maxWidth","margin","padding","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}