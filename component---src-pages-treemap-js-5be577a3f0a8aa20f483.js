"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[6627],{7128:function(e,t,a){a.d(t,{Z:function(){return c}});var l=a(7294),n=a(1883),r=a(8032);const o=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function c(e){let{imgName:t,caption:a}=e;if(o.includes(t))return l.createElement("p",null,"TODO");const c=(0,n.useStaticQuery)("2757772085").allFile.edges.find((e=>e.node.name.includes(t)));return c?l.createElement(l.Fragment,null,l.createElement("div",{className:"chartImageContainer"},l.createElement(r.G,{image:c.node.childImageSharp.gatsbyImageData,alt:a,className:"chartImageImg"}),a&&l.createElement("div",{className:"chartImageOverlay"},l.createElement("div",{className:"chartImageOverlayText"},l.createElement("p",null,a))))):null}},4596:function(e,t,a){a.d(t,{Z:function(){return c}});var l=a(7294),n=a(7128),r=a(1555),o=a(1883);function c(e){let{imgName:t,caption:a,linkTo:c}=e;return l.createElement(r.Z,{xs:12,md:4},l.createElement(o.Link,{to:c},l.createElement(n.Z,{imgName:t,caption:a})))}},9389:function(e,t,a){a.d(t,{H:function(){return n}});var l=a(7294);const n=e=>{let{title:t,seoDescription:a,keywords:n}=e;return l.createElement(l.Fragment,null,l.createElement("title",null,t),l.createElement("html",{lang:"en"}),l.createElement("meta",{name:"description",content:a||"How to build a chart with Python"}),l.createElement("meta",{name:"author",content:"Yan Holtz"}),l.createElement("meta",{name:"keywords",content:n||"python, chart, graph, code, viz, dataviz"}),l.createElement("meta",{property:"og:site_name",content:"The Python Graph Gallery"}),l.createElement("meta",{property:"og:title",content:t+" | The Python Graph Gallery"}),l.createElement("meta",{property:"og:image",content:"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true"}),l.createElement("meta",{property:"og:description",content:a}),l.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),l.createElement("meta",{name:"twitter:site",content:"@R_Graph_Gallery"}))}},9042:function(e,t,a){a.r(t),a.d(t,{Head:function(){return v},default:function(){return Z}});var l=a(7294),n=a(429),r=a(8698),o=a(682),c=a(8728),i=a(4051),m=a(4596),p=a(8742),s=a(1883),u=a(944),h=a(7128),d=a(1555),E=a(5005),y=a(2737),f=a(3921),g=a(9389);const b="<p>A <a href='https://www.data-to-viz.com/graph/treemap.html'>treemap</a> displays hierarchical data as a set of nested rectangles. Each group is represented by a rectangle, which area is proportional to its value. In <code>Python</code>, the <code>squarify</code> library allows to compute the rectangle positions and plot it.</p>",w="# libraries\nimport matplotlib.pyplot as plt\nimport squarify    # pip install squarify (algorithm for treemap)\nimport pandas as pd\n\n# Create a data frame with fake data\ndf = pd.DataFrame({'nb_people':[8,3,4,2], 'group':[\"group A\", \"group B\", \"group C\", \"group D\"] })\n\n# plot it\nsquarify.plot(sizes=df['nb_people'], label=df['group'], alpha=.8 )\nplt.axis('off')\nplt.show()\n",v=()=>l.createElement(g.H,{title:"Treemap",seoDescription:"A collection of treemap examples made with Python, coming with explanation and reproducible code"});function Z(){return l.createElement(r.Z,{isTocEnabled:!0},l.createElement(n.Z,{title:"Treemap",description:b}),l.createElement(o.Z,null,l.createElement("h2",{id:"Quick"},"‚è± Quick start"),l.createElement(i.Z,{className:"align-items-center"},l.createElement(d.Z,{md:6},l.createElement("p",null,"A ",l.createElement("code",null,"treemap")," displays each element of a dataset as a rectangle. It allows to see what proportion each element has compared to the whole."),l.createElement("p",null," ","This is doable with ",l.createElement("code",null,"python")," and"," ",l.createElement("code",null,"Matplotlib")," thanks to the ",l.createElement("code",null,"squarify")," ","library that can be used as follow:üî•")),l.createElement(d.Z,{md:6},l.createElement(s.Link,{to:"/200-basic-treemap-with-python"},l.createElement(h.Z,{imgName:"200_Basic_Treemap_with_squarify",caption:"Most basic Treemap with Python, Matplotlib and Squarify"})))),l.createElement(y.Z,null,w)),l.createElement(f.Z,null),l.createElement("div",{className:"greySection",id:"related"},l.createElement(o.Z,null,l.createElement("h2",{id:"Squarify"},"‚Ñπ Ô∏è A note on the ",l.createElement("code",null,"Squarify")," package"),l.createElement("p",null,"The squarify library is a pure Python implementation of the squarify treemap layout algorithm. It is a project developped by"," ",l.createElement("a",{href:"https://github.com/laserson"},"Uri Laserson")," that has its documentation on"," ",l.createElement("a",{href:"https://github.com/laserson/squarify"},"github"),"."),l.createElement("a",{href:"https://github.com/laserson/squarify"},l.createElement(E.Z,{size:"sm"},"Squarify documentation")))),l.createElement(f.Z,null),l.createElement(o.Z,null,l.createElement("h2",{id:"Matplotlib"},l.createElement(u.rS,null),"Treemap with ",l.createElement("code",null,"Matplotlib")," and ",l.createElement("code",null,"Squarify")),l.createElement("p",null,l.createElement("code",null,"Matplotlib")," is probably the most famous and flexible python library for data visualization. It is appropriate to build any kind of chart, including the lollipop plot thanks to its"," ",l.createElement("code",null,"stem()")," function."),l.createElement(i.Z,null,l.createElement(m.Z,{imgName:"201_Custom_Treemap1",caption:"How to control the color of your treemap",linkTo:"/201-control-the-color-of-treemap"}),l.createElement(m.Z,{imgName:"202_Treemap_map_color_to_size",caption:"How to make the rectangle colors relative to their values.",linkTo:"/202-treemap-with-colors-mapped-on-values"}))),l.createElement(f.Z,null),l.createElement(o.Z,null,l.createElement("h2",{id:"Plotly"},l.createElement(u.Ne,null),"Treemap with ",l.createElement("code",null,"Plotly")),l.createElement("p",null,l.createElement("code",null,"Plotly")," is a very powerful library to create interactive graphics. It is known for its great interactivity and its ability to handle large datasets."),l.createElement("p",null,"It comes with ",l.createElement("b",null,"multiple functions")," to create treemaps, for both of its API: ",l.createElement("code",null,"plotly.graph_objects")," and"," ",l.createElement("code",null,"plotly.express"),". Try to ",l.createElement("b",null,"hover and click")," on the following treemap to see how it reacts:"),l.createElement("iframe",{src:"../../interactiveCharts/580-simple-interactive-treemap-plotly-2.html",width:"800",height:"600",title:"most simple treemap"}),l.createElement("a",{className:"btn btn-secondary btn-md text-uppercase",href:"/580-simple-interactive-treemap-plotly"},"See code")),l.createElement(f.Z,null),l.createElement("div",{className:"greySection",id:"related"},l.createElement(o.Z,null,l.createElement(p.Z,{chartFamily:"partOfAWhole"}))),l.createElement(f.Z,null),l.createElement(o.Z,null,l.createElement(c.Z,null)),l.createElement(f.Z,null))}}}]);
//# sourceMappingURL=component---src-pages-treemap-js-5be577a3f0a8aa20f483.js.map