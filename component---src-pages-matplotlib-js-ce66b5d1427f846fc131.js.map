{"version":3,"file":"component---src-pages-matplotlib-js-ce66b5d1427f846fc131.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/ToggleButton.js","webpack://the-python-graph-gallery/./src/pages/matplotlib.js","webpack://the-python-graph-gallery/./static/asset/pypalettes.gif"],"sourcesContent":["import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Button from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst noop = () => undefined;\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  name,\n  className,\n  checked,\n  type,\n  onChange,\n  value,\n  disabled,\n  id,\n  inputRef,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: bsPrefix,\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange || noop,\n      id: id\n    }), /*#__PURE__*/_jsx(Button, {\n      ...props,\n      ref: ref,\n      className: classNames(className, disabled && 'disabled'),\n      type: undefined,\n      role: undefined,\n      as: \"label\",\n      htmlFor: id\n    })]\n  });\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport FunctionExploration from '../components/FunctionExploration';\nimport { fig_arrow } from '../functions/drawarrow';\nimport pypalettesGIF from '../../static/asset/pypalettes.gif';\nimport {\n  Matplotlib,\n  DrawArrow,\n  PyFonts,\n} from '../components/MiscellaneousLogos';\nimport { Col, ToggleButton } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { Button } from 'react-bootstrap';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p><code>Matplotlib</code> is the most famous library for data visualization with <code>python</code>. It allows to create literally every type of chart with a great level of customization. This page provides some general tips that can be applied on any kind of chart made with <code>matplotlib</code> like customizing titles or colors. If you're looking at creating a specific chart type, visit <a href='https://python-graph-gallery.com'>the gallery</a> instead.</p>\";\n\nconst quickCode = `# Library\nimport matplotlib.pyplot as plt\n\n# Create data\nx = [1, 2, 3, 4, 5]\ny = [1, 4, 6, 8, 4]\n\n# Area plot\nplt.fill_between(x, y)\nplt.show()\n`;\n\nconst pyplotAPI = `# import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Create a data frame\ndf = pd.DataFrame ({'Group':  ['A', 'B', 'C', 'D', 'E'], 'Value': [1,5,4,3,9]})\n\n# Create horizontal bars\nplt.barh(y=df.Group, width=df.Value);\n\n# Add title\nplt.title('A simple barplot');\n`;\n\nconst objOrientedAPI = `# import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Create a data frame\ndf = pd.DataFrame ({'Group':  ['A', 'B', 'C', 'D', 'E'], 'Value': [1,5,4,3,9]})\n\n# Initialize a Figure and an Axes\nfig, ax = plt.subplots()\n\n# Fig size\nfig.set_size_inches(9,9)\n\n# Create horizontal bars\nax.barh(y=df.Group, width=df.Value);\n\n# Add title\nax.set_title('A simple barplot');\n`;\n\nconst allStyle = [\n  'seaborn-darkgrid',\n  'seaborn-notebook',\n  'classic',\n  'seaborn-ticks',\n  'grayscale',\n  'bmh',\n  'seaborn-talk',\n  'dark_background',\n  'ggplot',\n  'fivethirtyeight',\n  '_classic_test',\n  'seaborn-colorblind',\n  'seaborn-deep',\n  'seaborn-whitegrid',\n  'seaborn-bright',\n  'seaborn-poster',\n  'seaborn-muted',\n  'seaborn-paper',\n  'seaborn-white',\n  'seaborn-pastel',\n  'seaborn-dark',\n  'seaborn',\n  'seaborn-dark-palette',\n];\n\nexport const Head = () => (\n  <SEO\n    title=\"Matplotlib\"\n    seoDescription=\"A collection of charts, tips and tricks on the Matplotlib Python library.\"\n  />\n);\n\nexport default function Matplotlibs() {\n  const [selectedParameter, setSelectedParameter] = React.useState(allStyle[0]);\n\n  const allStyleButtons = allStyle.map((item, i) => (\n    <ToggleButton\n      type=\"radio\"\n      active={true}\n      key={i}\n      className={'functionButton'}\n      variant=\"secondary\"\n      size=\"sm\"\n      value={item}\n      checked={selectedParameter === item}\n      onChange={(e) => setSelectedParameter(e.currentTarget.value)}\n    >\n      {item}\n    </ToggleButton>\n  ));\n\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Matplotlib\"\n        description={chartDescription}\n        chartType=\"matplotlib\"\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <code>Matplotlib</code> is the most famous python data\n              visualization library. It is widely used and most of other viz\n              libraries (like <code>seaborn</code>) are actually built on top of\n              it.\n            </p>\n            <p>\n              Once installed, matplotlib must be imported, usually using{' '}\n              <code>import matplotlib.pyplot as plt</code>. You can then use use\n              the functions available in the <code>plt</code> object.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/240-basic-area-chart'}>\n              <ChartImage\n                imgName=\"240_basic_area_chart\"\n                caption=\"The most basic area chart one can make with python and matplotlib\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Lexicon\">\n          <Matplotlib />\n          Basic vocabulary\n        </h2>\n        <p>\n          The figure below describes the anatomy of a <code>matplotlib</code>{' '}\n          charts. It names all the main components, names that you need to know\n          to understand the documentation properly.\n        </p>\n        <p>\n          &#9888;&#65039; <u>Disclaimer</u>: this figure comes from the very\n          complete{' '}\n          <a href=\"https://matplotlib.org/stable/users/explain/quick_start.html#parts-of-a-figure\">\n            matplotlib documentation\n          </a>\n          . Have a look at it for a thorough explanation on how this library\n          works.\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <ChartImage\n            imgName={'matplotlib_vocabulary_new'}\n            caption={\n              'Anatomy of a matplotlib chart: all the basic vocabulary you need to know to understand the documentation properly'\n            }\n          />\n        </div>\n        <a href=\"https://matplotlib.org/stable\">\n          <Button size=\"sm\">Matplotlib doc</Button>\n        </a>\n      </Container>\n\n      <Spacing />\n\n      <section className=\"greySection\">\n        <Container>\n          <h2 id=\"Quick\">🤔 How to Learn Matplotlib</h2>\n          <p>\n            Matplotlib is a powerful library, but its syntax can be hard to\n            master. If you want a deep understanding of how it works—and stop\n            struggling to build your dream charts—check out my{' '}\n            <a href=\"https://www.matplotlib-journey.com\">Matplotlib Journey</a>{' '}\n            project!\n          </p>\n          <p>\n            It is an interactive online course designed to turn you into a\n            Matplotlib <b>data visualization expert</b>. It offers a clear,\n            big-picture understanding of how plotting works in Python, making it\n            easy to understand and adapt any example from the gallery.\n          </p>\n        </Container>\n\n        <div\n          className=\"container\"\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingTop: 50,\n            paddingBottom: 110,\n          }}\n        >\n          <a href=\"https://www.matplotlib-journey.com\">\n            <img\n              src=\"/asset/matplotlib-journey-overview.png\"\n              alt=\"overview of the matplotlib journey landing page\"\n              width=\"100%\"\n              style={{ border: 'solid grey 1px' }}\n            />\n          </a>\n          <p>\n            <br />\n          </p>\n          <a href=\"https://www.matplotlib-journey.com\" target=\"_blank\">\n            <Button size=\"md\">Finally, Understand Matplotlib.</Button>\n          </a>\n        </div>\n      </section>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"APIs\">\n          <Matplotlib />\n          Two distinct APIs\n        </h2>\n        <p>\n          There are 2 main ways to build a chart with matplotlib: the{' '}\n          <code>pyplot API</code> and the <code>object-oriented API</code>.\n        </p>\n        <p>\n          ➡️ <code>pyplot API</code>\n        </p>\n        <p>\n          Pyplot is a collection of functions, each function applying a change\n          to a figure. For instance, <code>plt.barh()</code> will build a\n          barplot and <code>plt.title()</code> will add a title to it.\n        </p>\n        <CodeChunk>{pyplotAPI}</CodeChunk>\n\n        <br />\n        <br />\n        <p>\n          ➡️ <code>object oriented API</code>\n        </p>\n        <p>\n          The object oriented API usually starts by initializing one{' '}\n          <code>Figure</code> object and one or more <code>Axes</code> object\n          using the <code>subplot()</code> function. Then the methods of those\n          objects will be used to apply changes to the chart.\n        </p>\n        <CodeChunk>{objOrientedAPI}</CodeChunk>\n\n        <br />\n        <br />\n        <p>\n          See how the syntax slightly differs between both options? (\n          <code>plt.title</code> versus <code>ax.set_title()</code>. This is\n          pretty confusing and I advise to have a look to the{' '}\n          <a href=\"https://matplotlib.org/stable/api/index.html#usage-patterns\">\n            official documentation\n          </a>{' '}\n          for a more thorough explanation. In the gallery, both APIs are used.\n        </p>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Title\">\n          <Matplotlib />\n          Customizing titles\n        </h2>\n        <p>\n          The title is a key part of a good chart. It has to <u>summarize</u>{' '}\n          its key message in a few words. Always avoid to simply repeat what is\n          displayed on each axis. Try to provide some more insight allowing to\n          understand the main result instead.\n        </p>\n        <p>\n          The <Link to=\"/190-custom-matplotlib-title\">post #190</Link> goes in\n          depth on how to customize the <code>matplotlib</code>\n          title. All the main types of change are descried: changing its color,\n          adding a subtitle, using math formulas and so on. Give it a go!\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"190_Custom_title6\"\n            caption=\"Python chart with subtitle and custom color\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title7\"\n            caption=\"Add a math formula in title with Matplotlib\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title5\"\n            caption=\"Control the height of the matplotlib title\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"534-highly-customized-layout\"\n            caption=\"Subplot, title, and margin customization\"\n            linkTo=\"/534-highly-customized-layout\"\n          />\n        </Row>\n        <p>\n          <br />\n          An effective method in data visualization involves utilizing the title\n          as a <b>legend</b>, facilitated by the <code>highlight_text</code>{' '}\n          package. The subsequent two posts provide an introductory overview of\n          this package:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"how-to-custom-annotations-matplotlib\"\n            caption=\"How to customize color and style of the annotation\"\n            linkTo=\"/how-to-custom-title-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"advanced-custom-annotations-matplotlib-3\"\n            caption=\"Create one annotation for both title and subtitle\"\n            linkTo=\"/advanced-custom-annotations-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"589-how-to-change-coordinate-system\"\n            caption=\"How to change the coordinate system of the annotation\"\n            linkTo=\"/589-how-to-change-coordinate-system\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Annotation\">\n          <Matplotlib />\n          Annotation\n        </h2>\n        <p>\n          Annotation is a key part of a great visualization. It transforms a\n          simple chart in a whole piece of story telling. Before you share your\n          graph with anyone, make sure the key insight are highlighted with\n          labels, shapes or color.\n        </p>\n        <p>\n          All those kind of annotation are built thanks to various{' '}\n          <b>matplotlib functions</b> like <code>annotate()</code> or{' '}\n          <code>add_patch()</code>. The blogposts showcased below should get you\n          started with it.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"193_annotate2\"\n            caption=\"Add a square to highlight an area\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate3\"\n            caption=\"Add a circle to highlight an area\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate4\"\n            caption=\"Add a segment\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate5\"\n            caption=\"Add vertical and horizontal ablines\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate6\"\n            caption=\"Annotate with an equation\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"534-highly-customized-layout\"\n            caption=\"Subplot, title, and margin customization\"\n            linkTo=\"/534-highly-customized-layout\"\n          />\n          <ChartImageContainer\n            imgName=\"513-add-logo-matplotlib\"\n            caption=\"How to add an img into a matplotlib chart\"\n            linkTo=\"/513-add-logo-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"589-how-to-change-coordinate-system\"\n            caption=\"How to change the coordinate system of a chart\"\n            linkTo=\"/589-how-to-change-coordinate-system\"\n          />\n        </Row>\n        <p>\n          <br />\n          The main problem with matplotlib annotations is that{' '}\n          <b>you can&apos;t</b> have different font styles (\n          <i>color, weight, size...</i>) inside a same annotation. And this is a\n          big issue because highlighting text has a <b>major role</b> in data\n          visualization.\n        </p>\n        <p>\n          Fortunately for us, the <code>highlight_text</code> package exists!\n          And it makes the process of creating <b>beautiful annotations</b> much\n          easier. Check the examples below:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"how-to-custom-annotations-matplotlib\"\n            caption=\"How to customize color and style of the annotation\"\n            linkTo=\"/how-to-custom-title-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"advanced-custom-annotations-matplotlib-1\"\n            caption=\"Add a background to the annotation\"\n            linkTo=\"/advanced-custom-annotations-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"advanced-custom-annotations-matplotlib-2\"\n            caption=\"Add a path effect to the annotation\"\n            linkTo=\"/advanced-custom-annotations-matplotlib\"\n          />\n        </Row>\n        <p>\n          <br />A similar tool to highlight_text is{' '}\n          <a href=\"/594-introduction-flexitext\">flexitext</a>. The core\n          difference relies on the syntax used, where flexitext has something\n          more <b>similar to HTML</b> compared to highlight_text.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"594-introduction-flexitext\"\n            caption=\"Introduction to string styling with flexitext\"\n            linkTo=\"/594-introduction-flexitext\"\n          />\n          <ChartImageContainer\n            imgName=\"595-advanced-flexitext-features-1\"\n            caption=\"Dynamically change text size with flexitext\"\n            linkTo=\"/595-advanced-flexitext-features\"\n          />\n          <ChartImageContainer\n            imgName=\"595-advanced-flexitext-features-2\"\n            caption=\"Dynamically change text opacity with flexitext\"\n            linkTo=\"/595-advanced-flexitext-features\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Arrow\">\n          <DrawArrow />\n          Arrows\n        </h2>\n        <p>\n          Matplotlib offers built-in arrow functions like{' '}\n          <code>annotate()</code> and\n          <code>FancyArrowPatch()</code>. For full customization, though, the{' '}\n          <a href=\"/drawarrow\">drawarrow</a> library is a more{' '}\n          <b>straightforward</b> option.\n        </p>\n        <p>\n          The following posts will guide you in creating{' '}\n          <b>any arrow you need</b> using both Matplotlib functions and those\n          from <a href=\"/drawarrow\">drawarrow</a>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"193_annotate1\"\n            caption=\"Add a label with a segment\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"introduction-drawarrow-1\"\n            caption=\"use DrawArrow to make arrow easily\"\n            linkTo=\"/drawarrow\"\n          />\n          <ChartImageContainer\n            imgName=\"introduction-drawarrow-3\"\n            caption=\"customize arrows with DrawArrow\"\n            linkTo=\"/drawarrow\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-create-and-custom-arrows-matplotlib-1\"\n            caption=\"How to create an arrow with an annotation\"\n            linkTo=\"/how-to-create-and-custom-arrows-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"591-arrows-with-inflexion-point-1\"\n            caption=\"How to create an arrow with an inflexion point\"\n            linkTo=\"/591-arrows-with-inflexion-point\"\n          />\n          <ChartImageContainer\n            imgName=\"591-arrows-with-inflexion-point-2\"\n            caption=\"Arrow with an inflexion in a real life example\"\n            linkTo=\"/591-arrows-with-inflexion-point\"\n          />\n        </Row>\n      </Container>\n      <div className=\"greySection\">\n        <Container>\n          <Container>\n            <FunctionExploration funDetails={fig_arrow} />\n          </Container>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <h2 id=\"Cheatsheets\">✨ Cheatsheets</h2>\n          <p>\n            It's pretty hard to remember all the matplotlib associated\n            vocabulary. The <Link to=\"/cheat-sheets\">cheatsheet section</Link>{' '}\n            is here to help, with a few sheets that you'll probably want to use\n            on a daily basis.\n          </p>\n          <Row>\n            <Col xs={12} md={4}>\n              <Link to=\"/cheat-sheets\">\n                <ChartImage\n                  imgName={'matplotlib_cheat_sheet'}\n                  caption={'Matplotlib cheatsheet by Datacamp'}\n                />\n              </Link>\n            </Col>\n            <Col xs={12} md={4}>\n              <Link to=\"/cheat-sheets\">\n                <ChartImage\n                  imgName={'matplotlib-python-official-cheatsheet1'}\n                  caption={'Official Matplotlib cheatsheet (page 1)'}\n                />\n              </Link>\n            </Col>\n            <Col xs={12} md={4}>\n              <Link to=\"/cheat-sheets\">\n                <ChartImage\n                  imgName={'matplotlib-python-official-cheatsheet2'}\n                  caption={'Official Matplotlib cheatsheet (page 2)'}\n                />\n              </Link>\n            </Col>\n          </Row>\n          <br />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Colors\">\n          <Matplotlib />\n          Customize colors\n        </h2>\n        <p>\n          <a href=\"/python-colors\">Colors</a> are probably one the{' '}\n          <b>most important aspects</b> of your charts. But{' '}\n          <a href=\"/color-palette-finder\">finding the right color</a> can be\n          quite hard.\n        </p>\n        <Row>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-map-with-custom-legend\">\n              <ChartImage\n                imgName={'web-map-with-custom-legend'}\n                caption={'Choropleth map with continuous palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-stacked-area-with-inflexion-arrows\">\n              <ChartImage\n                imgName={'web-stacked-area-with-inflexion-arrows'}\n                caption={'Stacked area chart with categorical palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/591-arrows-with-inflexion-point\">\n              <ChartImage\n                imgName={'591-arrows-with-inflexion-point-2'}\n                caption={'Bubble map with categorical palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-stacked-line-chart-with-labels\">\n              <ChartImage\n                imgName={'web-stacked-line-chart-with-labels'}\n                caption={'Stacked area chart with continuous palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/532-customizing-circular-barplot-in-matplotlib\">\n              <ChartImage\n                imgName={'532-episode1-each-line-anakin'}\n                caption={'Circular barplot with custom palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-streamchart-with-matplotlib\">\n              <ChartImage\n                imgName={'web-streamchart-with-matplotlib-square'}\n                caption={'Bubble map with categorical palette'}\n              />\n            </Link>\n          </Col>\n        </Row>\n        <Link to=\"/python-colors\">\n          <Button size=\"md\">Learn more about colors</Button>\n        </Link>\n        <br />\n        <br />\n        <p>\n          Use the <a href=\"/color-palette-finder\">color palette finder</a> to\n          select the right chart colors. It's powered by the{' '}\n          <a href=\"/introduction-to-pypalettes\">PyPalettes</a> library for{' '}\n          <b>easy color customization</b>.\n        </p>\n\n        <a href=\"/color-palette-finder\">\n          <img\n            src={pypalettesGIF}\n            alt=\"Color palette finder demo\"\n            style={{ maxWidth: '900px', width: '100%' }}\n          />\n        </a>\n        <Link to=\"/color-palette-finder\">\n          <Button size=\"md\">Discover palettes</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Font\">\n          <PyFonts />\n          Custom fonts\n        </h2>\n        <p>\n          Using custom fonts adds a nice touch to your graph and make it shine\n          among all the other plots using defaults. The <b>simplest way</b> to\n          customize your fonts is with the <a href=\"/pyfonts\">PyFonts</a>{' '}\n          library, which lets you <b>load any font from the web</b> with just a\n          single line of code!\n        </p>\n        <p>\n          The blog post below will walk you through using{' '}\n          <a href=\"/pyfonts\">PyFonts</a> or installing and applying a local font\n          with matplotlib functions.\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/custom-fonts-in-matplotlib\">\n            <ChartImage\n              imgName={'custom-fonts-in-matplotlib'}\n              caption={'How to use custom fonts with matplotlib'}\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Margin\">\n          <Matplotlib />\n          Add margin around a <code>matplotlib</code> chart\n        </h2>\n        <p>\n          It is a common struggle to deal with the margins around the chart.\n          Fortunately this is pretty straightforward thanks to the{' '}\n          <code>subplots_adjust()</code> function as explained in the examples\n          below.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"192_increase_margin2\"\n            caption=\"Increase the bottom margin of a matplotlib chart.\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n          <ChartImageContainer\n            imgName=\"192_increase_margin4\"\n            caption=\"Increase the top margin to fit a title\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n          <ChartImageContainer\n            imgName=\"534-highly-customized-layout\"\n            caption=\"Subplot, title, and margin customization\"\n            linkTo=\"/534-highly-customized-layout\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Subplot\">\n          <Matplotlib />\n          Split the figure in subplots\n        </h2>\n        <p>\n          It can be really useful to split your graphic window in several parts,\n          in order to display several charts in the same time. The{' '}\n          <code>subplot()</code> function of <code>matplotlib</code> allows to\n          do it quickly with a great level of customization.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"194_matplotlib_subplot4\"\n            caption=\"Split the figure in 4 charts of same size.\"\n            linkTo=\"/194-split-the-graphic-window-with-subplot\"\n          />\n          <ChartImageContainer\n            imgName=\"194_matplotlib_subplot6\"\n            caption=\"Split the figure with a custom layout\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n          <ChartImageContainer\n            imgName=\"194_matplotlib_subplot9\"\n            caption=\"Manage chart size on subplots\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n        </Row>\n        <p>\n          <br />\n        </p>\n        <p>\n          Additional note: how to remove some unused entries in a grid using the{' '}\n          <code>ax.remove()</code> function:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"how-to-remove-axis-in-matplotlib\"\n            caption=\"How to remove some unused entries in a chart grid.\"\n            linkTo=\"/how-to-remove-axis-in-matplotlib\"\n          />\n        </Row>\n        <p>\n          <br />\n        </p>\n        <p>\n          Adding a secondary graph <b>within</b> the main graph area can be a\n          powerful technique to add context to you figure. This is totally\n          doable using the <code>inset_axes()</code> function as suggested in\n          the examples below:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"how-to-add-plot-inside-plot-1\"\n            caption=\"Add an axis inside another axis\"\n            linkTo=\"/how-to-add-plot-inside-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-add-plot-inside-plot-2\"\n            caption=\"Add a plot inside another plot\"\n            linkTo=\"/how-to-add-plot-inside-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-add-plot-inside-plot-3\"\n            caption=\"Customize the axis of the inner plot\"\n            linkTo=\"/how-to-add-plot-inside-plot\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Theme\">\n          <Matplotlib />\n          Available style sheets\n        </h2>\n        <p>\n          <code>Matplotlib</code> comes with a set of 26 pre-built themes to\n          style your chart easily.{' '}\n          <Link to=\"/199-matplotlib-style-sheets\">This post</Link> is dedicated\n          to this feature, explaining how to use <code>plt.style.use()</code> to\n          pick a theme up.\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/199-matplotlib-style-sheets\">\n            <ChartImage\n              imgName={'199-matplotlib-style-sheets-538-full'}\n              caption={'Customize a matplotlib chart with a preset theme'}\n            />\n          </Link>\n        </div>\n        <p>\n          We recommend you to use the{' '}\n          <a href=\"/custom-matplotlib-theme-with-morethemes\">morethemes</a>{' '}\n          package if you want to use beautiful themes inspired by famous\n          journals.\n        </p>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Axis\">\n          <Matplotlib />\n          Customizing axis\n        </h2>\n        <p>\n          <code>Matplotlib</code> allows every kind of axis configuration. It is\n          mainly done thanks to the <code>tick_params()</code>,{' '}\n          <code>xticks()</code> and <code>xlabels()</code> functions. The{' '}\n          <Link to=\"/191-custom-axis-on-matplotlib-chart\">post #191</Link> will\n          guide you through all the possibilities.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"191_Custom_axis1\"\n            caption=\"Change the axis title and its appearance\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis2\"\n            caption=\"Control axis labels and ticks look\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis6\"\n            caption=\"Control axis limit with the xlim() function\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"basic-time-series-with-matplotlib\"\n            caption=\"How to deal with the date format. How to represent those dates properly on the X axis.\"\n            linkTo=\"/basic-time-series-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"scatterplot-and-log-scale-in-matplotlib\"\n            caption=\"How to use a log scale for the X or the Y axis.\"\n            linkTo=\"/scatterplot-and-log-scale-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"589-how-to-change-coordinate-system\"\n            caption=\"How to change the coordinate system of a chart\"\n            linkTo=\"/589-how-to-change-coordinate-system\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Legend\">\n          <Matplotlib />\n          Customizing the legend\n        </h2>\n        <p>\n          If you have several colors or marker on your chart, you can't escape\n          the hassle of building a nice legend. The blogpost linked below should\n          help for all the most common use cases like positioning the legend,\n          adding and customizing a title to it, controling markers and labels\n          and more.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib1\"\n            caption=\"How to add the default matplotlib legend\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib2\"\n            caption=\"Legend location, learn how to add it anywhere including outside the plot area\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib3\"\n            caption=\"Customize the legend label appearance\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib4\"\n            caption=\"Add and customize the title of the legend\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib5\"\n            caption=\"Customize the marker of each element item\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib6\"\n            caption=\"Add a background, stroke and more legend customization\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-use-rectangles-in-matplotlib-legends\"\n            caption=\"How to customize the legend handle to have a different shape that the one used on the chart\"\n            linkTo=\"/how-to-use-rectangles-in-matplotlib-legends\"\n          />\n          <ChartImageContainer\n            imgName=\"585-legend-for-categorical-data-matplotlib-1\"\n            caption=\"Learn how to use the default legend in matplotlib\"\n            linkTo=\"/585-legend-for-categorical-data-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"585-legend-for-categorical-data-matplotlib-2\"\n            caption=\"Map color text to colors in chart\"\n            linkTo=\"/585-legend-for-categorical-data-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"585-legend-for-categorical-data-matplotlib-3\"\n            caption=\"Put directly the legend on each line\"\n            linkTo=\"/585-legend-for-categorical-data-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"585-legend-for-categorical-data-matplotlib-4\"\n            caption=\"Use arrows to point to the legend\"\n            linkTo=\"/585-legend-for-categorical-data-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"web-map-with-custom-legend-square\"\n            caption=\"Advanced use case with a custom legend for a map\"\n            linkTo=\"/web-map-with-custom-legend\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Pattern\">Patterns in charts</h2>\n        <p>\n          <b>Hatchs and patterns</b> are a great way to enhance the readability\n          of your chart. The post below will guide you through the process of\n          adding patterns to <b>different types</b> of charts.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-1\"\n            caption=\"Patterns in barplot\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-2\"\n            caption=\"Patterns in area chart\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-3\"\n            caption=\"Patterns in histogram\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-4\"\n            caption=\"Patterns in boxplot\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Images\">Insert images in a matplotlib graph</h2>\n        <p>\n          It can be very useful to insert <b>one or several images</b> in a\n          matplotlib graph. It can be used for the graph caption or even inside\n          the chart area to provide more context.\n        </p>\n        <p>\n          Please find below a{' '}\n          <Link href=\"/513-add-logo-matplotlib\">complete tutorial</Link>{' '}\n          explaining how to proceed using the <code>PIL</code> and{' '}\n          <code>io</code> libraries, and a{' '}\n          <Link href=\"/web-stacked-line-chart-with-labels\">\n            real life usage\n          </Link>{' '}\n          of this technique to produce a beautiful & polished figure.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"513-add-logo-matplotlib\"\n            caption=\"How to add an img into a matplotlib chart\"\n            linkTo=\"/513-add-logo-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"web-stacked-line-chart-with-labels-square\"\n            caption=\"A clean stacked area chart with images in the caption\"\n            linkTo=\"/web-stacked-line-chart-with-labels\"\n          />\n          <ChartImageContainer\n            imgName=\"web-scatterplot-with-images-in-circle\"\n            caption=\"Use an image inside each scatterplot circle\"\n            linkTo=\"/web-scatterplot-with-images-in-circles\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"evolution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","export default __webpack_public_path__ + \"static/pypalettes-30c04e6e9cc4378a11aa4ded22376216.gif\";"],"names":["ChartImageContainer","_ref","imgName","caption","linkTo","React","Col","xs","md","Link","to","ChartImage","noop","ToggleButton","bsPrefix","name","className","checked","type","onChange","value","disabled","id","inputRef","props","ref","children","autoComplete","Button","undefined","role","as","htmlFor","displayName","chartDescription","quickCode","pyplotAPI","objOrientedAPI","allStyle","Head","SEO","title","seoDescription","Matplotlibs","selectedParameter","setSelectedParameter","map","item","i","active","key","variant","size","e","currentTarget","Layout","isTocEnabled","TitleAndDescription","description","chartType","Container","Row","CodeChunk","Spacing","Matplotlib","href","style","maxWidth","margin","padding","display","flexDirection","justifyContent","alignItems","paddingTop","paddingBottom","src","alt","width","border","target","DrawArrow","FunctionExploration","funDetails","fig_arrow","pypalettesGIF","PyFonts","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}