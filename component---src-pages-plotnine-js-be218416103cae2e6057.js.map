{"version":3,"file":"component---src-pages-plotnine-js-be218416103cae2e6057.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/plotnine.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Plotly } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport { Button } from 'react-bootstrap';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartImage from '../components/ChartImage';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription = (\n  <>\n    <p>\n      <code>Plotnine</code> is a library that allows to use the{' '}\n      <b>grammar of graphics</b> in <code>Python</code>. It is based on the\n      famous <code>ggplot2</code> library in{' '}\n      <a href=\"https://r-graph-gallery.com\">R</a>.\n    </p>\n    <p>\n      Plotnine is a great tool to create <b>beautiful</b> and <b>complex</b>{' '}\n      visualizations with a syntax that R users already know and love.\n    </p>\n  </>\n);\n\nexport const Head = () => (\n  <SEO\n    title=\"Plotnine\"\n    seoDescription=\"An overview of the plotnine library in Python\"\n  />\n);\n\nexport default function Post() {\n  return (\n    <Layout title=\"Plotnine\">\n      <TitleAndDescription\n        title=\"Plotnine: ggplot in python\"\n        description={chartDescription}\n        chartType=\"plotnine\"\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <p>\n          Before using plotnine you need to install it. This can easily be done\n          with <code>pip</code>:\n        </p>\n        <br />\n        <CodeChunk>{codeInstall}</CodeChunk>\n        <br />\n        <Row className=\"align-items-center\">\n          <Col md={7}>\n            <p>\n              The <b>Grammar of Graphics</b> is a way of thinking about how to\n              build graphs. It is based on the idea that you can build a graph\n              by <b>adding layers</b> to it. In this example, we add a layer of\n              points to a graph.\n            </p>\n            <p>\n              Once installed, you can either <b>import all the functions</b>{' '}\n              from the library with <code>from plotnine import *</code> or\n              import only the functions you need with{' '}\n              <code>from plotnine import ggplot, geom_point</code>.\n            </p>\n          </Col>\n          <Col md={5}>\n            <Link to={'/573-introduction-scatterplot-plotnine'}>\n              <ChartImage\n                imgName=\"quick-code-img-plotnine\"\n                caption=\"Most basic plotnine chart\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Gallery\">Scatter plot with plotnine</h2>\n        <p>\n          <a href=\"/scatter-plot\">Scatter plots</a> are a great way to visualize\n          the relationship between two numerical variables. The{' '}\n          <code>plotnine</code> library makes it easy to thanks to its{' '}\n          <code>geom_point()</code> function.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"573-introduction-scatterplot-plotnine-1\"\n            caption=\"Most basic scatterplot with plotnine\"\n            linkTo=\"/573-introduction-scatterplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"573-introduction-scatterplot-plotnine-2\"\n            caption=\"Change color markers\"\n            linkTo=\"/573-introduction-scatterplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"573-introduction-scatterplot-plotnine-3\"\n            caption=\"Color by group\"\n            linkTo=\"/573-introduction-scatterplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"574-custom-marker-scatter-plotnine-1\"\n            caption=\"Change marker size\"\n            linkTo=\"/574-custom-marker-scatter-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"574-custom-marker-scatter-plotnine-2\"\n            caption=\"Changer marker shape\"\n            linkTo=\"/574-custom-marker-scatter-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"574-custom-marker-scatter-plotnine-3\"\n            caption=\"Changer marker transparency\"\n            linkTo=\"/574-custom-marker-scatter-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"574-custom-marker-scatter-plotnine-4\"\n            caption=\"Custom edge colors\"\n            linkTo=\"/574-custom-marker-scatter-plotnine\"\n          />\n        </Row>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Gallery\">Bar plot with plotnine</h2>\n        <p>\n          <a href=\"/bar-plot\">Bar plots</a> are a great way to visualize the\n          relationship between a categorical variable and a numerical one. The{' '}\n          <code>plotnine</code> library makes it easy thanks to its{' '}\n          <code>geom_bar()</code> function.\n        </p>\n        <p>\n          The following examples show how to <b>create a basic bar plot</b> with\n          plotnine and how to <b>customize it</b>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"576-introduction-barplot-plotnine-1\"\n            caption=\"Most simple barplot\"\n            linkTo=\"/576-introduction-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"576-introduction-barplot-plotnine-2\"\n            caption=\"Change color and edge color\"\n            linkTo=\"/576-introduction-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"576-introduction-barplot-plotnine-3\"\n            caption=\"Custom width of the bars\"\n            linkTo=\"/576-introduction-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"577-customize-barplot-plotnine-1\"\n            caption=\"Define one specific color per bar\"\n            linkTo=\"/577-customize-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"577-customize-barplot-plotnine-2\"\n            caption=\"Color bars according to a variable\"\n            linkTo=\"/577-customize-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"577-customize-barplot-plotnine-3\"\n            caption=\"Flip the x and y axis\"\n            linkTo=\"/577-customize-barplot-plotnine\"\n          />\n        </Row>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Gallery\">Histogram with plotnine</h2>\n        <p>\n          <a href=\"/histogram\">Bar plots</a> are a great way to visualize the\n          distribution of a numerical variable. The <code>plotnine</code>{' '}\n          library makes it easy thanks to its <code>geom_histogram()</code>{' '}\n          function.\n        </p>\n        <p>\n          The following examples show how to <b>create a basic histogram</b>{' '}\n          with plotnine and how to <b>customize it</b>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"578-introduction-histogram-plotnine-1\"\n            caption=\"Most basic histogram with plotnine\"\n            linkTo=\"/578-introduction-histogram-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"578-introduction-histogram-plotnine-2\"\n            caption=\"Control bar color\"\n            linkTo=\"/578-introduction-histogram-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"578-introduction-histogram-plotnine-3\"\n            caption=\"Custom style with theme, colors and opacity\"\n            linkTo=\"/578-introduction-histogram-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"579-multiple-histograms-plotnine-1\"\n            caption=\"Split histogram by group\"\n            linkTo=\"/579-multiple-histograms-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"579-multiple-histograms-plotnine-2\"\n            caption=\"Mirror histogram to compare 2 variables\"\n            linkTo=\"/579-multiple-histograms-plotnine\"\n          />\n        </Row>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Gallery\">Change theme with plotnine</h2>\n        <p>\n          <code>Plotnine</code> allows to <b>change the theme</b> of the chart.\n          This can easily be done by adding <code>theme_*</code> functions to\n          the chart.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"575-custom-theme-plotnine-2\"\n            caption=\"White theme with plotnine\"\n            linkTo=\"/575-custom-theme-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"575-custom-theme-plotnine-3\"\n            caption=\"Dark theme with plotnine\"\n            linkTo=\"/575-custom-theme-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"575-custom-theme-plotnine-4\"\n            caption=\"Theme withouth grid lines\"\n            linkTo=\"/575-custom-theme-plotnine\"\n          />\n        </Row>\n        <br />\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n\nconst quickCode = `# Load plotnine\nfrom plotnine import ggplot, geom_point, aes\nimport pandas as pd\n\n# Sample data\nx = [1,2,3,4,5,6,7,8,9,10]\ny = [10,9,8,7,6,5,4,3,2,1]\ndf = pd.DataFrame({'x':x, 'y':y})\n\n# Create a chart\n(\nggplot(df, aes(x='x', y='y')) +\n    geom_point()\n)\n`;\n\nconst codeInstall = `pip install plotnine`;\n\nconst saveCode = `fig.write_html(\"the/path/to/chart-name.html\")`;\nconst embedCode = `<iframe\n  src=\"the/path/to/chart-name.html\"\n  width=\"800\"\n  height=\"600\"\n  title=\"chart name\"\n  style=\"border:none\">\n</iframe>`;\n\nconst plotlyExpressCode = `# import the plotly express library\nimport plotly.express as px\n\n# Some dummy data\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [15, 22, 18, 12, 28]\n\n# Plot\nfig = px.bar(\n  x=categories, \n  y=values, \n)\n\nfig.show()\n`;\n\nconst plotlyGoCode = `# import the plotly graph objects lib\nimport plotly.graph_objects as go\n\n# Some dummy data\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [15, 22, 18, 12, 28]\n\n# Create a bar chart using the Graph Object API\nfig = go.Figure(data=[go.Bar(x=categories, y=values)])\n\n# Update layout\nfig.update_layout(\n  title=\"Simple Bar Chart\", \n  xaxis_title=\"Categories\", \n  yaxis_title=\"Values\")\n\n\nfig.show()\n`;\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","href","Head","Post","Layout","TitleAndDescription","description","chartType","Container","id","CodeChunk","codeInstall","Row","quickCode","Spacing","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}