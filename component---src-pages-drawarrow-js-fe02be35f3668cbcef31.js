"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[5762],{720:function(e,t,a){a.r(t),a.d(t,{Head:function(){return b},default:function(){return A}});var l=a(6540),n=a(7238),r=a(7906),o=a(3048),i=a(3471),c=a(4479),m=a(834),s=a(4794),u=a(8360),w=a(1985),p=a(1105),h=a(5951),d=a(5216),E=a(3572),f=a(2816);const g=l.createElement(l.Fragment,null,l.createElement("p",null,l.createElement("code",null,"DrawArrow")," is a library that allows to create arrows for your matplotlib charts with ease."),l.createElement("p",null,"It was created by ",l.createElement("a",{href:"https://barbierjoseph.com/"},"Joseph Barbier")," ","in order to create curved, straight, thin, large or bizarre arrows in matplotlib, in ",l.createElement("b",null,"any color, width and style you like"),".")),b=()=>l.createElement(f.k,{title:"DrawArrow: drawing arrows for matplotlib made easy",seoDescription:"An overview of the drawarrow library in Python"});function A(){return l.createElement(r.A,{title:"DrawArrow"},l.createElement(n.A,{title:"DrawArrow: drawing arrows for matplotlib made easy",description:g,chartType:"drawarrow"}),l.createElement(o.A,null,l.createElement("h2",{id:"Quick"},"⏱ Quick start"),l.createElement("p",null,"Before using drawarrow you need to ",l.createElement("b",null,"install")," it. This can easily be done with ",l.createElement("code",null,"pip"),":"),l.createElement("br",null),l.createElement(h.A,null,k),l.createElement("br",null),l.createElement(c.A,{className:"align-items-center"},l.createElement(p.A,{md:7},l.createElement("p",null,"Matplotlib graphs have ",l.createElement("strong",null,"two main components"),":"),l.createElement("ul",null,l.createElement("li",null,"the figure (the overall graph)"),l.createElement("li",null,"the axes (all the sub-graphs)")),l.createElement("p",null,"→ ",l.createElement("a",{href:"/matplotlib/#Lexicon"},"Learn more about it")),l.createElement("p",null,"DrawArrow provides ",l.createElement("b",null,"2 simple functions"),":",l.createElement("ul",null,l.createElement("li",null,l.createElement("code",null,"fig_arrow()"),": draw an arrow on a matplotlib"," ",l.createElement("b",null,"figure")),l.createElement("li",null,l.createElement("code",null,"ax_arrow()"),": draw an arrow on a matplotlib"," ",l.createElement("b",null,"axes")))),l.createElement("p",null,"You basically just have to specify the head and tail positions to have an arrow on your chart.")),l.createElement(p.A,{md:5},l.createElement(s.Link,{to:"/drawarrow#Quick"},l.createElement(E.A,{imgName:"introduction-drawarrow-1",caption:"Most basic arrow with drawarrow"})))),l.createElement(h.A,null,y)),l.createElement(d.A,null),l.createElement("div",{className:"greySection"},l.createElement(o.A,null,l.createElement(u.A,{funDetails:w.l}))),l.createElement(d.A,null),l.createElement(o.A,null,l.createElement("h2",{id:"Axes"},"Draw an arrow on an axes"),l.createElement(c.A,{className:"align-items-center"},l.createElement(p.A,{md:7},l.createElement("p",null,"Matplotlib graphs have ",l.createElement("strong",null,"two main components"),":"),l.createElement("ul",null,l.createElement("li",null,"the figure (the overall graph)"),l.createElement("li",null,"the axes (all the sub-graphs)")),l.createElement("p",null,"→ ",l.createElement("a",{href:"/matplotlib/#Lexicon"},"Learn more about it")),l.createElement("p",null,"The ",l.createElement("code",null,"ax_arrow()")," function is designed to"," ",l.createElement("strong",null,"draw arrows on an axes"),". It means that it's using the ",l.createElement("strong",null,"same coordinate system")," as the plotted data.")),l.createElement(p.A,{md:5},l.createElement(E.A,{imgName:"introduction-drawarrow-2",caption:"Most basic arrow with drawarrow"}))),l.createElement(h.A,null,_)),l.createElement(d.A,null),l.createElement(o.A,null,l.createElement("h2",{id:"Figure"},"Draw an arrow on a figure"),l.createElement(c.A,{className:"align-items-center"},l.createElement(p.A,{md:5},l.createElement(E.A,{imgName:"introduction-drawarrow-3",caption:"Most basic arrow with drawarrow"})),l.createElement(p.A,{md:7},l.createElement("p",null,"The ",l.createElement("code",null,"fig_arrow()")," function is designed to"," ",l.createElement("b",null,"draw arrows on a figure"),": using the relative coordinate system. The position (0,0) means the bottom left and (1,1) the top right of the figure"))),l.createElement(h.A,null,x)),l.createElement(d.A,null),l.createElement(o.A,null,l.createElement("h2",{id:"Custom"},"Customize the arrow"),l.createElement(c.A,{className:"align-items-center"},l.createElement(p.A,{md:7},l.createElement("p",null,"The arrow displayed is a ",l.createElement("code",null,"FancyArrowPatch"),", a specialized"," ",l.createElement("strong",null,l.createElement("a",{href:"/matplotlib"},"matplotlib")," object")," ","for creating complex arrows. You can pass"," ",l.createElement("a",{href:"/drawarrow#Fig_arrow() details"},"any additional arguments")," ","for this object to ",l.createElement("code",null,"fig_arrow()")," and"," ",l.createElement("code",null,"ax_arrow()"),"."),l.createElement("br",null),l.createElement("p",null,"The example below demonstrates some of the most useful options.")),l.createElement(p.A,{md:5},l.createElement(E.A,{imgName:"introduction-drawarrow-4",caption:"Most basic arrow with drawarrow"}))),l.createElement(h.A,null,v)),l.createElement(d.A,null),l.createElement(o.A,null,l.createElement("h2",null,"Gallery of examples"),l.createElement("p",null,"Here are some examples of what you can do with drawarrow. Click on the images to see the code."),l.createElement(c.A,null,l.createElement(p.A,{xs:12,md:4},l.createElement(s.Link,{to:"/web-map-with-custom-legend"},l.createElement(E.A,{imgName:"web-map-with-custom-legend",caption:"Choropleth map with continuous palette"}))),l.createElement(p.A,{xs:12,md:4},l.createElement(s.Link,{to:"/web-lollipop-with-colormap-and-arrow"},l.createElement(E.A,{imgName:"web-lollipop-with-colormap-and-arrow-square",caption:"Lollipop chart with arrows"}))),l.createElement(p.A,{xs:12,md:4},l.createElement(s.Link,{to:"/web-area-chart-with-different-colors-for-positive-and-negative-values"},l.createElement(E.A,{imgName:"web-area-chart-with-different-colors-for-positive-and-negative-values-square",caption:"Minimalist style area chart"}))),l.createElement(p.A,{xs:12,md:6},l.createElement(s.Link,{to:"/web-stacked-area-with-inflexion-arrows"},l.createElement(E.A,{imgName:"web-stacked-area-with-inflexion-arrows-square",caption:"Stacked area chart with arrows with an inflection point"}))))),l.createElement(d.A,null),l.createElement(o.A,null,l.createElement("h2",null,"Going further"),l.createElement("p",null,"You might be interested in",l.createElement("ul",null,l.createElement("li",null,"the"," ",l.createElement("a",{href:"https://github.com/JosephBARBIERDARNAL/drawarrow"}," ","official github repo of drawarrow")," ","(⭐ give it a star!)"),l.createElement("li",null,"how to draw an"," ",l.createElement("a",{href:"/591-arrows-with-inflexion-point"},"arrow with an inflection point")," "),l.createElement("li",null,"how to create"," ",l.createElement("a",{href:"/advanced-custom-annotations-matplotlib"},"beautiful annotation in matplotlib")),l.createElement("li",null,"how to work with"," ",l.createElement("a",{href:"/pyfonts"},"different fonts in matplotlib"))))),l.createElement(d.A,null),l.createElement("div",{className:"greySection",id:"related"},l.createElement(o.A,null,l.createElement(m.A,{chartFamily:"general"}))),l.createElement(d.A,null),l.createElement(o.A,null,l.createElement(i.A,null)),l.createElement(d.A,null))}const y='import matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\n\nax.scatter(x=[1, 2, 3, 4, 5], y=[1, 2, 3, 4, 5], s=100)\n\nfig_arrow(\n    head_position=(0.5, 0.5),\n    tail_position=(0.2, 0.7),\n    width=2,\n    radius=0.3,\n    color="darkred",\n    fill_head=False,\n    mutation_scale=2,\n)\n\nplt.show()\n',_='import matplotlib.pyplot as plt\nfrom drawarrow import ax_arrow\n\nfig, ax = plt.subplots(figsize=(7,7))\n\nax.scatter(x=[1, 5, 10], y=[5, 12, 3], s=300)\nax_arrow(\n   tail_position=(2, 8),\n   head_position=(9.5, 3),\n   ax=ax,\n   color="green",\n   width=5,\n   head_width=15,\n   head_length=20,\n   radius=0.4\n)\nplt.show()\n',x='import matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(figsize=(7,7))\n\nax.scatter(x=[1, 5, 10], y=[5, 12, 3], s=300)\nfig_arrow(\n   tail_position=(0.2, 0.8),\n   head_position=(0.7, 0.3),\n   color="grey",\n   width=5,\n   head_width=15,\n   head_length=20,\n   radius=-0.2\n)\nplt.show()\n',v='import matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(figsize=(10,10))\n\nax.scatter(x=[1, 2, 3, 4, 5], y=[4.3, 2, 3.2, 4, 5], s=300)\n\nfig_arrow(\n   tail_position=(0.2, 0.7),\n   head_position=(0.5, 0.48),\n   inflection_position=(0.4, 0.8),\n   double_headed=True,\n   fill_head=False,\n   color="#003049",\n   radius=0.1,\n   alpha=0.8,\n   width=5,\n   head_width=10,\n   head_length=10,\n   mutation_scale=2\n)\n\nplt.show()\n',k="pip install drawarrow"}}]);
//# sourceMappingURL=component---src-pages-drawarrow-js-fe02be35f3668cbcef31.js.map