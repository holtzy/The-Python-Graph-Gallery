{"version":3,"file":"component---src-pages-area-plot-js-5bd3af68d214de2dc1fd.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/area-plot.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Seaborn } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p>An <a href='https://www.data-to-viz.com/graph/area.html'>area chart</a> is really similar to a <a href='http://python-graph-gallery.com/line-chart/'>line chart</a>, except that the area between the x axis and the line is filled in with color or shading. It represents the evolution of a numeric variable. This section starts by considering <code>matplotlib</code> and <code>seaborn</code> as tools to build area charts. It then shows a few other options for timeseries.</p>\";\n\nconst quickCode = `# library\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create data\nx=range(1,6)\ny=[1,4,6,8,4]\n\n# Area plot\nplt.fill_between(x, y)\nplot.show()\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Python Area Chart Examples with Code\"\n    seoDescription=\"A collection of area chart examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function AreaPlot() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription title=\"Area Chart\" description={chartDescription} />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              There are 2 main ways to build an area chart with Matplotlib. In\n              both case it requires 2 numeric vectors of values as input.\n            </p>\n            <ul>\n              <li>\n                The <code>fill_between()</code> function\n              </li>\n              <li>\n                The <code>stackplot()</code> function that is more useful for{' '}\n                <Link to=\"/stacked-area-plot\">stacked area</Link> charts\n              </li>\n            </ul>\n          </Col>\n          <Col md={6}>\n            <Link to={'/240-basic-area-chart'}>\n              <ChartImage\n                imgName=\"240_basic_area_chart\"\n                caption=\"The most basic area chart one can make with python and matplotlib\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Area chart with <code>Matplotlib</code>\n        </h2>\n        <p>\n          <code>Matplotlib</code> is a great fit to build an area chart thanks\n          to its <code>fill_between()</code> function. Here are a few examples\n          explaining its basics and how to apply some common customization.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"240_basic_area_chart\"\n            caption=\"The most basic area chart one can make with python and matplotlib\"\n            linkTo=\"/240-basic-area-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"241_custom_area_chart1\"\n            caption=\"Control chart color (Matplotlib)\"\n            linkTo=\"/241-improve-area-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"241_custom_area_chart2\"\n            caption=\"Control line color\"\n            linkTo=\"/241-improve-area-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-2\"\n            caption=\"Add patterns to your area chart\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"area-fill-between-two-lines-in-matplotlib\"\n            caption=\"Fill the gap between 2 line charts\"\n            linkTo=\"/area-fill-between-two-lines-in-matplotlib\"\n          />\n        </Row>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/243-area-chart-with-white-grid\">\n            <ChartImage\n              imgName={'243_another_area_chart'}\n              caption={'Area chart with custom grid'}\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Area chart with <code>Seaborn</code>\n        </h2>\n        <p>\n          <code>Seaborn</code> is another great alternative to build an area\n          chart with <code>python</code>. The below examples show how to start\n          basic, apply usual customization, and use the small multiple technique\n          for when you have several groups to compare.\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/242-area-chart-and-faceting\">\n            <ChartImage\n              imgName={'242_area_chart_and_faceting'}\n              caption={'Area chart with small multiple, seaborn'}\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Best\">\n          <Matplotlib />\n          Best area chart examples\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://python-graph-gallery.com\">Python graph gallery</a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works. If you want to display your work\n          here, please drop me a word or even better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Link to={'/web-time-series-and-facetting-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-time-series-and-facetting-with-matplotlib-square'}\n                caption={\n                  'Display 2 line charts and fill the area between both. Also uses faceting to split by groups.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/web-stacked-line-chart-with-labels'}>\n              <ChartImage\n                imgName={'web-stacked-line-chart-with-labels-square'}\n                caption={\n                  'A clean stacked area chart with smoothing, inline labels, caption, color palette and more'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/524-area-chart-over-flexible-baseline'}>\n              <ChartImage\n                imgName={'524-area-over-flexible-baseline_square'}\n                caption={'Plotly line chart with many customization'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/web-overlapped-area-chart-with-zoom-outsets'}>\n              <ChartImage\n                imgName={'web-overlapped-area-chart-with-zoom-outsets'}\n                caption={\n                  'An area chart using overlaid fills to co-display two time series and zoom panels to expand areas of interest'\n                }\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"evolution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","quickCode","Head","AreaPlot","Layout","isTocEnabled","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","Matplotlib","style","maxWidth","margin","padding","Seaborn","href","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}