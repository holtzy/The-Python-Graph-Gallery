{"version":3,"file":"component---src-pages-animation-js-256574146cb64dfb56aa.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./static/animations/gapminder-2.gif","webpack://the-python-graph-gallery/./static/animations/web-animation-with-text8.gif","webpack://the-python-graph-gallery/./static/animations/web-animated-line-chart-with-text-6.gif","webpack://the-python-graph-gallery/./static/animations/scatter.gif","webpack://the-python-graph-gallery/./src/pages/animation.js","webpack://the-python-graph-gallery/./static/animations/volcano.gif"],"sourcesContent":["// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/gapminder-2-38452eb27642aa569017c36b245e7bfe.gif\";","export default __webpack_public_path__ + \"static/web-animation-with-text8-f5b909ae2c89fba13004d0c198920815.gif\";","export default __webpack_public_path__ + \"static/web-animated-line-chart-with-text-6-aabbc7f6a0de9db6e48191a3b504fdbf.gif\";","export default __webpack_public_path__ + \"static/scatter-35e96e9db058f84129d9340d4f7c30af.gif\";","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib } from '../components/MiscellaneousLogos';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport gapminderGif from '../../static/animations/gapminder-2.gif';\nimport outerSpaceGIF from '../../static/animations/web-animation-with-text8.gif';\nimport plasticGIF from '../../static/animations/web-animated-line-chart-with-text-6.gif';\nimport basicScatterGif from '../../static/animations/scatter.gif';\nimport volcanoGif from '../../static/animations/volcano.gif';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  '<p>An animation is a sequence of <b>images displayed one after the other</b>. It is a powerful way to show a process or a <b>change over time</b>.</p><p>This page shows how to build animated charts with Python and <a href=\"https://www.python-graph-gallery.com/matplotlib\">Matplotlib</a>.</p>';\n\nconst quickCode = `# libraries\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\n# initiate figure\nfig, ax = plt.subplots(figsize=(10, 8), dpi=120)\n\ndef update(frame):\n    ax.clear()\n    ax.scatter(\n      1+frame, 10+frame*10,\n      s=600, alpha=0.5,\n      edgecolors=\"black\"\n    )\n    ax.set_xlim(0, 10)\n    ax.set_ylim(0, 100)\n    return fig, ax\n\nani = FuncAnimation(fig, update, frames=range(10))\nani.save(\"my_animation.gif\", fps=5)\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Animation\"\n    seoDescription=\"A collection of animated charts made with Python and Matplotlib, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Correlogram() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription title=\"Animation\" description={chartDescription} />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              An animated chart can be build with <code>python</code> using the\n              <code>FuncAnimation()</code> function from matplotlib. We follow\n              these steps:\n            </p>\n            <ul>\n              <li>Load libraries</li>\n              <li>Open a dataset</li>\n              <li>\n                Define an <code>update</code> function used to build each frame\n                of the animation\n              </li>\n              <li>\n                Create the animation with <code>FuncAnimation()</code> and save\n                it with <code>save()</code>\n              </li>\n            </ul>\n          </Col>\n          <Col md={6}>\n            <Link to={'/340-scatterplot-animation'}>\n              <img\n                src={basicScatterGif}\n                alt=\"Animation with python\"\n                style={{ width: '100%' }}\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <Link to=\"/340-scatterplot-animation\">\n          <Button size=\"sm\">See code</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"&#8800; interaction\">\n            &#128161; Animation &#8800; Interaction\n          </h2>\n          <p>\n            There is a common confusion between what animated and interactive\n            charts are:\n          </p>\n          <ul>\n            <li>\n              <u>Animated</u> means a sequence of several static images is\n              displayed. The user can't do anything except watching those\n              images.\n            </li>\n            <li>\n              <u>Interactive</u> means the user can interact with the chart:\n              zoom in, hover over a shape to get a tooltip, click to have a\n              menu... The user is not a spectator anymore, but also an actor.\n            </li>\n          </ul>\n          <Link to=\"/plotly\">\n            <Button size=\"sm\">Interactive Charts section</Button>\n          </Link>\n          <br />\n          <br />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          <code>Matplotlib</code> and <code>FuncAnimation()</code>\n        </h2>\n        <p>\n          The <code>FuncAnimation()</code> function, a component of the{' '}\n          <code>matplotlib.animation</code> module, facilitates the creation of\n          animations by <strong>repeatedly invoking a function</strong> that\n          updates the plot content with each iteration.\n        </p>\n        <p>\n          Typically, you start by{' '}\n          <strong>establishing a figure and an axis</strong>. Following this, an{' '}\n          <code>update()</code> function is defined to modify the plot's content\n          at every animation cycle.\n        </p>\n        <p>\n          To complete the process, you <strong>generate the animation</strong>{' '}\n          using <code>FuncAnimation()</code> and subsequently store it using the{' '}\n          <code>save()</code> function.\n        </p>\n        <Link to={'/341-python-gapminder-animation'}>\n          <img\n            src={gapminderGif}\n            alt=\"Basic animated scatterplot with python\"\n            style={{ maxWidth: '900px', width: '100%' }}\n          />\n        </Link>\n        <p>\n          The process is pretty much <b>the same</b> for a 3d chart. Here is an\n          example with an animated volcano plot. Each iteration of the loop\n          changes the <b>camera angle</b>, giving this feeling of travelling\n          around the volcano.\n        </p>\n        <Link to={'/342-animation-on-3d-plot'}>\n          <img\n            src={volcanoGif}\n            alt=\"Animated volcano plot with Python\"\n            style={{ maxWidth: '900px', width: '100%' }}\n          />\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Advanced uses cases</h2>\n        <p>\n          Animated charts can be highly impactful when illustrating a\n          <b>process</b> or <b>change over time</b>. Here are a few examples\n          that demonstrate their effectiveness.\n        </p>\n        <Row className=\"align-items-center\">\n          <Col md={4}>\n            <p>\n              This <b>real life</b> example illustrates the power of animated\n              charts. The chart is a{' '}\n              <a href=\"/stacked-area-plot\">stacked area</a> chart with a text\n              that is written <b>through the animation</b>.\n            </p>\n            <br />\n            <Link to=\"/web-animated-line-chart-with-annotation\">\n              <Button size=\"sm\">See code</Button>\n            </Link>\n          </Col>\n          <Col md={8}>\n            <Link to={'/web-animated-line-chart-with-annotation'}>\n              <img\n                src={outerSpaceGIF}\n                alt=\"Animation with python\"\n                style={{ width: '100%' }}\n              />\n            </Link>\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"align-items-center\">\n          <Col md={8}>\n            <Link to={'/web-animated-line-chart-with-text'}>\n              <img\n                src={plasticGIF}\n                alt=\"Animation with python\"\n                style={{ width: '100%' }}\n              />\n            </Link>\n          </Col>\n          <Col md={4}>\n            <p>\n              This <a href=\"/line-chart\">line chart</a>, or <b>race chart</b>,\n              shows the evolution of the of global plastic production over time\n              with a <b>smooth animation</b> and <b>highlighted text</b>.\n            </p>\n            <br />\n            <Link to=\"/web-animated-line-chart-with-text\">\n              <Button size=\"sm\">See code</Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","export default __webpack_public_path__ + \"static/volcano-dd8bc9edc59fc043a7187fd7c95b1335.gif\";"],"names":["SEO","_ref","title","seoDescription","keywords","image","React","lang","name","content","property","chartDescription","quickCode","Head","Correlogram","Layout","isTocEnabled","TitleAndDescription","description","Container","id","Row","className","Col","md","Link","to","src","basicScatterGif","alt","style","width","CodeChunk","Button","size","Spacing","Matplotlib","gapminderGif","maxWidth","volcanoGif","href","outerSpaceGIF","plasticGIF","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}