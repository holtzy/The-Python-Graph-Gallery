{"version":3,"file":"component---src-pages-color-palette-finder-js-63fb056b040ddde4c022.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartFamilySection.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Col.js","webpack://the-python-graph-gallery/./src/components/SectionLogoWithOverlay.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/Row.js","webpack://the-python-graph-gallery/./src/components/TitleAndDescription.js","webpack://the-python-graph-gallery/./src/pages/color-palette-finder.js"],"sourcesContent":["import './chartFamilySection.css';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SectionLogoWithOverlay from './SectionLogoWithOverlay';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\n\nconst TITLES = {\n  distribution: 'Distribution',\n  correlation: 'Correlation',\n  ranking: 'Ranking',\n  partOfAWhole: 'Part Of A Whole',\n  evolution: 'Evolution',\n  map: 'Map',\n  flow: 'Flow',\n  general: 'General Knowledge',\n};\n\nexport default function ChartFamilySection({ chartFamily }) {\n  const allLogos = chartTypesInfo\n    .filter((chart) => chart.family === chartFamily)\n    .map((chart, id) => {\n      const link = fullUrlToInternalLink(chart.pythonURL);\n      return (\n        <Col key={id} xs={4} md={2} className=\"col-1-7\">\n          <SectionLogoWithOverlay\n            link={link}\n            chartType={chart.logo}\n            caption={chart.label}\n          />\n        </Col>\n      );\n    });\n\n  return (\n    <div style={{ paddingBottom: 15 }}>\n      <h2 id=\"Related charts\" className={'sectionTitle ' + chartFamily}>\n        {TITLES?.[chartFamily]}\n      </h2>\n      <Row>{allLogos}</Row>\n    </div>\n  );\n}\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import './sectionLogoWithOverlay.css';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport SectionLogo from './SectionLogo';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\n\nconst generalList = chartTypesInfo\n  .filter((info) => info.family === 'general')\n  .map((info) => info.logo);\n\nexport default function SectionLogoWithOverlay({ chartType, caption, link }) {\n  // If the logo is in the \"general\" family, do not display an overlay.\n  const isGeneralFamily = generalList.includes(chartType);\n\n  return (\n    <>\n      {!isGeneralFamily ? (\n        <>\n          <div className=\"sectionLogoContainer\">\n            <Link to={link}>\n              <SectionLogo chartType={chartType} />\n              <div className=\"sectionLogoOverlay\">\n                <div className=\"sectionLogoOverlayText\">+</div>\n              </div>\n            </Link>\n          </div>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </>\n      ) : (\n        <div className=\"sectionLogoContainer\">\n          <Link to={link}>\n            <SectionLogo chartType={chartType} />\n          </Link>\n          <p className=\"sectionLogoCaption\">{caption}</p>\n        </div>\n      )}\n    </>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import './titleAndDescription.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'gatsby';\nimport { chartTypesInfo } from '../util/sectionDescriptions';\nimport { fullUrlToInternalLink } from '../util/utils';\nimport { Container } from 'react-bootstrap';\nimport SectionLogo from './SectionLogo';\n\n// Note that the description received is a string that contains html.\n// It was not possible to pass JSX since it is sometimes passed directly from\n// the python notebooks metadata\nexport default function TitleAndDescription({\n  title,\n  description,\n  chartType,\n  isRaptiveEnabled = true,\n}) {\n  const chartInfo = chartTypesInfo.find((chart) => chart.id === chartType);\n\n  return (\n    <Container>\n      <div className=\"titleAndDescription\">\n        <div className=\"titleRow\">\n          <h1 className=\"mainTitle\">{title}</h1>\n          {chartInfo && (\n            <div style={{ width: 100, minWidth: 100 }}>\n              <SectionLogo chartType={chartInfo.logo} />\n            </div>\n          )}\n        </div>\n\n        <hr className=\"smallHr\" />\n\n        {typeof description === 'string' ? (\n          <div\n            className=\"description\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        ) : (\n          <div className=\"description\">{description}</div>\n        )}\n\n        {chartInfo && (\n          <div style={{ marginTop: '30px' }}>\n            <Link to={fullUrlToInternalLink(chartInfo.pythonURL)}>\n              <Button size=\"sm\">{chartInfo.label + ' section'}</Button>\n            </Link>\n            <a href={chartInfo.dataToVizURL}>\n              <Button size=\"sm\">About this chart</Button>\n            </a>\n          </div>\n        )}\n      </div>\n\n      {isRaptiveEnabled && (\n        <div className=\"raptive-video-player\" style={{ minHeight: 300 }} />\n      )}\n    </Container>\n  );\n}\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  chartType: PropTypes.string,\n  isRaptiveEnabled: PropTypes.bool,\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\nimport Footer from '../components/Footer';\nimport TopNavbar from '../components/TopNavbar';\nimport { Link } from 'gatsby';\nimport { Button } from 'react-bootstrap';\n\nconst chartDescription = (\n  <>\n    <p>\n      Finding the perfect colors for your Python chart can be <b>daunting</b>.\n      Picking colors manually often leads to a <b>maze of unsuitable options</b>\n      .\n    </p>\n    <p>\n      Luckily, the all-new{' '}\n      <a\n        href=\"https://github.com/JosephBARBIERDARNAL/pypalettes\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        PyPalettes\n      </a>{' '}\n      package provides a <b>collection of 2500+ palettes</b> meticulously\n      curated by hundreds of experts.\n    </p>\n    <p>\n      This app lets you effortlessly <b>explore</b> various palettes and gives\n      you two lines of code to use directly in your{' '}\n      <Link href=\"/matplotlib\">Matplotlib</Link> chart. Discover the perfect\n      palette to make your chart stand out! 😍\n    </p>\n  </>\n);\n\nexport const Head = () => (\n  <SEO\n    title=\"Python Color Palette Finder\"\n    seoDescription=\"Browse 2500+ color palette. Find the perfect match for your Python Chart. Get the matplotlib code.\"\n    isRaptiveEnabled={false}\n    image={\n      'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/asset/palette-finder-overview.png?raw=true'\n    }\n  />\n);\n\nexport default function Colors({ location }) {\n  const queryParams = new URLSearchParams(location.search);\n\n  const palette = queryParams.get('palette');\n\n  const iframeRef = useRef(null);\n\n  const [src, setSrc] = useState('');\n\n  // Need a useEffect to update the src. Otherwise gatsby remove the url parameter no idea why.\n  useEffect(() => {\n    setSrc('https://holtzy.github.io/dataviz-color-finder/?palette=' + palette);\n  }, []);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      iframeRef.current.focus();\n    }\n  }, [src]);\n\n  return (\n    <>\n      <header>\n        <TopNavbar />\n      </header>\n\n      <TitleAndDescription\n        title=\"Python Color Palette Finder\"\n        description={chartDescription}\n        chartType={'pypalettes'}\n        isRaptiveEnabled={false}\n      />\n\n      <div style={{ height: '100%' }} ref={iframeRef}>\n        <iframe\n          id=\"color-tool\"\n          title=\"Tool to find a color palette for a python chart\"\n          width=\"100%\"\n          height=\"1300px\"\n          src={src}\n          allow=\"clipboard-write\" // If I do not put the ;, it breaks the feature no idea why\n          sandbox=\"allow-same-origin allow-top-navigation allow-modals allow-scripts\"\n        ></iframe>\n      </div>\n\n      <Container>\n        <h2>\n          <code>pypalettes</code>: The Easiest Way to Access Colors\n        </h2>\n        <p>\n          <a href=\"https://github.com/JosephBARBIERDARNAL/pypalettes\">\n            pypalettes\n          </a>{' '}\n          is a Python library developed by Joseph Barbier during his\n          collaboration with the Python Graph Gallery 😋.\n        </p>\n        <p>\n          While thousands of color palettes exist, quick access to them in\n          Python has been limited. In R,{' '}\n          <a href=\"https://github.com/EmilHvitfeldt/paletteer/\">paleteer</a>{' '}\n          does a great job of this. Now, the bridge is available for Python too.\n        </p>\n        <p>\n          Palettes come from <code>paleteer</code>, Matplotlib, and Seaborn.\n        </p>\n        <p>\n          <u>Pro Tip</u>: Give a star to the GitHub{' '}\n          <a href=\"https://github.com/JosephBARBIERDARNAL/pypalettes\">repo</a>{' '}\n          to help spread the word!\n        </p>\n        <a href=\"/introduction-to-pypalettes\">\n          <Button size=\"sm\">Official Doc</Button>\n        </a>\n\n        <h2>About this tool</h2>\n        <p>\n          Accessing <b>over 2500 colors</b> is fantastic, but an efficient tool\n          for <b>exploring</b> them is essential.\n        </p>\n        <p>\n          That is why this little explorer was created. Use your keyboard to\n          switch between palettes at lightning speed 🔥!\n        </p>\n        <p>\n          Developed by <a href=\"https://www.yan-holtz.com\">Yan Holtz</a>, this\n          tool is under active development. Feel free to report any bugs or\n          request <b>new features</b>!\n        </p>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n      <Footer />\n    </>\n  );\n}\n"],"names":["TITLES","distribution","correlation","ranking","partOfAWhole","evolution","map","flow","general","ChartFamilySection","_ref","chartFamily","allLogos","chartTypesInfo","filter","chart","family","id","link","fullUrlToInternalLink","pythonURL","React","Col","key","xs","md","className","SectionLogoWithOverlay","chartType","logo","caption","label","style","paddingBottom","Row","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","generalList","info","isGeneralFamily","includes","Link","to","SectionLogo","SEO","title","seoDescription","keywords","image","lang","name","content","property","decoratedBsPrefix","sizePrefix","cols","TitleAndDescription","description","isRaptiveEnabled","chartInfo","find","Container","width","minWidth","dangerouslySetInnerHTML","__html","marginTop","Button","size","href","dataToVizURL","minHeight","chartDescription","target","rel","Head","Colors","location","palette","URLSearchParams","search","get","iframeRef","useRef","src","setSrc","useState","useEffect","current","focus","TopNavbar","height","allow","sandbox","Spacing","Contact","Footer"],"sourceRoot":""}