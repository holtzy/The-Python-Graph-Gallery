{"version":3,"file":"component---src-pages-barplot-js-0040b8f15e38421a457f.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/barplot.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport {\n  Seaborn,\n  Matplotlib,\n  Pandas,\n  Plotnine,\n  Plotly,\n} from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription = (\n  <>\n    <p>\n      A <a href=\"https://www.data-to-viz.com/graph/barplot.html\">barplot</a>{' '}\n      shows the relationship between a <b>numeric</b> and a <b>categoric</b>{' '}\n      variable. Each entity of the categoric variable is represented as a{' '}\n      <b>bar</b>. The size of the bar represents its numeric value.{' '}\n    </p>\n    <p>\n      This section shows how to build a barplot with <code>Python</code>, using\n      libraries like <code>Matplotlib</code> and <code>Seaborn</code>. It start\n      by explaining how to build a very basic barplot, and then provides\n      tutorials for more customized versions.\n    </p>\n    <p>\n      Note that this page also provides guidelines on how to build{' '}\n      <b>stacked</b> and <b>grouped</b> barplot, 2 common variatons useful when\n      several levels of grouping are available.\n    </p>\n  </>\n);\n\nconst quickCode = `# Libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Make a random dataset:\nheight = [3, 12, 5, 18, 45]\nbars = ('A', 'B', 'C', 'D', 'E')\ny_pos = np.arange(len(bars))\n\n# Create bars\nplt.bar(y_pos, height)\n\n# Create names on the x-axis\nplt.xticks(y_pos, bars)\n\n# Show graphic\nplt.show()\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Python Barplot Examples with Code\"\n    seoDescription=\"A collection of barplot examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Barplot() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Barplot\"\n        description={chartDescription}\n        chartType={'barplot'}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <code>Matplotlib</code> is pretty convenient to build a barplot\n              thanks to its <code>bar()</code> function. Seaborn works perfectly\n              as well, see its dedicated section.🔥\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/1-basic-barplot'}>\n              <ChartImage\n                imgName=\"1_basic_barplot\"\n                caption=\"Most basic barplot with Python & Matplotlib.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Barplot with <code>Matplotlib</code>\n        </h2>\n        <p>\n          <code>Matplotlib</code> is probably the most famous and flexible\n          python library for data visualization. It is appropriate to build any\n          kind of chart, including the barchart thanks to its <code>bar()</code>{' '}\n          function.\n        </p>\n        <p>\n          The examples below should get you started. They go from{' '}\n          <Link to=\"/1-basic-barplot\">basic examples</Link> to the details on\n          how to <Link to=\"/3-control-color-of-barplots\">customize</Link> a\n          barplot appropriately.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"2_horizontal_barplot\"\n            caption=\"Horizontal barplot, handy to make labels more readable.\"\n            linkTo=\"/2-horizontal-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"3_control_color_barplot2\"\n            caption=\"Barplot and color customization.\"\n            linkTo=\"/3-control-color-of-barplots\"\n          />\n          <ChartImageContainer\n            imgName=\"3_control_color_barplot4\"\n            caption=\"Change the bar stroke colors.\"\n            linkTo=\"/3-control-color-of-barplots\"\n          />\n          <ChartImageContainer\n            imgName=\"4_add_title_and_axe_labels\"\n            caption=\"Title and axis labels with Matplotlib.\"\n            linkTo=\"/4-add-title-and-axis-label\"\n          />\n          <ChartImageContainer\n            imgName=\"5_custom_space_between_bars\"\n            caption=\"Custom bar width. Can be handy to illustrate the sample size.\"\n            linkTo=\"/5-control-width-and-space-in-barplots\"\n          />\n          <ChartImageContainer\n            imgName=\"5_custom_width_of_bars\"\n            caption=\"Custom space between bars.\"\n            linkTo=\"/5-control-width-and-space-in-barplots\"\n          />\n          <ChartImageContainer\n            imgName=\"6_change_texture\"\n            caption=\"Change bar texture.\"\n            linkTo=\"/6-change-bars-texture\"\n          />\n          <ChartImageContainer\n            imgName=\"7_increase_margin\"\n            caption=\"More space under X axis to fit long labels.\"\n            linkTo=\"/7-custom-barplot-layout\"\n          />\n          <ChartImageContainer\n            imgName=\"7_custom_label\"\n            caption=\"Customize the bar labels.\"\n            linkTo=\"/7-custom-barplot-layout\"\n          />\n          <ChartImageContainer\n            imgName=\"8_confidence_interval\"\n            caption=\"Barplot with confidence interval.\"\n            linkTo=\"/8-add-confidence-interval-on-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"10_barplot_with_number_of_observations\"\n            caption=\"Highly customized barplot with colors, legend, labels and more.\"\n            linkTo=\"/10-barplot-with-number-of-observation\"\n          />\n          <ChartImageContainer\n            imgName=\"web-tornado-chart\"\n            caption=\"Tornado chart with annotations\"\n            linkTo=\"/web-tornado-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-1\"\n            caption=\"Add patterns to your barplot\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Barplot with <code>Seaborn</code>\n        </h2>\n        <p>\n          <code>Seaborn</code> is definitely a good alternative to{' '}\n          <code>Matplotlib</code> to build a barplot. It comes with a{' '}\n          <code>barplot()</code> function that will get you started in minutes.\n        </p>\n        <p>\n          As often, note that the <code>Seaborn</code> alternative allows to\n          write less code to build the chart, but is slighlty more limited in\n          term of customization\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"basic-barplot-with-seaborn1\"\n            caption=\"Most basic barplot with Python and Seaborn\"\n            linkTo=\"/basic-barplot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"basic-barplot-with-seaborn2\"\n            caption=\"Make your barplot vertical by swapping the x and y parameters\"\n            linkTo=\"/basic-barplot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"basic-barplot-with-seaborn3\"\n            caption=\"Learn how to reorder groups in a seaborn barplot\"\n            linkTo=\"/basic-barplot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"error-bars-on-barplot\"\n            caption=\"Add error bars on a seaborn barplot\"\n            linkTo=\"/error-bars-on-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"web-population-pyramid\"\n            caption=\"Population pyramid of a marketing funnel\"\n            linkTo=\"/web-population-pyramid\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Stacked & Grouped\">\n          <Matplotlib />\n          Stacked and Grouped barplot with <code>Matplotlib</code>\n        </h2>\n        <p>\n          <u>Stacked</u> and <u>Grouped</u> barplots are a variation of the more\n          simple barplot. They display the value of a numeric variable for each\n          group and subgroups of a dataset. Subgroups can be stacked (stacked\n          barplot) or set one beside the other (grouped barplot).\n        </p>\n        <p>\n          The three examples below are in-depth tutorial explaining how to build\n          them with Python.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"12_stacked_barplot\"\n            caption=\"How to build a stacked barplot with Python.\"\n            linkTo=\"/12-stacked-barplot-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"12_grouped_barplot\"\n            caption=\"How to build a grouped barplot with Python.\"\n            linkTo=\"/11-grouped-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"12_stacked_percent_barplot\"\n            caption=\"How to build a percent stacked barplot with Python..\"\n            linkTo=\"/13-percent-stacked-barplot\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Stacked & Grouped\">\n          <Seaborn />\n          Stacked and Grouped barplot with <code>Seaborn</code>\n        </h2>\n        <p>\n          The <code>barplot()</code> function of <code>seaborn</code> allows to\n          quickly build a grouped barplot. You just have to pass the column used\n          for subgrouping to the <code>hue</code> parameter.\n        </p>\n        <p>\n          It gets a bit more tricky for stacked and percent stacked barplot, but\n          the examples below should hopefully help.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"grouped-barplot1\"\n            caption=\"Grouped barplot with python and seaborn\"\n            linkTo=\"/grouped-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"stacked-barplot-seaborn\"\n            caption=\"Stacked barchart with python and seaborn\"\n            linkTo=\"/stacked-and-percent-stacked-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"stacked-percent-barplot-seaborn\"\n            caption=\"Percent stacked barchart with python and seaborn\"\n            linkTo=\"/stacked-and-percent-stacked-barplot\"\n          />\n          <ChartImageContainer\n            imgName=\"552-table-combined-with-plot\"\n            caption=\"Stacked Barplot combined with a table\"\n            linkTo=\"/552-table-combined-with-plot\"\n          />\n        </Row>\n        <div style={{ margin: '0 auto' }}>\n          <Link to=\"/grouped-barplot\">\n            <ChartImage\n              imgName={'grouped-barplot2'}\n              caption={\n                'Grouped barplot with small multiples to show 3 levels of grouping.'\n              }\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Pandas\">\n          <Pandas />\n          Barplot with <code>Pandas</code>\n        </h2>\n        <p>\n          The <code>bar()</code> function of <code>pandas</code> allows to\n          quickly build a barplot. You will find below examples of how to create\n          simple and grouped barcharts using <code>pandas</code>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"538-introduction-to-barplot-with-pandas\"\n            caption=\"Introduction to barplot with pandas\"\n            linkTo=\"/538-introduction-to-barplot-with-pandas\"\n          />\n          <ChartImageContainer\n            imgName=\"539-customizing-barplot-with-pandas\"\n            caption=\"Customizing barplot with pandas\"\n            linkTo=\"/539-customizing-barplot-with-pandas\"\n          />\n          <ChartImageContainer\n            imgName=\"540-barplots-grouped-by-color-with-pandas\"\n            caption=\"Barplots grouped by color with pandas\"\n            linkTo=\"/540-barplots-grouped-by-color-with-pandas\"\n          />\n          <ChartImageContainer\n            imgName=\"547-stacked-barplots-with-pandas-1\"\n            caption=\"Stacked barplot with pandas\"\n            linkTo=\"/547-stacked-barplots-with-pandas\"\n          />\n          <ChartImageContainer\n            imgName=\"547-stacked-barplots-with-pandas-2\"\n            caption=\"Stacked 100% barplot with pandas\"\n            linkTo=\"/547-stacked-barplots-with-pandas\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Plotly\">\n          <Plotly />\n          Barplot with <code>Plotly</code>\n        </h2>\n        <p>\n          The <code>Plotly</code> provides <b>2 ways</b> to build a barplot. The\n          first one is to use the <code>plotly express</code> module for fast\n          and interactive barplots. The second one is to use the{' '}\n          <code>graph objects</code> module for more advanced customization.\n        </p>\n        <p>The examples below explains both methods.</p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"582-simple-barplot-plotly\"\n            caption=\"Interactive Barplot with plotly\"\n            linkTo=\"/582-simple-barplot-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"583-stacked-barplot-plotly\"\n            caption=\"Interactive Stacked Barplot with plotly\"\n            linkTo=\"/583-stacked-barplot-plotly\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Plotnine\">\n          <Plotnine />\n          Barplot with <code>Plotnine</code>\n        </h2>\n        <p>\n          The <a href=\"https://python-graph-gallery.com/plotnine/\">plotnine</a>{' '}\n          library is a great alternative to build barplots. It is based on the{' '}\n          <b>grammar of graphics</b>, like ggplot2 in{' '}\n          <a href=\"https://r-graph-gallery.com/\">R</a>.\n        </p>\n        <p>\n          The examples below should get you started. They go from very simple\n          examples and how to customize them.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"576-introduction-barplot-plotnine-1\"\n            caption=\"Most simple barplot\"\n            linkTo=\"/576-introduction-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"576-introduction-barplot-plotnine-2\"\n            caption=\"Change color and edge color\"\n            linkTo=\"/576-introduction-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"576-introduction-barplot-plotnine-3\"\n            caption=\"Custom width of the bars\"\n            linkTo=\"/576-introduction-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"577-customize-barplot-plotnine-1\"\n            caption=\"Define one specific color per bar\"\n            linkTo=\"/577-customize-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"577-customize-barplot-plotnine-2\"\n            caption=\"Color bars according to a variable\"\n            linkTo=\"/577-customize-barplot-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"577-customize-barplot-plotnine-3\"\n            caption=\"Flip the x and y axis\"\n            linkTo=\"/577-customize-barplot-plotnine\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Best\">\n          <Matplotlib />\n          Best python barplot examples\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://python-graph-gallery.com\">Python graph gallery</a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works. If you want to display your work\n          here, please drop me a word or even better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Link to={'/web-circular-barplot-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-circular-barplot-with-matplotlib-square'}\n                caption={\n                  'A circular barchart with several features per group made with Python and Matplotlib.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/web-horizontal-barplot-with-labels-the-economist'}>\n              <ChartImage\n                imgName={\n                  'web-horizontal-barplot-with-labels-the-economist-square'\n                }\n                caption={\n                  'Lear how to mimick the style of the Economist on this horizontal barplot.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/web-heatmap-and-radial-barchart-plastics'}>\n              <ChartImage\n                imgName={'web-heatmap-and-radial-barchart-plastics-square2'}\n                caption={\n                  'How to combine a heatmap with a radial barplot on the same figure with heaps of visual tweaks.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/web-ordered-mirror-barplot'}>\n              <ChartImage\n                imgName={'web-ordered-mirror-barplot'}\n                caption={\n                  'Mirror barplot with data points and annotations on top.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/web-barplot-with-annotations-and-arrows'}>\n              <ChartImage\n                imgName={'web-barplot-with-annotations-and-arrows-square'}\n                caption={\n                  'Barplot with annotations and arrows to highlight specific bars.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/web-tornado-chart'}>\n              <ChartImage\n                imgName={'web-tornado-chart'}\n                caption={'Tornado with custom title and colors'}\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"ranking\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","href","quickCode","Head","Barplot","Layout","isTocEnabled","TitleAndDescription","description","chartType","Container","id","Row","CodeChunk","Spacing","Matplotlib","Seaborn","style","margin","Pandas","Plotly","Plotnine","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}