{"version":3,"file":"component---src-pages-pyfonts-js-b1d8b4f413efc3ce3038.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/pyfonts.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport ChartImage from '../components/ChartImage';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription = (\n  <>\n    <p>\n      <a href=\"https://github.com/JosephBARBIERDARNAL/pyfonts\">PyFonts</a> is a\n      library that allows to load easily any font from the web and use it in\n      your matplotlib charts.\n    </p>\n    <p>\n      It was created by <a href=\"https://barbierjoseph.com/\">Joseph Barbier</a>{' '}\n      in order to <b>simplify</b> the process to loading fonts in matplotlib and{' '}\n      <b>remove</b> the need to install them on your computer.\n    </p>\n  </>\n);\n\nexport const Head = () => (\n  <SEO\n    title=\"PyFonts\"\n    seoDescription=\"An overview of the PyFonts library in Python\"\n  />\n);\n\nexport default function Post() {\n  return (\n    <Layout title=\"PyFonts\">\n      <TitleAndDescription\n        title=\"PyFonts: a simple way to load fonts for matplotlib\"\n        description={chartDescription}\n        chartType={'pyfonts'}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <p>\n          Before using pyfonts you need to <b>install</b> it. This can easily be\n          done with <code>pip</code>:\n        </p>\n        <br />\n        <CodeChunk>{codeInstall}</CodeChunk>\n        <br />\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              pyfonts provides <b>1 simple function</b>:<code>load_font()</code>\n              : load a font from the web (Github) and return a matplotlib font\n              object.\n            </p>\n          </Col>\n          <Col md={6}>\n            <ChartImage\n              imgName=\"quickstart-pyfonts\"\n              caption=\"Basic use case of pyfonts\"\n            />\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>1- How to find fonts</h2>\n\n        <p>\n          There are many fonts available on the web. The{' '}\n          <strong>easiest way</strong> to find one is to follow these steps:\n        </p>\n\n        <ul>\n          <li>\n            Browse <a href=\"https://fonts.google.com/\">Google Font website</a>{' '}\n            to find a font that you like. Let's say you want to use{' '}\n            <a href=\"https://fonts.google.com/specimen/Amaranth?query=amaranth\">\n              Amaranth\n            </a>\n            .\n          </li>\n          <li>\n            Go to the{' '}\n            <a href=\"https://github.com/google/fonts/tree/main/ofl\">\n              Google font GitHub repository\n            </a>{' '}\n            and type the name of your desired font in the search bar. We find\n            that <i>Amaranth font file</i> in <strong>Bold</strong> is named{' '}\n            <code>\n              https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf\n            </code>\n            .\n          </li>\n          <li>\n            Copy the URL and add <code>?raw=true</code> at the end, which gives\n            us{' '}\n            <code>\n              https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true\n            </code>\n            .\n          </li>\n        </ul>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>2 - Load a font in matplotlib</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              Use <code>load_font()</code> by passing the font's URL.\n            </p>\n            <p>\n              Then, provide the <b>output</b> of <code>load_font()</code>{' '}\n              directly to any <a href=\"/matplotlib\">matplotlib</a> function that\n              accepts a font, such as <code>ax.text()</code>.\n            </p>\n          </Col>\n          <Col md={6}>\n            <ChartImage\n              imgName=\"usecase-pyfonts-1-square\"\n              caption=\"how to load a font with pyfonts\"\n            />\n          </Col>\n          <CodeChunk>{useFontCode}</CodeChunk>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Different weight and style</h2>\n        <Row className=\"align-items-center\">\n          <Col md={7}>\n            <p>\n              When you load a font, <b>you don't load all its extensions</b>:\n              bold, italic, thin etc, but only the one from the url. If you want\n              to be able to use a font and its <b>bold</b> version, for example,\n              you need to load both fonts:\n            </p>\n          </Col>\n          <Col md={5}>\n            <ChartImage\n              imgName=\"usecase-pyfonts-2-square\"\n              caption=\"Combine a normal font and a bold font with pyfonts\"\n            />\n          </Col>\n        </Row>\n        <CodeChunk>{useFontCode2}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Locally stored font</h2>\n        <Row className=\"align-items-center\">\n          <Col md={7}>\n            <p>\n              <code>PyFonts</code> also allows you to load a font file that you\n              have on your own computer. You just have to call the{' '}\n              <code>font_path</code> argument instead and give it the path to\n              your font\n            </p>\n          </Col>\n          <Col md={5}>\n            <ChartImage\n              imgName=\"usecase-pyfonts-3-square\"\n              caption=\"Load a locally stored font with pyfonts\"\n            />\n          </Col>\n        </Row>\n        <CodeChunk>{useFontCode3}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Gallery of examples</h2>\n        <p>\n          Here are some examples of what you can do with <code>PyFonts</code>.\n          Click on the images to see the code.\n        </p>\n        <Row>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-waffle-chart-for-time-series\">\n              <ChartImage\n                imgName={'web-waffle-chart-for-time-series-square'}\n                caption={'Waffle chart with nice theme and fonts'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-lollipop-with-colormap-and-arrow\">\n              <ChartImage\n                imgName={'web-lollipop-with-colormap-and-arrow-square'}\n                caption={'Lollipop chart with arrows'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-area-chart-with-different-colors-for-positive-and-negative-values\">\n              <ChartImage\n                imgName={\n                  'web-area-chart-with-different-colors-for-positive-and-negative-values-square'\n                }\n                caption={'Minimalist style area chart'}\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2>Going further</h2>\n        <p>\n          You might be interested in\n          <ul>\n            <li>\n              The{' '}\n              <a href=\"https://github.com/JosephBARBIERDARNAL/pyfonts\">\n                {' '}\n                official github repo of pyfonts\n              </a>{' '}\n              (⭐ give it a star!)\n            </li>\n            <li>\n              Learn more on{' '}\n              <a href=\"custom-fonts-in-matplotlib\">\n                how matplotlib handle fonts\n              </a>\n            </li>\n            <li>\n              How to <a href=\"/drawarrow\">draw arrows in matplotlib</a>\n            </li>\n            <li>\n              How to create{' '}\n              <a href=\"/advanced-custom-annotations-matplotlib\">\n                beautiful annotation in matplotlib\n              </a>\n            </li>\n          </ul>\n        </p>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n\nconst quickCode = `# Load pyfonts and matplotlib\nimport matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\n# load font from Github\nfont = load_font(\n   font_url=\"https://github.com/google/fonts/blob/main/apache/ultra/Ultra-Regular.ttf?raw=true\"\n)\n\n# Create a plot with an annotation that uses the loaded font\nfig, ax = plt.subplots(figsize=(10, 6), dpi=300)\nax.text(\n   x=0.5,\n   y=0.5,\n   s=f\"What an easy way to load fonts, isn't it?\",\n   font=font,\n   fontsize=20,\n   ha=\"center\",\n)\nplt.show()\n`;\n\nconst useFontCode = `import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\n  font_url=\"https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true\"\n)\n\nfig, ax = plt.subplots(figsize=(10, 10), dpi=300)\nax.text(\n    x=0.5,\n    y=0.5,\n    s=f\"Amaranth font\\\\nwith PyFonts!!!\",\n    font=font,\n    fontsize=50,\n    ha=\"center\",\n)\nplt.show()\n`;\n\nconst useFontCode2 = `import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\n   font_url=\"https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Regular.ttf?raw=true\"\n)\nbold_font = load_font(\n   font_url=\"https://github.com/google/fonts/blob/main/ofl/amaranth/Amaranth-Bold.ttf?raw=true\"\n)\n\nfig, ax = plt.subplots(figsize=(6, 6), dpi=300)\nax.text(\n   x=0.5,\n   y=0.5,\n   s=f\"Congrats, you now have a cool font!\",\n   font=font,\n   fontsize=20,\n   ha=\"center\",\n)\nax.text(x=0.5, y=0.3, s=f\"And now it's bold\", font=bold_font, fontsize=25, ha=\"center\")\nplt.show()\n`;\n\nconst useFontCode3 = `import matplotlib.pyplot as plt\nfrom pyfonts import load_font\n\nfont = load_font(\n   font_path=\"path/to/myfont/Ultra-Regular.ttf\"\n)\n\nfig, ax = plt.subplots(figsize=(6, 6), dpi=300)\nax.text(\n   x=0.5,\n   y=0.5,\n   s=f\"Yet another way to load font\",\n   font=font,\n   fontsize=18,\n   ha=\"center\",\n)\nplt.show()\n`;\n\nconst codeInstall = `pip install pyfonts`;\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","href","Head","Post","Layout","TitleAndDescription","description","chartType","Container","id","CodeChunk","codeInstall","Row","Col","md","quickCode","Spacing","useFontCode","useFontCode2","useFontCode3","xs","Link","to","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}