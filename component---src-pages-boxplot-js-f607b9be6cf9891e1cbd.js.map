{"version":3,"file":"component---src-pages-boxplot-js-f607b9be6cf9891e1cbd.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/boxplot.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib, Seaborn } from '../components/MiscellaneousLogos';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription = (\n  <>\n    <p>\n      A <a href=\"https://www.data-to-viz.com/caveat/boxplot.html\">boxplot</a>{' '}\n      summarizes the <b>distribution</b> of a numeric variable for one or\n      several groups. It allows to quickly get the <b>median</b>,{' '}\n      <b>quartiles</b> and <b>outliers</b> but also hides the dataset individual\n      data points.\n    </p>\n    <p>\n      In python, boxplots can be made with both{' '}\n      <Link href=\"/seaborn\">seaborn</Link> and{' '}\n      <Link href=\"/matplotlib\">matplotlib</Link> as they both offer a{' '}\n      <code>boxplot()</code> function made for the job.\n    </p>\n  </>\n);\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\nsns.boxplot( x=df[\"species\"], y=df[\"sepal_length\"] )\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Python Boxplot Gallery | Dozens of examples with code\"\n    seoDescription=\"A collection of boxplot examples made with Python, coming with explanation and reproducible code\"\n    isRaptiveEnabled={false}\n  />\n);\n\nexport default function Boxplot() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription title=\"Boxplot\" description={chartDescription} />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <code>Seaborn</code> is definitely the best library to quickly\n              build a boxplot. It offers a dedicated <code>boxplot()</code>{' '}\n              function that roughly works as follows:🔥\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/30-basic-boxplot-with-seaborn'}>\n              <ChartImage\n                imgName=\"30_Basic_Box_seaborn2\"\n                caption=\"Basic boxplot with Python and Seaborn from various data input formats.\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Warning\">&#9888;&#65039; Mind the boxplot</h2>\n          <p>\n            A boxplot is an awesome way to summarize the distribution of a\n            variable. However it hides the real distribution and the sample\n            size. Check the 3 charts below that are based on the exact same\n            dataset.\n          </p>\n          <p>\n            To read more about this, visit{' '}\n            <a href=\"https://www.data-to-viz.com/caveat/boxplot.html\">\n              data-to-viz.com\n            </a>{' '}\n            that has a dedicated article.\n          </p>\n          <Row>\n            <ChartImageContainer\n              imgName=\"39_Bad_boxplot1\"\n              caption=\"Basic boxplot. You can quickly read the median, quartiles and outliers of each group.\"\n              linkTo=\"/39-hidden-data-under-boxplot\"\n            />\n            <ChartImageContainer\n              imgName=\"39_Bad_boxplot2\"\n              caption=\"If you add individual points with jitter, a bimodal distribution appears for group B\"\n              linkTo=\"/39-hidden-data-under-boxplot\"\n            />\n            <ChartImageContainer\n              imgName=\"39_Bad_boxplot3\"\n              caption=\"If you have a very large dataset, the violin plot is a better alternative than jittering\"\n              linkTo=\"/39-hidden-data-under-boxplot\"\n            />\n          </Row>\n          <Link to=\"/39-hidden-data-under-boxplot\">\n            <Button size=\"sm\">Code and more</Button>\n          </Link>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Boxplots with <code>Seaborn</code>\n        </h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. The <code>boxplot</code> function should get you\n          started in minutes. The examples below aim at showcasing the various\n          possibilities this function offers.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"30_Basic_Box_seaborn2\"\n            caption=\"Let's start basic. The most simple boxplot, based on 3 differents input formats\"\n            linkTo=\"/30-basic-boxplot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"33_Custom_Boxplot_color_Seaborn5\"\n            caption=\"Everything you need concerning color customization on your boxplot: transparency, palette in use, manual control..\"\n            linkTo=\"/33-control-colors-of-boxplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"33_Custom_Boxplot_color_Seaborn4\"\n            caption=\"Learn how to highlight a specific group in the dataset to make your point more obvious\"\n            linkTo=\"/33-control-colors-of-boxplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"34_Grouped_Boxplot_Seaborn\"\n            caption=\"If you have group and subgroups, you can build a grouped boxplot\"\n            linkTo=\"/34-grouped-boxplot\"\n          />\n          <ChartImageContainer\n            imgName=\"35_Specific_order_Boxplot_Seaborn1\"\n            caption=\"Control the order of groups in the boxplot. It makes the chart more insightful\"\n            linkTo=\"/35-control-order-of-boxplot\"\n          />\n          <ChartImageContainer\n            imgName=\"36_Boxplot_with_Jitter_Seaborn\"\n            caption=\"To avoid hiding information, you can add individual data points with jitter\"\n            linkTo=\"/36-add-jitter-over-boxplot-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"38_Number_of_obs_on_boxplot_seaborn\"\n            caption=\"Since individual data points are hidden, it is a good practice to show the sample size under each box\"\n            linkTo=\"/38-show-number-of-observation-on-boxplot\"\n          />\n          <ChartImageContainer\n            imgName=\"32_Custom_Boxplot_Appearance_Seaborn1-1\"\n            caption=\"Customization: border width\"\n            linkTo=\"/32-custom-boxplot-appearance-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"32_Custom_Boxplot_Appearance_Seaborn2\"\n            caption=\"Customization: use notch\"\n            linkTo=\"/32-custom-boxplot-appearance-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"32_Custom_Boxplot_Appearance_Seaborn3\"\n            caption=\"Customization: box width\"\n            linkTo=\"/32-custom-boxplot-appearance-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"54_Grouped_violinplot_Seaborn\"\n            caption=\"If you have both groups and subgroups, you'll be interested in a grouped violin plot\"\n            linkTo=\"/54-grouped-violinplot\"\n          />\n          <ChartImageContainer\n            imgName=\"31-horizontal-boxplot-with-seaborn\"\n            caption=\"Horizontal boxplot with seaborn\"\n            linkTo=\"/31-horizontal-boxplot-with-seaborn\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"matplotlib\">\n          <Matplotlib />\n          Boxplots with <code>Matplotlib</code>\n        </h2>\n        <p>\n          <Link href=\"/matplotlib\">Matplotlib</Link> also has a{' '}\n          <code>boxplot()</code> function made to build boxplots.\n        </p>\n        <p>\n          The following tutorials will guide you from its basic usage to the\n          finest customization:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"533-introduction-boxplots-matplotlib\"\n            caption=\"Simple boxplot with matplotlib\"\n            linkTo=\"/533-introduction-boxplots-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"542-custom-boxplots-matplotlib\"\n            caption=\"Flipped, notched and customized boxplot\"\n            linkTo=\"/542-custom-boxplots-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"543-grouped-boxplots-matplotlib\"\n            caption=\"Grouped boxplot\"\n            linkTo=\"/543-grouped-boxplots-matplotlib\"\n          />{' '}\n          <ChartImageContainer\n            imgName=\"509-introduction-to-swarm-plot-in-matplotlib-3\"\n            caption=\"Beeswarm and boxplot combination\"\n            linkTo=\"/509-introduction-to-swarm-plot-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"557-anova-visualization-with-matplotlib-1\"\n            caption=\"Boxplot and ANOVA results on top\"\n            linkTo=\"/557-anova-visualization-with-matplotlib\"\n          />{' '}\n          <ChartImageContainer\n            imgName=\"534-highly-customized-layout\"\n            caption=\"Subplot, title, and margin customization\"\n            linkTo=\"/534-highly-customized-layout\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-4\"\n            caption=\"Add patterns to your boxplot\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      {/* <div className=\"greySection\">\n        <Container>\n          <FunctionExploration functionName={'violin'} />\n        </Container>\n      </div> */}\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Best\">\n          <Matplotlib />\n          Best python boxplot examples\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://python-graph-gallery.com\">Python graph gallery</a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works. If you want to display your work\n          here, please drop me a word or even better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Link to={'/web-ggbetweenstats-with-matplotlib'}>\n              <ChartImage\n                imgName={'web-ggbetweenstats-with-matplotlib-square'}\n                caption={\n                  'A combination of a violin plot and a boxplot. Allows the comparison of several groups with statistical test results on top.'\n                }\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={6}>\n            <Link to={'/raincloud-plot-with-matplotlib-and-ptitprince'}>\n              <ChartImage\n                imgName={'raincloud-plot-with-matplotlib-and-ptitprince'}\n                caption={\n                  'Combining boxplot and density chart. A great way to display the distribution of a variable for several groups.'\n                }\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","href","quickCode","Head","isRaptiveEnabled","Boxplot","Layout","isTocEnabled","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","Button","size","Seaborn","Matplotlib","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}