{"version":3,"file":"component---src-pages-plotly-js-aa94963a8632d4578d79.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/plotly.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Plotly } from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport { Button } from 'react-bootstrap';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription = (\n  <>\n    <p>\n      <code>Plotly</code> is a library for making <b>interactive</b> graphs with\n      python. On a plotly chart it is possible to have <b>tooltips</b> for\n      interesting markers, <b>zoom</b> on interesting location, <b>save</b> the\n      chart as png and more 🔥.\n    </p>\n    <p>\n      Plotly is based on the famous{' '}\n      <a href=\"https://www.d3-graph-gallery.com\">d3.js</a> javascript library,\n      and provides a python wrapper allowing to build stunning interactive\n      charts directly from <code>Python</code>.\n    </p>\n    <p>\n      Most of the gallery sections provide <code>plotly</code> examples. This\n      post provides a few <b>general tips</b> relative to this mind blowing\n      library.\n    </p>\n  </>\n);\n\nexport const Head = () => (\n  <SEO\n    title=\"Plotly\"\n    seoDescription=\"An overview of the plotly python library for interactive data visualization\"\n  />\n);\n\nexport default function Plotlys() {\n  return (\n    <Layout title=\"Plotly\">\n      <TitleAndDescription\n        title=\"Interactive charts with Plotly\"\n        description={chartDescription}\n        chartType={'plotly'}\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <p>\n          Before using plotly you need to install it. This can easily be done\n          with <code>pip</code>:\n        </p>\n        <CodeChunk>{codeInstall}</CodeChunk>\n        <br />\n        <p>\n          Now, try to use the following code in a Jupyter Notebook. You will get\n          an interactive graph on which you can <b>zoom</b>, hover points to\n          show a <b>tooltip</b>, <b>save as png</b> and more.\n        </p>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <iframe\n          src=\"/interactiveCharts/plotly-add-annotation-0.html\"\n          title=\"scatterplot with plotly\"\n          style={{ border: 'none', width: '100%', height: '600px' }}\n        ></iframe>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"APIs\">\n          <code>{'</>'}</code> Two distinct APIs\n        </h2>\n        <p>\n          There are 2 main ways to use the <code>plotly</code> python library:{' '}\n          <b>plotly express</b> and <b>plotly graph objects</b>.\n        </p>\n        <h3>1️⃣ Quick chart with plotly express 🏃🏿‍♀️</h3>\n        <p>\n          This is the user-friendly, <b>high-level API</b>, that taps into\n          Plotly's graphical capabilities to facilitate the swift creation\n          graphs. Its streamlined approach empowers users to generate a variety\n          of chart types with <b>minimal code</b>.\n        </p>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              This abstraction shields users from intricate technical details,\n              making it an ideal choice for those seeking an <b>efficient</b>{' '}\n              visualization solution.\n            </p>\n            <p>\n              In the following code, <b>just 2 lines of code</b> are needed to\n              create an interactive bar chart, using the function{' '}\n              <code>px.bar()</code>.\n            </p>\n          </Col>\n          <Col md={6}>\n            <div className=\"mx-auto\">\n              <iframe\n                src=\"/interactiveCharts/barplot-plotly-express.html\"\n                title=\"barplot with plotly\"\n                style={{ border: 'none', width: '100%', height: '400px' }}\n              ></iframe>\n            </div>\n          </Col>\n        </Row>\n        <CodeChunk>{plotlyExpressCode}</CodeChunk>\n        <br />\n        <h3>2️⃣ Fine control with Plotly Graph Objects 🎨</h3>\n        <p>\n          In contrast, the Plotly Graph Objects API presents a{' '}\n          <b>finer level of control</b> and customization within the Plotly\n          framework.\n        </p>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <b>A bit more code</b> is required to build the same chart\n              compared to plotly express. But we believe that this API is still\n              very straightforward to use and offers more flexibility.\n            </p>\n          </Col>\n          <Col md={6}>\n            <div className=\"mx-auto\">\n              <iframe\n                src=\"/interactiveCharts/barplot-plotly-go.html\"\n                title=\"barplot with plotly\"\n                style={{ border: 'none', width: '100%', height: '400px' }}\n              ></iframe>\n            </div>\n          </Col>\n        </Row>\n\n        <p>\n          Compared to the Express API, we need to initiate a figure object (with\n          a slightly more complex syntax) using the function{' '}\n          <code>go.Figure</code> and then change the layout of this figure using\n          the function <code>fig.update_layout()</code>.\n        </p>\n        <CodeChunk>{plotlyGoCode}</CodeChunk>\n        <br />\n        <br />\n        <p>\n          Interested in knowing more? You can check the{' '}\n          <Link href=\"/520-the-two-plotly-apis\">full post</Link> on the topic!\n        </p>\n        <Link href=\"/520-the-two-plotly-apis\">\n          <Button>Plotly APIs post</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Save\">Saving a plotly chart</h2>\n        <p>\n          Once you've created a <code>plotly</code> chart you probably want to\n          save it as a standalone <code>html</code> file in order to share it or\n          embed it in another webpage.\n        </p>\n        <p>\n          This is the code allowing to save a <code>plotly</code> chart. You can\n          read the full process{' '}\n          <Link to=\"/parallel-coordinate-plot-plotly\">here</Link> for instance.\n        </p>\n        <CodeChunk>{saveCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Embed\">Embeding a plotly chart</h2>\n        <p>\n          Once the chart has been saved, you can embed it in a html document\n          using:\n        </p>\n        <CodeChunk>{embedCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Embed\">Title customization</h2>\n        <p>\n          The <code>fig.update_layout()</code> function provides everything you\n          need to customize the <b>title</b> of your chart.\n        </p>\n        <p>\n          Read the plotly{' '}\n          <Link href=\"/522-plotly-customize-title\">title tutorial</Link> to\n          understand how the change the <b>font</b>, <b>color</b>, <b>size</b>{' '}\n          and <b>alignment</b> of your title.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"522-plotly-customize-title\"\n            caption=\"How to customize the title of a plotly chart\"\n            linkTo=\"/522-plotly-customize-title\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Annotation\">Annotation</h2>\n        <p>\n          <b>Annotation</b> is a key part of a great data visualization.\n        </p>\n        <p>\n          Fortunately, plotly provides a <code>add_annotation()</code> function\n          allowing to add some powerful, custom annotation on charts.\n        </p>\n        <p>\n          Please read the dedicated{' '}\n          <Link href=\"/523-plotly-add-annotation\">annotation tutorial</Link> to\n          learn how to use it.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"523-plotly-add-annotation\"\n            caption=\"Add an arrow with text to annotate a scatterplot\"\n            linkTo=\"/523-plotly-add-annotation\"\n          />\n          <ChartImageContainer\n            imgName=\"523-plotly-add-annotation-2\"\n            caption=\"Learn how to add a line, a square, emojis, links and more\"\n            linkTo=\"/523-plotly-add-annotation\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Gallery\">\n          <Plotly />\n          Plotly graph gallery\n        </h2>\n        <p>Here is a glimpse of the plotly charts showcased in the gallery:</p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"511-interactive-scatterplot-with-plotly-1\"\n            caption=\"Most basic scatterplot with plotly\"\n            linkTo=\"/511-interactive-scatterplot-with-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"511-interactive-scatterplot-with-plotly-2\"\n            caption=\"Plotly scatterplot with several levels of grouping\"\n            linkTo=\"/511-interactive-scatterplot-with-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"511-interactive-scatterplot-with-plotly-3\"\n            caption=\"Plotly scatterplot with a trend line\"\n            linkTo=\"/511-interactive-scatterplot-with-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"514-interactive-line-chart-plotly-1\"\n            caption=\"Basic interactive line chart with plotly\"\n            linkTo=\"/514-interactive-line-chart-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"514-interactive-line-chart-plotly-2\"\n            caption=\"How to customize the appearance of a plotly line chart\"\n            linkTo=\"/514-interactive-line-chart-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"514-interactive-line-chart-plotly-3\"\n            caption=\"Interactive line chart with multiple groups\"\n            linkTo=\"/514-interactive-line-chart-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"parallel-coordinate-plot-plotly\"\n            caption=\"Interactive parallel chart with plotly\"\n            linkTo=\"/parallel-coordinate-plot-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"ridgeline-graph-plotly\"\n            caption=\"Interactive ridgeline chart with plotly\"\n            linkTo=\"/ridgeline-graph-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"sankey-diagram-with-python-and-plotly\"\n            caption=\"Interactive Sankey diagram with plotly\"\n            linkTo=\"/sankey-diagram-with-python-and-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"582-simple-barplot-plotly\"\n            caption=\"Interactive Barplot with plotly\"\n            linkTo=\"/582-simple-barplot-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"583-stacked-barplot-plotly\"\n            caption=\"Interactive Stacked Barplot with plotly\"\n            linkTo=\"/583-stacked-barplot-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"524-area-over-flexible-baseline_square\"\n            caption=\"Plotly line chart with many customization\"\n            linkTo=\"/524-area-chart-over-flexible-baseline\"\n          />\n          <ChartImageContainer\n            imgName=\"553-intro-candle-stick-plotly\"\n            caption=\"How to make a candlestick chart with Plotly\"\n            linkTo=\"/553-intro-candle-stick-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"554-custom-candle-stick-plotly\"\n            caption=\"How to customize a candlestick chart with Plotly\"\n            linkTo=\"/554-custom-candle-stick-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"555-candle-stick-with-moving-average-plotly\"\n            caption=\"How to add one or several moving averages to a candlestick chart\"\n            linkTo=\"/555-candle-stick-with-moving-average-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"571-radar-chart-with-plotly-1\"\n            caption=\"Most basic radar chart with plotly\"\n            linkTo=\"/571-radar-chart-with-plotly\"\n          />\n          <ChartImageContainer\n            imgName=\"571-radar-chart-with-plotly-2\"\n            caption=\"Radar chart with several displayed values\"\n            linkTo=\"/571-radar-chart-with-plotly\"\n          />\n        </Row>\n        <br />\n        <p>\n          Above images are <b>static</b>, but all linked blog posts provide the\n          interactive version of the chart. Here is an example with an\n          interactive{' '}\n          <Link href=\"/parallel-coordinate-plot-plotly\">\n            parallel coordinate chart\n          </Link>\n          :\n        </p>\n        <div className=\"mx-auto\">\n          <iframe\n            src=\"/interactiveCharts/parallel-coordinate-plot-plotly.html\"\n            title=\"parallel coordinate chart with plotly\"\n            style={{ border: 'none', width: '800px', height: '500px' }}\n          ></iframe>\n        </div>\n        <Link to=\"/parallel-coordinate-plot-plotly\">\n          <Button size=\"sm\">See code</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Spacing />\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n\nconst quickCode = `# Load plotly\nimport plotly.graph_objects as go\n\n# Sample data\nx = [1.5, 2.9, 3, 4.2, 5.6]\ny = [2.2, 13.3, 4.4, 55.3, 52.1]\n\n# Initialize a figure\nfig = go.Figure()\n\n# Add the scatter trace\nfig.add_trace(go.Scatter(\n    x=x, # Variable in the x-axis\n    y=y, # Variable in the y-axis\n    mode='markers', # This explicitly states that we want our observations to be represented by points\n))\n\n# Show\nfig.show()\n`;\n\nconst codeInstall = `pip install plotly`;\n\nconst saveCode = `fig.write_html(\"the/path/to/chart-name.html\")`;\nconst embedCode = `<iframe\n  src=\"the/path/to/chart-name.html\"\n  width=\"800\"\n  height=\"600\"\n  title=\"chart name\"\n  style=\"border:none\">\n</iframe>`;\n\nconst plotlyExpressCode = `# import the plotly express library\nimport plotly.express as px\n\n# Some dummy data\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [15, 22, 18, 12, 28]\n\n# Plot\nfig = px.bar(\n  x=categories,\n  y=values,\n)\n\nfig.show()\n`;\n\nconst plotlyGoCode = `# import the plotly graph objects lib\nimport plotly.graph_objects as go\n\n# Some dummy data\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [15, 22, 18, 12, 28]\n\n# Create a bar chart using the Graph Object API\nfig = go.Figure(data=[go.Bar(x=categories, y=values)])\n\n# Update layout\nfig.update_layout(\n  title=\"Simple Bar Chart\",\n  xaxis_title=\"Categories\",\n  yaxis_title=\"Values\")\n\n\nfig.show()\n`;\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","href","Head","Plotlys","Layout","TitleAndDescription","description","chartType","Container","id","CodeChunk","codeInstall","quickCode","src","style","border","width","height","Spacing","Row","plotlyExpressCode","plotlyGoCode","Button","saveCode","embedCode","Plotly","size","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}