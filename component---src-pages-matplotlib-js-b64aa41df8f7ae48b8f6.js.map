{"version":3,"file":"component---src-pages-matplotlib-js-b64aa41df8f7ae48b8f6.js","mappings":"4MAOA,MAAMA,EAAU,CACd,iBACA,yBACA,wBAKa,SAASC,EAAUC,GAAwB,IAAvB,QAAEC,EAAO,QAAEC,GAASF,EACrD,GAAIF,EAAQK,SAASF,GACnB,OAAOG,EAAAA,cAAA,SAAG,QAGZ,MAgBMC,GAhBOC,EAAAA,EAAAA,gBAAe,cAgBTC,QAAQC,MAAMC,MAAMC,GAC9BA,EAAEC,KAAKC,KAAKT,SAASF,KAG9B,OAAKI,EAMHD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKS,UAAU,uBACbT,EAAAA,cAACU,EAAAA,EAAW,CACVT,MAAOA,EAAMM,KAAKI,gBAAgBC,gBAClCC,IAAKf,EACLW,UAAU,kBAEXX,GACCE,EAAAA,cAAA,OAAKS,UAAU,qBACbT,EAAAA,cAAA,OAAKS,UAAU,yBACbT,EAAAA,cAAA,SAAIF,OAfP,IAsBX,C,mGCzDe,SAASgB,EAAmBlB,GAAgC,IAA/B,QAAEC,EAAO,QAAEC,EAAO,OAAEiB,GAAQnB,EACtE,OACEI,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAIL,GACRf,EAAAA,cAACL,EAAAA,EAAU,CAACE,QAASA,EAASC,QAASA,KAI/C,C,iICNA,MAAMuB,EAAcC,GACD,iBAANA,EAAuB,GAC3BA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,GAG9B,SAASC,EAAmB9B,GAAkB,IAAD+B,EAAA,IAAhB,WAAEC,GAAYhC,EACxD,MAAM,EAACiC,EAAkB,EAACC,IAAwBC,EAAAA,EAAAA,UAAS,IACrD,EAACC,EAAY,EAACC,IAAkBF,EAAAA,EAAAA,UAAS,GAE/C,IAAKH,EACH,OAAO,KAGT,MAAMM,EAAwBN,EAAWO,WAAWN,GAC9CO,EAA+C,QAAhCT,EAAGO,EAAsBG,eAAO,IAAAV,OAAA,EAA7BA,EAAgCK,GAElDM,EACJtC,EAAAA,cAAA,WACG4B,EAAWO,WAAWI,KAAI,CAACC,EAAMC,IAChCzC,EAAAA,cAAC0C,EAAAA,EAAM,CACLC,IAAKF,EACLG,MAAOJ,EAAKhC,KACZqC,KAAK,KACLC,QAASA,IAAMhB,EAAqBW,GACpChC,UAAWoB,IAAsBY,EAAI,mBAAqB,IAEzDD,EAAKhC,SAMd,OACER,EAAAA,cAAA,OAAK+C,MAAO,CAAEC,aAAc,KAC1BhD,EAAAA,cAAA,MAAIiD,GAAI5B,EAAWO,EAAWpB,KAAXoB,eAAsC,MAC7C5B,EAAAA,cAAA,YAAO4B,EAAWpB,MAAY,uBACxCR,EAAAA,cAAA,KACE+C,MAAO,CAAEG,WAAY,OAAQC,SAAU,QACvCC,KAAMxB,EAAWyB,QAClB,mBAKHrD,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,SAAI4B,EAAW0B,aAEftD,EAAAA,cAAA,OACE+C,MAAO,CACLQ,QAAS,OACTC,cAAe,MACfC,eAAgB,QAChBC,WAAY,WACZC,IAAK,KAGP3D,EAAAA,cAAA,MAAI+C,MAAO,CAAEa,MAAO,OAAQC,SAAU,SAAUC,WAAY,WAAY,eAGvExB,GAGHtC,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACgB,EAAAA,EAAG,CAACE,GAAI,GACPlB,EAAAA,cAAA,OAAK+C,MAAO,CAAEI,SAAU,KACtBnD,EAAAA,cAAA,KAAGS,UAAU,wBAAuB,eACpCT,EAAAA,cAAA,KAAGS,UAAU,eAAeyB,EAAsBoB,aAElDtD,EAAAA,cAAA,KAAGS,UAAU,wBAAuB,qBACV,KACxBT,EAAAA,cAAA,QAAMS,UAAU,qBACbyB,EAAsB8B,OAG3BhE,EAAAA,cAAA,KAAGS,UAAU,eAAeyB,EAAsB+B,UACjD/B,EAAsBG,SACrBrC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OACE+C,MAAO,CAAEQ,QAAS,OAAQI,IAAK,EAAGD,WAAY,aAE7CxB,EAAsBG,QAAQE,KAAI,CAAC2B,EAAKzB,IAErCzC,EAAAA,cAAC0C,EAAAA,EAAM,CACLG,KAAK,KACLpC,UAAWgC,IAAMT,EAAc,mBAAqB,GACpDc,QAASA,IAAMb,EAAeQ,IAE7ByB,EAAI1D,SAKbR,EAAAA,cAAA,SAAIkC,EAAsBG,QAAQL,GAAamC,cAInDnE,EAAAA,cAAA,KAAGS,UAAU,wBAAuB,gBACpCT,EAAAA,cAAA,OAAK+C,MAAO,CAAEqB,gBAAiB,UAC7BpE,EAAAA,cAACqE,EAAAA,EAAS,CAACC,oBAAkB,GAC1BpC,EAAsBG,QACnBH,EAAsBqC,WAAWC,QAC/B,gBACAtC,EAAsBG,QAAQL,GAAaxB,MAE7C0B,EAAsBqC,eAMlCvE,EAAAA,cAACgB,EAAAA,EAAG,CAACE,GAAI,GACPlB,EAAAA,cAAA,WACAA,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAI,IAAMc,EAAsBuC,MACpCzE,EAAAA,cAACL,EAAAA,EAAU,CACTE,SAASuC,aAAe,EAAfA,EAAiBsC,MAAOxC,EAAsBwC,IACvD5E,QAAS,kBAAoB8B,EAAWpB,KAAO,kBAO7D,C,oECxHO,MAAMmE,EAAM/E,IAAiD,IAAhD,MAAEgF,EAAK,eAAEC,EAAc,SAAEC,EAAQ,MAAE7E,GAAOL,EAC5D,OACEI,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ4E,GACR5E,EAAAA,cAAA,QAAM+E,KAAK,OACX/E,EAAAA,cAAA,QACEQ,KAAK,cACLwE,QAASH,GAAkB,qCAE7B7E,EAAAA,cAAA,QAAMQ,KAAK,SAASwE,QAAQ,cAC5BhF,EAAAA,cAAA,QACEQ,KAAK,WACLwE,QAASF,GAAY,6CAGvB9E,EAAAA,cAAA,QAAMiF,SAAS,eAAeD,QAAQ,6BACtChF,EAAAA,cAAA,QAAMiF,SAAS,WAAWD,QAASJ,IACnC5E,EAAAA,cAAA,QACEiF,SAAS,WACTD,QACE/E,GACA,oGAGJD,EAAAA,cAAA,QAAMiF,SAAS,iBAAiBD,QAASH,IACzC7E,EAAAA,cAAA,QAAMQ,KAAK,eAAewE,QAAQ,wBAClChF,EAAAA,cAAA,QAAMQ,KAAK,eAAewE,QAAQ,qBACjC,C,qECnCP,MAqZaE,EAAY,CACvB1E,KAtZW,cAuZX8C,YArZAtD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,SAAG,OACGA,EAAAA,cAAA,YAAM,eAAkB,6JAoZhCqD,OA7Ya,mDA8YblB,WAAY,CAvYC,CACb3B,KAAM,gBACN8C,YACEtD,EAAAA,cAAA,SAAG,mFAKLuE,WAAY,qMAYZY,OACAnB,KAAM,OACNC,SACEjE,EAAAA,cAAA,SAAG,wFAKL0E,IAAK,2BACLD,KAAM,oBAOO,CACbjE,KAAM,gBACN8C,YACEtD,EAAAA,cAAA,SAAG,mFAKLuE,WAAY,qMAYZY,OACAnB,KAAM,OACNC,SACEjE,EAAAA,cAAA,SAAG,wFAKL0E,IAAK,2BACLD,KAAM,oBAOO,CACbjE,KAAM,SACN8C,YAAatD,EAAAA,cAAA,SAAG,4CAChBuE,WAAY,oNAaZY,OACAnB,KAAM,SACNC,SACEjE,EAAAA,cAAA,SAAG,8EAIL0E,IAAK,0BACLD,KAAM,oBAOO,CACbjE,KAAM,QACN8C,YAAatD,EAAAA,cAAA,SAAG,sBAChBuE,WAAY,qNAaZY,OACAnB,KAAM,SACNC,SACEjE,EAAAA,cAAA,SAAG,mBACeA,EAAAA,cAAA,KAAGoD,KAAK,kBAAiB,oBAAqB,+BAIlEsB,IAAK,0BACLD,KAAM,oBAOO,CACbjE,KAAM,aACN8C,YAAatD,EAAAA,cAAA,SAAG,+CAChBuE,WAAY,uNAaZY,OACAnB,KAAM,SACNC,SACEjE,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAG,kGAIHA,EAAAA,cAAA,SAAG,0EAKP0E,IAAK,0BACLD,KAAM,oBAOO,CACbjE,KAAM,aACN8C,YAAatD,EAAAA,cAAA,SAAG,mCAChBuE,WAAY,uNAaZY,OACAnB,KAAM,SACNC,SACEjE,EAAAA,cAAA,SAAG,6FAKL0E,IAAK,0BACLD,KAAM,oBAOO,CACbjE,KAAM,cACN8C,YAAatD,EAAAA,cAAA,SAAG,mCAChBuE,WAAY,wNAaZY,OACAnB,KAAM,SACNC,SACEjE,EAAAA,cAAA,SAAG,8FAKL0E,IAAK,0BACLD,KAAM,oBAOO,CACbjE,KAAM,QACN8C,YAAatD,EAAAA,cAAA,SAAG,2CAChBuE,WAAY,2SAgBZY,OACAnB,KAAM,SACNC,SACEjE,EAAAA,cAAA,SACEA,EAAAA,cAAA,KAAGoD,KAAK,eAAc,cAAc,iCAA+B,IACnEpD,EAAAA,cAAA,YAAM,KAAS,IAAAA,EAAAA,cAAA,YAAM,QAAU,KAACA,EAAAA,cAAA,YAAM,KAAS,KAACA,EAAAA,cAAA,YAAM,KAAS,IAAC,IAChEA,EAAAA,cAAA,YAAM,KAAS,KAACA,EAAAA,cAAA,YAAM,KAAS,KAACA,EAAAA,cAAA,YAAM,KAAS,KAACA,EAAAA,cAAA,YAAM,KAAS,IAAC,IAChEA,EAAAA,cAAA,YAAM,KAAS,KAACA,EAAAA,cAAA,YAAM,KAAQ,8BAGlC0E,IAAK,0BACLD,KAAM,oBAOO,CACbjE,KAAM,iBACN8C,YAAatD,EAAAA,cAAA,SAAG,wDAChBuE,WAAY,gWAqBZY,OACAnB,KAAM,SACNC,SACEjE,EAAAA,cAAA,SAAG,mHAEqCA,EAAAA,cAAA,YAAM,oBAAwB,uCAIxE0E,IAAK,0BACLD,KAAM,oBAOQ,CACdjE,KAAM,QACN8C,YAAatD,EAAAA,cAAA,SAAG,wBAChBuE,WAAY,mQAeZY,OACAnB,KAAM,SACNC,SACEjE,EAAAA,cAAA,SAAG,qGAKL0E,IAAK,0BACLD,KAAM,oBAOQ,CACdjE,KAAM,SACN8C,YAAatD,EAAAA,cAAA,SAAG,gDAChBuE,WAAY,6YAwBZY,OACAnB,KAAM,OACNC,SACEjE,EAAAA,cAAA,SAAG,aACSA,EAAAA,cAAA,YAAM,QAAY,oHAIhC0E,IAAK,2BACLD,KAAM,qB,oRC7YR,MAAMW,EAAO,KAAe,EACtBC,EAA4B,cAAiB,EACjDC,WACA9E,OACAC,YACA8E,UACAvB,OACAwB,WACA5C,QACA6C,WACAxC,KACAyC,cACGC,GACFC,KACDN,GAAW,QAAmBA,EAAU,cACpB,UAAM,WAAW,CACnCO,SAAU,EAAc,SAAK,QAAS,CACpCpF,UAAW6E,EACX9E,KAAMA,EACNwD,KAAMA,EACNpB,MAAOA,EACPgD,IAAKF,EACLI,aAAc,MACdP,UAAWA,EACXE,WAAYA,EACZD,SAAUA,GAAYJ,EACtBnC,GAAIA,KACW,SAAKP,EAAA,EAAQ,IACzBiD,EACHC,IAAKA,EACLnF,UAAW,IAAWA,EAAWgF,GAAY,YAC7CzB,UAAM+B,EACNC,UAAMD,EACNE,GAAI,QACJC,QAASjD,UAIfoC,EAAac,YAAc,eAC3B,Q,iDCtBA,MAAMC,EACJ,sdAEIC,EAAY,6JAYZC,EAAY,ySAcZC,EAAiB,kZAoBjBC,EAAW,CACf,mBACA,mBACA,UACA,gBACA,YACA,MACA,eACA,kBACA,SACA,kBACA,gBACA,qBACA,eACA,oBACA,iBACA,iBACA,gBACA,gBACA,gBACA,iBACA,eACA,UACA,wBAGWC,EAAOA,IAClBzG,EAAAA,cAAC2E,EAAAA,EAAG,CACFC,MAAM,aACNC,eAAe,8EAIJ,SAAS6B,IACtB,MAAO7E,EAAmBC,GAAwB9B,EAAAA,SAAewG,EAAS,IAElDA,EAASjE,KAAI,CAACC,EAAMC,IAC1CzC,EAAAA,cAACqF,EAAY,CACXrB,KAAK,QACL2C,QAAQ,EACRhE,IAAKF,EACLhC,UAAW,iBACXmG,QAAQ,YACR/D,KAAK,KACLD,MAAOJ,EACP+C,QAAS1D,IAAsBW,EAC/BgD,SAAWqB,GAAM/E,EAAqB+E,EAAEC,cAAclE,QAErDJ,KAIL,OACExC,EAAAA,cAAC+G,EAAAA,EAAM,CAACC,cAAY,GAClBhH,EAAAA,cAACiH,EAAAA,EAAmB,CAClBrC,MAAM,aACNtB,YAAa8C,EACbc,UAAU,eAGZlH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,SAAQ,iBACfjD,EAAAA,cAAC+D,EAAAA,EAAG,CAACtD,UAAU,sBACbT,EAAAA,cAACgB,EAAAA,EAAG,CAACE,GAAI,GACPlB,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,cAAiB,kHAEPA,EAAAA,cAAA,YAAM,WAAc,sCAGtCA,EAAAA,cAAA,SAAG,6DAC0D,IAC3DA,EAAAA,cAAA,YAAM,mCAAsC,yDACbA,EAAAA,cAAA,YAAM,OAAU,aAGnDA,EAAAA,cAACgB,EAAAA,EAAG,CAACE,GAAI,GACPlB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAI,yBACRpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAQ,uBACRC,QAAQ,yEAKhBE,EAAAA,cAACqE,EAAAA,EAAS,KAAEgC,IAGdrG,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,WACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,oBAGhBrH,EAAAA,cAAA,SAAG,+CAC2CA,EAAAA,cAAA,YAAM,cAAkB,IAAI,mHAI1EA,EAAAA,cAAA,SAAG,MACeA,EAAAA,cAAA,SAAG,cAAc,6CACxB,IACTA,EAAAA,cAAA,KAAGoD,KAAK,kFAAiF,4BAErF,6EAINpD,EAAAA,cAAA,OAAK+C,MAAO,CAAEuE,SAAU,QAASC,OAAQ,SAAUC,QAAS,KAC1DxH,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,4BACTC,QACE,uHAINE,EAAAA,cAAA,KAAGoD,KAAK,iCACNpD,EAAAA,cAAC0C,EAAAA,EAAM,CAACG,KAAK,MAAK,oBAItB7C,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,QACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,qBAGhBrH,EAAAA,cAAA,SAAG,8DAC2D,IAC5DA,EAAAA,cAAA,YAAM,cAAiB,YAASA,EAAAA,cAAA,YAAM,uBAA0B,KAElEA,EAAAA,cAAA,SAAG,MACEA,EAAAA,cAAA,YAAM,eAEXA,EAAAA,cAAA,SAAG,mGAE0BA,EAAAA,cAAA,YAAM,cAAiB,6BACtCA,EAAAA,cAAA,YAAM,eAAkB,4BAEtCA,EAAAA,cAACqE,EAAAA,EAAS,KAAEiC,GAEZtG,EAAAA,cAAA,WACAA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,MACEA,EAAAA,cAAA,YAAM,wBAEXA,EAAAA,cAAA,SAAG,6DAC0D,IAC3DA,EAAAA,cAAA,YAAM,UAAa,2BAAwBA,EAAAA,cAAA,YAAM,QAAW,qBAClDA,EAAAA,cAAA,YAAM,aAAgB,4FAGlCA,EAAAA,cAACqE,EAAAA,EAAS,KAAEkC,GAEZvG,EAAAA,cAAA,WACAA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,8DAEDA,EAAAA,cAAA,YAAM,aAAgB,WAAQA,EAAAA,cAAA,YAAM,kBAAqB,gEACL,IACpDA,EAAAA,cAAA,KAAGoD,KAAK,+DAA8D,0BAEjE,IAAI,yEAKbpD,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,SACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,sBAGhBrH,EAAAA,cAAA,SAAG,sDACkDA,EAAAA,cAAA,SAAG,aAAc,IAAI,kLAK1EA,EAAAA,cAAA,SAAG,OACGA,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,gCAA+B,aAAgB,0CAC9BpB,EAAAA,cAAA,YAAM,cAAiB,yIAIvDA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oBACRC,QAAQ,8CACRiB,OAAO,iCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oBACRC,QAAQ,8CACRiB,OAAO,iCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oBACRC,QAAQ,6CACRiB,OAAO,iCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,+BACRC,QAAQ,2CACRiB,OAAO,mCAGXf,EAAAA,cAAA,SACEA,EAAAA,cAAA,WAAM,+EAEDA,EAAAA,cAAA,SAAG,UAAW,wBAAoBA,EAAAA,cAAA,YAAM,kBAAsB,IAAI,uFAIzEA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,uCACRC,QAAQ,qDACRiB,OAAO,oCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,2CACRC,QAAQ,oDACRiB,OAAO,4CAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,sCACRC,QAAQ,wDACRiB,OAAO,2CAKbf,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,cACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,cAGhBrH,EAAAA,cAAA,SAAG,uOAMHA,EAAAA,cAAA,SAAG,2DACwD,IACzDA,EAAAA,cAAA,SAAG,wBAAwB,SAAMA,EAAAA,cAAA,YAAM,cAAiB,MAAI,IAC5DA,EAAAA,cAAA,YAAM,eAAkB,mEAG1BA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gBACRC,QAAQ,oCACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gBACRC,QAAQ,oCACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gBACRC,QAAQ,gBACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gBACRC,QAAQ,sCACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gBACRC,QAAQ,4BACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,+BACRC,QAAQ,2CACRiB,OAAO,kCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,0BACRC,QAAQ,4CACRiB,OAAO,6BAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,sCACRC,QAAQ,iDACRiB,OAAO,0CAGXf,EAAAA,cAAA,SACEA,EAAAA,cAAA,WAAM,uDAC+C,IACrDA,EAAAA,cAAA,SAAG,aAAkB,gCACrBA,EAAAA,cAAA,SAAG,0BAA0B,uFACaA,EAAAA,cAAA,SAAG,cAAc,2BAG7DA,EAAAA,cAAA,SAAG,2BACuBA,EAAAA,cAAA,YAAM,kBAAqB,yDACdA,EAAAA,cAAA,SAAG,yBAAyB,2CAGnEA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,uCACRC,QAAQ,qDACRiB,OAAO,oCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,2CACRC,QAAQ,qCACRiB,OAAO,4CAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,2CACRC,QAAQ,sCACRiB,OAAO,6CAGXf,EAAAA,cAAA,SACEA,EAAAA,cAAA,WAAM,sCAAoC,IAC1CA,EAAAA,cAAA,KAAGoD,KAAK,+BAA8B,aAAa,uFAE9CpD,EAAAA,cAAA,SAAG,mBAAmB,gCAE7BA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,6BACRC,QAAQ,gDACRiB,OAAO,gCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oCACRC,QAAQ,8CACRiB,OAAO,qCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oCACRC,QAAQ,iDACRiB,OAAO,uCAKbf,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,SACLjD,EAAAA,cAACyH,EAAAA,GAAS,MAAG,UAGfzH,EAAAA,cAAA,SAAG,kDAC+C,IAChDA,EAAAA,cAAA,YAAM,cAAiB,OACvBA,EAAAA,cAAA,YAAM,qBAAwB,wCAAsC,IACpEA,EAAAA,cAAA,KAAGoD,KAAK,cAAa,aAAa,qBAAmB,IACrDpD,EAAAA,cAAA,SAAG,mBAAmB,YAExBA,EAAAA,cAAA,SAAG,iDAC8C,IAC/CA,EAAAA,cAAA,SAAG,sBAAsB,mDACpBA,EAAAA,cAAA,KAAGoD,KAAK,cAAa,aAAa,KAEzCpD,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gBACRC,QAAQ,6BACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,2BACRC,QAAQ,qCACRiB,OAAO,eAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,2BACRC,QAAQ,kCACRiB,OAAO,eAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,+CACRC,QAAQ,4CACRiB,OAAO,gDAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oCACRC,QAAQ,iDACRiB,OAAO,qCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oCACRC,QAAQ,iDACRiB,OAAO,uCAIbf,EAAAA,cAAA,OAAKS,UAAU,eACbT,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAC0B,EAAAA,EAAmB,CAACE,WAAYsD,EAAAA,OAKvClF,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAAA,OAAKS,UAAU,cAAcwC,GAAG,WAC9BjD,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,eAAc,iBACrBjD,EAAAA,cAAA,SAAG,8EAEeA,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,iBAAgB,sBAA0B,IAAI,yFAIzEpB,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,iBACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,yBACTC,QAAS,wCAIfE,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,iBACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,yCACTC,QAAS,8CAIfE,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,iBACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,yCACTC,QAAS,+CAKjBE,EAAAA,cAAA,aAIJA,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,UACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,oBAGhBrH,EAAAA,cAAA,SACEA,EAAAA,cAAA,KAAGoD,KAAK,kBAAiB,UAAU,wBAAsB,IACzDpD,EAAAA,cAAA,SAAG,0BAA0B,uBAAqB,IAClDA,EAAAA,cAAA,KAAGoD,KAAK,yBAAwB,2BAA2B,uBAG7DpD,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,+BACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,6BACTC,QAAS,6CAIfE,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,2CACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,yCACTC,QAAS,kDAIfE,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,oCACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,oCACTC,QAAS,0CAIfE,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,uCACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,qCACTC,QAAS,iDAIfE,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,mDACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,gCACTC,QAAS,2CAIfE,EAAAA,cAACgB,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACflB,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,oCACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,yCACTC,QAAS,2CAKjBE,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,kBACPpB,EAAAA,cAAC0C,EAAAA,EAAM,CAACG,KAAK,MAAK,4BAEpB7C,EAAAA,cAAA,WACAA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,WACOA,EAAAA,cAAA,KAAGoD,KAAK,yBAAwB,wBAAwB,yDACb,IACnDpD,EAAAA,cAAA,KAAGoD,KAAK,+BAA8B,cAAc,eAAa,IACjEpD,EAAAA,cAAA,SAAG,4BAA4B,KAGjCA,EAAAA,cAAA,KAAGoD,KAAK,yBACNpD,EAAAA,cAAA,OACE0H,IAAKC,EAAAA,EACL9G,IAAI,4BACJkC,MAAO,CAAEuE,SAAU,QAAS1D,MAAO,WAGvC5D,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,yBACPpB,EAAAA,cAAC0C,EAAAA,EAAM,CAACG,KAAK,MAAK,uBAItB7C,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,QACLjD,EAAAA,cAAC4H,EAAAA,GAAO,MAAG,gBAGb5H,EAAAA,cAAA,SAAG,sHAE6CA,EAAAA,cAAA,SAAG,gBAAgB,wCAChCA,EAAAA,cAAA,KAAGoD,KAAK,YAAW,WAAY,IAAI,2BAC5CpD,EAAAA,cAAA,SAAG,8BAA8B,qCAG3DA,EAAAA,cAAA,SAAG,kDAC+C,IAChDA,EAAAA,cAAA,KAAGoD,KAAK,YAAW,WAAW,uEAGhCpD,EAAAA,cAAA,OAAK+C,MAAO,CAAEuE,SAAU,QAASC,OAAQ,SAAUC,QAAS,KAC1DxH,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,+BACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,6BACTC,QAAS,+CAMjBE,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,UACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,uBACMrH,EAAAA,cAAA,YAAM,cAAiB,UAE7CA,EAAAA,cAAA,SAAG,8HAEwD,IACzDA,EAAAA,cAAA,YAAM,qBAAwB,iDAGhCA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,uBACRC,QAAQ,oDACRiB,OAAO,kCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,uBACRC,QAAQ,yCACRiB,OAAO,kCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,+BACRC,QAAQ,2CACRiB,OAAO,oCAKbf,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,WACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,gCAGhBrH,EAAAA,cAAA,SAAG,kIAEwD,IACzDA,EAAAA,cAAA,YAAM,aAAgB,gBAAaA,EAAAA,cAAA,YAAM,cAAiB,iEAG5DA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,0BACRC,QAAQ,6CACRiB,OAAO,+CAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,0BACRC,QAAQ,wCACRiB,OAAO,kCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,0BACRC,QAAQ,gCACRiB,OAAO,mCAGXf,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAEFA,EAAAA,cAAA,SAAG,yEACsE,IACvEA,EAAAA,cAAA,YAAM,eAAkB,cAE1BA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,mCACRC,QAAQ,qDACRiB,OAAO,uCAGXf,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAEFA,EAAAA,cAAA,SAAG,4BACwBA,EAAAA,cAAA,SAAG,UAAU,mHAErBA,EAAAA,cAAA,YAAM,gBAAmB,iDAG5CA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gCACRC,QAAQ,kCACRiB,OAAO,iCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gCACRC,QAAQ,iCACRiB,OAAO,iCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,gCACRC,QAAQ,uCACRiB,OAAO,mCAKbf,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,SACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,0BAGhBrH,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,cAAiB,uEACE,IACzBA,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,gCAA+B,aAAgB,wDACjBpB,EAAAA,cAAA,YAAM,mBAAsB,wBAGrEA,EAAAA,cAAA,OAAK+C,MAAO,CAAEuE,SAAU,QAASC,OAAQ,SAAUC,QAAS,KAC1DxH,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,gCACPpB,EAAAA,cAACL,EAAAA,EAAU,CACTE,QAAS,uCACTC,QAAS,wDAMjBE,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,QACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,oBAGhBrH,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,cAAiB,6EACGA,EAAAA,cAAA,YAAM,iBAAqB,IAAC,IACtDA,EAAAA,cAAA,YAAM,YAAe,QAAKA,EAAAA,cAAA,YAAM,aAAgB,kBAAgB,IAChEA,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,wCAAuC,aAAgB,kDAGlEpB,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,mBACRC,QAAQ,2CACRiB,OAAO,yCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,mBACRC,QAAQ,qCACRiB,OAAO,yCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,mBACRC,QAAQ,8CACRiB,OAAO,yCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oCACRC,QAAQ,yFACRiB,OAAO,uCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,0CACRC,QAAQ,kDACRiB,OAAO,6CAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,sCACRC,QAAQ,iDACRiB,OAAO,2CAKbf,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,UACLjD,EAAAA,cAACqH,EAAAA,GAAU,MAAG,0BAGhBrH,EAAAA,cAAA,SAAG,iSAOHA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,iCACRC,QAAQ,2CACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,iCACRC,QAAQ,gFACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,iCACRC,QAAQ,wCACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,iCACRC,QAAQ,4CACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,iCACRC,QAAQ,4CACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,iCACRC,QAAQ,yDACRiB,OAAO,mCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,8CACRC,QAAQ,8FACRiB,OAAO,iDAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,+CACRC,QAAQ,oDACRiB,OAAO,gDAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,+CACRC,QAAQ,oCACRiB,OAAO,gDAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,+CACRC,QAAQ,uCACRiB,OAAO,gDAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,+CACRC,QAAQ,oCACRiB,OAAO,gDAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,oCACRC,QAAQ,mDACRiB,OAAO,kCAKbf,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,WAAU,sBACjBjD,EAAAA,cAAA,SACEA,EAAAA,cAAA,SAAG,uBAAuB,sIAEPA,EAAAA,cAAA,SAAG,mBAAmB,eAE3CA,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,sCACRC,QAAQ,sBACRiB,OAAO,uCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,sCACRC,QAAQ,yBACRiB,OAAO,uCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,sCACRC,QAAQ,wBACRiB,OAAO,uCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,sCACRC,QAAQ,sBACRiB,OAAO,yCAKbf,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAA,MAAIiD,GAAG,UAAS,uCAChBjD,EAAAA,cAAA,SAAG,mCAC+BA,EAAAA,cAAA,SAAG,yBAAyB,uHAI9DA,EAAAA,cAAA,SAAG,sBACmB,IACpBA,EAAAA,cAACmB,EAAAA,KAAI,CAACiC,KAAK,4BAA2B,qBAAyB,IAAI,uCAC/BpD,EAAAA,cAAA,YAAM,OAAU,OAAK,IACzDA,EAAAA,cAAA,YAAM,MAAS,oBAAkB,IACjCA,EAAAA,cAACmB,EAAAA,KAAI,CAACiC,KAAK,uCAAsC,mBAEzC,IAAI,+DAGdpD,EAAAA,cAAC+D,EAAAA,EAAG,KACF/D,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,0BACRC,QAAQ,4CACRiB,OAAO,6BAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,4CACRC,QAAQ,wDACRiB,OAAO,wCAETf,EAAAA,cAACc,EAAAA,EAAmB,CAClBjB,QAAQ,wCACRC,QAAQ,8CACRiB,OAAO,8CAKbf,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAAA,OAAKS,UAAU,cAAcwC,GAAG,WAC9BjD,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAC6H,EAAAA,EAAkB,CAACC,YAAY,gBAIpC9H,EAAAA,cAACoH,EAAAA,EAAO,MAERpH,EAAAA,cAACmH,EAAAA,EAAS,KACRnH,EAAAA,cAAC+H,EAAAA,EAAO,OAGV/H,EAAAA,cAACoH,EAAAA,EAAO,MAGd,C,uBCx9BA,IAAe,IAA0B,wD","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/FunctionExploration.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/functions/drawarrow.js","webpack://the-python-graph-gallery/./node_modules/react-bootstrap/esm/ToggleButton.js","webpack://the-python-graph-gallery/./src/pages/matplotlib.js","webpack://the-python-graph-gallery/./static/asset/pypalettes.gif"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","import { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport ChartImage from './ChartImage';\n\nimport './functionExploration.css';\nimport CodeChunk from './CodeChunk';\n\nconst capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport default function FunctionExploration({ funDetails }) {\n  const [selectedParameter, setSelectedParameter] = useState(0);\n  const [selectedOpt, setSelectedOpt] = useState(0);\n\n  if (!funDetails) {\n    return null;\n  }\n\n  const selectedParameterInfo = funDetails.parameters[selectedParameter];\n  const selectedOptInfo = selectedParameterInfo.options?.[selectedOpt];\n\n  const argumentButtons = (\n    <div>\n      {funDetails.parameters.map((item, i) => (\n        <Button\n          key={i}\n          value={item.name}\n          size=\"sm\"\n          onClick={() => setSelectedParameter(i)}\n          className={selectedParameter === i ? 'isButtonSelected' : ''}\n        >\n          {item.name}\n        </Button>\n      ))}\n    </div>\n  );\n\n  return (\n    <div style={{ marginBottom: 70 }}>\n      <h2 id={capitalize(funDetails.name + '()' + ' details')}>\n        &#128270; <code>{funDetails.name}</code> function parameters\n        <a\n          style={{ marginLeft: '15px', fontSize: '14px' }}\n          href={funDetails.docUrl}\n        >\n          &rarr; see full doc\n        </a>\n      </h2>\n\n      <h3>&rarr; Description</h3>\n      <p>{funDetails.description}</p>\n\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'start',\n          alignItems: 'baseline',\n          gap: 14,\n        }}\n      >\n        <h3 style={{ width: 'auto', flexWrap: 'nowrap', whiteSpace: 'nowrap' }}>\n          &rarr; Arguments\n        </h3>\n        {argumentButtons}\n      </div>\n\n      <Row>\n        <Col md={8}>\n          <div style={{ fontSize: 16 }}>\n            <p className=\"argumentSectionTitle\">Description</p>\n            <p className=\"little-text\">{selectedParameterInfo.description}</p>\n\n            <p className=\"argumentSectionTitle\">\n              Possible values &rarr; {'  '}\n              <span className=\"parameterTypePill\">\n                {selectedParameterInfo.type}\n              </span>\n            </p>\n            <p className=\"little-text\">{selectedParameterInfo.howToUse}</p>\n            {selectedParameterInfo.options && (\n              <>\n                <div\n                  style={{ display: 'flex', gap: 2, alignItems: 'baseline' }}\n                >\n                  {selectedParameterInfo.options.map((opt, i) => {\n                    return (\n                      <Button\n                        size=\"sm\"\n                        className={i === selectedOpt ? 'isButtonSelected' : ''}\n                        onClick={() => setSelectedOpt(i)}\n                      >\n                        {opt.name}\n                      </Button>\n                    );\n                  })}\n                </div>\n                <p>{selectedParameterInfo.options[selectedOpt].explanation}</p>\n              </>\n            )}\n\n            <p className=\"argumentSectionTitle\">Code Example</p>\n            <div style={{ backgroundColor: 'white' }}>\n              <CodeChunk hasWhiteBackground>\n                {selectedParameterInfo.options\n                  ? selectedParameterInfo.basicUsage.replace(\n                      'paramgoeshere',\n                      selectedParameterInfo.options[selectedOpt].name\n                    )\n                  : selectedParameterInfo.basicUsage}\n              </CodeChunk>\n            </div>\n          </div>\n        </Col>\n\n        <Col md={4}>\n          <br />\n          <Link to={'/' + selectedParameterInfo.post}>\n            <ChartImage\n              imgName={selectedOptInfo?.img || selectedParameterInfo.img}\n              caption={'More about the ' + funDetails.name + ' function.'}\n            />\n          </Link>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta property=\"og:title\" content={title} />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\n\nconst name = 'fig_arrow()';\nconst description = (\n  <>\n    <p>\n      The <code>fig_arrow()</code> function of drawarrow add an arrow on a given\n      matplotlib figure. You can customize any of its properties such as its\n      color, head/tail width, opacity...\n    </p>\n  </>\n);\n\nconst docUrl = 'https://github.com/JosephBARBIERDARNAL/drawarrow';\n\n//\n//\n//\n//\n//\nconst param1 = {\n  name: 'tail_position',\n  description: (\n    <p>\n      Array-like of length 2 specifying the tail position of the arrow on the\n      figure.\n    </p>\n  ),\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'list',\n  howToUse: (\n    <p>\n      The first value is the x-axis position, and the second value is the y-axis\n      position.\n    </p>\n  ),\n  img: 'introduction-drawarrow-1',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param2 = {\n  name: 'head_position',\n  description: (\n    <p>\n      Array-like of length 2 specifying the head position of the arrow on the\n      figure.\n    </p>\n  ),\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'list',\n  howToUse: (\n    <p>\n      The first value is the x-axis position, and the second value is the y-axis\n      position.\n    </p>\n  ),\n  img: 'introduction-drawarrow-1',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param3 = {\n  name: 'radius',\n  description: <p>Curvature of the arrow (default to 0.1).</p>,\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  radius=0.5,\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'number',\n  howToUse: (\n    <p>\n      It can be any value, but in most cases you want it to be between -1 and 1.\n    </p>\n  ),\n  img: 'tuto-drawarrow-1-square',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param4 = {\n  name: 'color',\n  description: <p>Color of the arrow</p>,\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  color='red',\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'string',\n  howToUse: (\n    <p>\n      This can be any <a href=\"/python-colors\">matplotlib color</a>, hexadecimal\n      or rgb color.\n    </p>\n  ),\n  img: 'tuto-drawarrow-2-square',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param5 = {\n  name: 'tail_width',\n  description: <p>Specify the width of the tail of the arrow.</p>,\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  tail_width=15,\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'number',\n  howToUse: (\n    <div>\n      <p>\n        An arrow has 2 main parts: the head and the tail. Everything that is not\n        the head is the tail.\n      </p>\n      <p>\n        In most cases, you want the width of the tail to be between 1 and 50.\n      </p>\n    </div>\n  ),\n  img: 'tuto-drawarrow-4-square',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param6 = {\n  name: 'head_width',\n  description: <p>Width of the head of the arrow.</p>,\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  head_width=50,\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'number',\n  howToUse: (\n    <p>\n      Specify a value generally between 1 and 50 to modify the width of the head\n      of your arrow.\n    </p>\n  ),\n  img: 'tuto-drawarrow-5-square',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param7 = {\n  name: 'head_length',\n  description: <p>Length of the head of the arrow</p>,\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  head_length=50,\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'number',\n  howToUse: (\n    <p>\n      The length of the head of the arrow is generally between 1 and 50. The\n      default value is 8.\n    </p>\n  ),\n  img: 'tuto-drawarrow-6-square',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param8 = {\n  name: 'hatch',\n  description: <p>Symbol of the pattern to fill the arrow</p>,\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(dpi=150, figsize=(10,10))\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  hatch='*',\n  mutation_scale=20,\n  edgecolor='red',\n  facecolor='black',\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'string',\n  howToUse: (\n    <p>\n      <a href=\"/matplotlib\">Matplotlib</a> offers a variety of patterns:{' '}\n      <code>/</code>,<code>\\\\</code>, <code>|</code>, <code>-</code>,{' '}\n      <code>+</code>, <code>x</code>, <code>o</code>, <code>O</code>,{' '}\n      <code>.</code>, <code>*</code> that you can choose from.\n    </p>\n  ),\n  img: 'tuto-drawarrow-7-square',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param9 = {\n  name: 'mutation_scale',\n  description: <p>Value used to scale the entire arrow (head and body)</p>,\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(dpi=150, figsize=(10,10))\n\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  mutation_scale=2,\n  fig=fig\n)\n\nfig_arrow(\n  tail_position=[0.2, 0.3],\n  head_position=[0.6, 0.8],\n  mutation_scale=10,\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'number',\n  howToUse: (\n    <p>\n      This argument makes easier to change the size of the arrow by multiplying\n      all style properties by its value. If <code>mutation_scale=4</code>, the\n      arrow will be 4 times larger.\n    </p>\n  ),\n  img: 'tuto-drawarrow-8-square',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param10 = {\n  name: 'alpha',\n  description: <p>Opacity of the arrow</p>,\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(dpi=150, figsize=(10,10))\n\nfig_arrow(\n  tail_position=[0.2, 0.3],\n  head_position=[0.6, 0.8],\n  mutation_scale=10,\n  alpha=0.5,\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'number',\n  howToUse: (\n    <p>\n      This argument must be between 0 (completely transparent) and 1 (perfectly\n      opaque, default value).\n    </p>\n  ),\n  img: 'tuto-drawarrow-9-square',\n  post: 'drawarrow#Custom',\n};\n//\n//\n//\n//\n//\nconst param11 = {\n  name: 'invert',\n  description: <p>Whether to invert the curvature of the arrow</p>,\n  basicUsage: `\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots(dpi=150, figsize=(10,10))\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  mutation_scale=3,\n  radius=0.4,\n  fig=fig\n)\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  mutation_scale=3,\n  radius=0.4,\n  invert=True,\n  fig=fig\n)\n\nplt.show()\n`.trim(),\n  type: 'bool',\n  howToUse: (\n    <p>\n      If set to <code>True</code>, the curvature of the arrow will be inverted.\n      Another way of doing so is to set the radius to a negative value.\n    </p>\n  ),\n  img: 'tuto-drawarrow-10-square',\n  post: 'drawarrow#Custom',\n};\n\nexport const fig_arrow = {\n  name,\n  description,\n  docUrl,\n  parameters: [\n    param1,\n    param2,\n    param3,\n    param4,\n    param5,\n    param6,\n    param7,\n    param8,\n    param9,\n    param10,\n    param11,\n  ],\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Button from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst noop = () => undefined;\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  name,\n  className,\n  checked,\n  type,\n  onChange,\n  value,\n  disabled,\n  id,\n  inputRef,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: bsPrefix,\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange || noop,\n      id: id\n    }), /*#__PURE__*/_jsx(Button, {\n      ...props,\n      ref: ref,\n      className: classNames(className, disabled && 'disabled'),\n      type: undefined,\n      role: undefined,\n      as: \"label\",\n      htmlFor: id\n    })]\n  });\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport FunctionExploration from '../components/FunctionExploration';\nimport { fig_arrow } from '../functions/drawarrow';\nimport pypalettesGIF from '../../static/asset/pypalettes.gif';\nimport {\n  Matplotlib,\n  DrawArrow,\n  PyFonts,\n} from '../components/MiscellaneousLogos';\nimport { Col, ToggleButton } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { Button } from 'react-bootstrap';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  \"<p><code>Matplotlib</code> is the most famous library for data visualization with <code>python</code>. It allows to create literally every type of chart with a great level of customization. This page provides some general tips that can be applied on any kind of chart made with <code>matplotlib</code> like customizing titles or colors. If you're looking at creating a specific chart type, visit <a href='https://python-graph-gallery.com'>the gallery</a> instead.</p>\";\n\nconst quickCode = `# Library\nimport matplotlib.pyplot as plt\n\n# Create data\nx = [1, 2, 3, 4, 5]\ny = [1, 4, 6, 8, 4]\n\n# Area plot\nplt.fill_between(x, y)\nplt.show()\n`;\n\nconst pyplotAPI = `# import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Create a data frame\ndf = pd.DataFrame ({'Group':  ['A', 'B', 'C', 'D', 'E'], 'Value': [1,5,4,3,9]})\n\n# Create horizontal bars\nplt.barh(y=df.Group, width=df.Value);\n\n# Add title\nplt.title('A simple barplot');\n`;\n\nconst objOrientedAPI = `# import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Create a data frame\ndf = pd.DataFrame ({'Group':  ['A', 'B', 'C', 'D', 'E'], 'Value': [1,5,4,3,9]})\n\n# Initialize a Figure and an Axes\nfig, ax = plt.subplots()\n\n# Fig size\nfig.set_size_inches(9,9)\n\n# Create horizontal bars\nax.barh(y=df.Group, width=df.Value);\n\n# Add title\nax.set_title('A simple barplot');\n`;\n\nconst allStyle = [\n  'seaborn-darkgrid',\n  'seaborn-notebook',\n  'classic',\n  'seaborn-ticks',\n  'grayscale',\n  'bmh',\n  'seaborn-talk',\n  'dark_background',\n  'ggplot',\n  'fivethirtyeight',\n  '_classic_test',\n  'seaborn-colorblind',\n  'seaborn-deep',\n  'seaborn-whitegrid',\n  'seaborn-bright',\n  'seaborn-poster',\n  'seaborn-muted',\n  'seaborn-paper',\n  'seaborn-white',\n  'seaborn-pastel',\n  'seaborn-dark',\n  'seaborn',\n  'seaborn-dark-palette',\n];\n\nexport const Head = () => (\n  <SEO\n    title=\"Matplotlib\"\n    seoDescription=\"A collection of charts, tips and tricks on the Matplotlib Python library.\"\n  />\n);\n\nexport default function Matplotlibs() {\n  const [selectedParameter, setSelectedParameter] = React.useState(allStyle[0]);\n\n  const allStyleButtons = allStyle.map((item, i) => (\n    <ToggleButton\n      type=\"radio\"\n      active={true}\n      key={i}\n      className={'functionButton'}\n      variant=\"secondary\"\n      size=\"sm\"\n      value={item}\n      checked={selectedParameter === item}\n      onChange={(e) => setSelectedParameter(e.currentTarget.value)}\n    >\n      {item}\n    </ToggleButton>\n  ));\n\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription\n        title=\"Matplotlib\"\n        description={chartDescription}\n        chartType=\"matplotlib\"\n      />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <code>Matplotlib</code> is the most famous python data\n              visualization library. It is widely used and most of other viz\n              libraries (like <code>seaborn</code>) are actually built on top of\n              it.\n            </p>\n            <p>\n              Once installed, matplotlib must be imported, usually using{' '}\n              <code>import matplotlib.pyplot as plt</code>. You can then use use\n              the functions available in the <code>plt</code> object.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/240-basic-area-chart'}>\n              <ChartImage\n                imgName=\"240_basic_area_chart\"\n                caption=\"The most basic area chart one can make with python and matplotlib\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Lexicon\">\n          <Matplotlib />\n          Basic vocabulary\n        </h2>\n        <p>\n          The figure below describes the anatomy of a <code>matplotlib</code>{' '}\n          charts. It names all the main components, names that you need to know\n          to understand the documentation properly.\n        </p>\n        <p>\n          &#9888;&#65039; <u>Disclaimer</u>: this figure comes from the very\n          complete{' '}\n          <a href=\"https://matplotlib.org/stable/users/explain/quick_start.html#parts-of-a-figure\">\n            matplotlib documentation\n          </a>\n          . Have a look at it for a thorough explanation on how this library\n          works.\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <ChartImage\n            imgName={'matplotlib_vocabulary_new'}\n            caption={\n              'Anatomy of a matplotlib chart: all the basic vocabulary you need to know to understand the documentation properly'\n            }\n          />\n        </div>\n        <a href=\"https://matplotlib.org/stable\">\n          <Button size=\"sm\">Matplotlib doc</Button>\n        </a>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"APIs\">\n          <Matplotlib />\n          Two distinct APIs\n        </h2>\n        <p>\n          There are 2 main ways to build a chart with matplotlib: the{' '}\n          <code>pyplot API</code> and the <code>object-oriented API</code>.\n        </p>\n        <p>\n          ➡️ <code>pyplot API</code>\n        </p>\n        <p>\n          Pyplot is a collection of functions, each function applying a change\n          to a figure. For instance, <code>plt.barh()</code> will build a\n          barplot and <code>plt.title()</code> will add a title to it.\n        </p>\n        <CodeChunk>{pyplotAPI}</CodeChunk>\n\n        <br />\n        <br />\n        <p>\n          ➡️ <code>object oriented API</code>\n        </p>\n        <p>\n          The object oriented API usually starts by initializing one{' '}\n          <code>Figure</code> object and one or more <code>Axes</code> object\n          using the <code>subplot()</code> function. Then the methods of those\n          objects will be used to apply changes to the chart.\n        </p>\n        <CodeChunk>{objOrientedAPI}</CodeChunk>\n\n        <br />\n        <br />\n        <p>\n          See how the syntax slightly differs between both options? (\n          <code>plt.title</code> versus <code>ax.set_title()</code>. This is\n          pretty confusing and I advise to have a look to the{' '}\n          <a href=\"https://matplotlib.org/stable/api/index.html#usage-patterns\">\n            official documentation\n          </a>{' '}\n          for a more thorough explanation. In the gallery, both APIs are used.\n        </p>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Title\">\n          <Matplotlib />\n          Customizing titles\n        </h2>\n        <p>\n          The title is a key part of a good chart. It has to <u>summarize</u>{' '}\n          its key message in a few words. Always avoid to simply repeat what is\n          displayed on each axis. Try to provide some more insight allowing to\n          understand the main result instead.\n        </p>\n        <p>\n          The <Link to=\"/190-custom-matplotlib-title\">post #190</Link> goes in\n          depth on how to customize the <code>matplotlib</code>\n          title. All the main types of change are descried: changing its color,\n          adding a subtitle, using math formulas and so on. Give it a go!\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"190_Custom_title6\"\n            caption=\"Python chart with subtitle and custom color\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title7\"\n            caption=\"Add a math formula in title with Matplotlib\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"190_Custom_title5\"\n            caption=\"Control the height of the matplotlib title\"\n            linkTo=\"/190-custom-matplotlib-title\"\n          />\n          <ChartImageContainer\n            imgName=\"534-highly-customized-layout\"\n            caption=\"Subplot, title, and margin customization\"\n            linkTo=\"/534-highly-customized-layout\"\n          />\n        </Row>\n        <p>\n          <br />\n          An effective method in data visualization involves utilizing the title\n          as a <b>legend</b>, facilitated by the <code>highlight_text</code>{' '}\n          package. The subsequent two posts provide an introductory overview of\n          this package:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"how-to-custom-annotations-matplotlib\"\n            caption=\"How to customize color and style of the annotation\"\n            linkTo=\"/how-to-custom-title-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"advanced-custom-annotations-matplotlib-3\"\n            caption=\"Create one annotation for both title and subtitle\"\n            linkTo=\"/advanced-custom-annotations-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"589-how-to-change-coordinate-system\"\n            caption=\"How to change the coordinate system of the annotation\"\n            linkTo=\"/589-how-to-change-coordinate-system\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Annotation\">\n          <Matplotlib />\n          Annotation\n        </h2>\n        <p>\n          Annotation is a key part of a great visualization. It transforms a\n          simple chart in a whole piece of story telling. Before you share your\n          graph with anyone, make sure the key insight are highlighted with\n          labels, shapes or color.\n        </p>\n        <p>\n          All those kind of annotation are built thanks to various{' '}\n          <b>matplotlib functions</b> like <code>annotate()</code> or{' '}\n          <code>add_patch()</code>. The blogposts showcased below should get you\n          started with it.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"193_annotate2\"\n            caption=\"Add a square to highlight an area\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate3\"\n            caption=\"Add a circle to highlight an area\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate4\"\n            caption=\"Add a segment\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate5\"\n            caption=\"Add vertical and horizontal ablines\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"193_annotate6\"\n            caption=\"Annotate with an equation\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"534-highly-customized-layout\"\n            caption=\"Subplot, title, and margin customization\"\n            linkTo=\"/534-highly-customized-layout\"\n          />\n          <ChartImageContainer\n            imgName=\"513-add-logo-matplotlib\"\n            caption=\"How to add an img into a matplotlib chart\"\n            linkTo=\"/513-add-logo-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"589-how-to-change-coordinate-system\"\n            caption=\"How to change the coordinate system of a chart\"\n            linkTo=\"/589-how-to-change-coordinate-system\"\n          />\n        </Row>\n        <p>\n          <br />\n          The main problem with matplotlib annotations is that{' '}\n          <b>you can&apos;t</b> have different font styles (\n          <i>color, weight, size...</i>) inside a same annotation. And this is a\n          big issue because highlighting text has a <b>major role</b> in data\n          visualization.\n        </p>\n        <p>\n          Fortunately for us, the <code>highlight_text</code> package exists!\n          And it makes the process of creating <b>beautiful annotations</b> much\n          easier. Check the examples below:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"how-to-custom-annotations-matplotlib\"\n            caption=\"How to customize color and style of the annotation\"\n            linkTo=\"/how-to-custom-title-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"advanced-custom-annotations-matplotlib-1\"\n            caption=\"Add a background to the annotation\"\n            linkTo=\"/advanced-custom-annotations-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"advanced-custom-annotations-matplotlib-2\"\n            caption=\"Add a path effect to the annotation\"\n            linkTo=\"/advanced-custom-annotations-matplotlib\"\n          />\n        </Row>\n        <p>\n          <br />A similar tool to highlight_text is{' '}\n          <a href=\"/594-introduction-flexitext\">flexitext</a>. The core\n          difference relies on the syntax used, where flexitext has something\n          more <b>similar to HTML</b> compared to highlight_text.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"594-introduction-flexitext\"\n            caption=\"Introduction to string styling with flexitext\"\n            linkTo=\"/594-introduction-flexitext\"\n          />\n          <ChartImageContainer\n            imgName=\"595-advanced-flexitext-features-1\"\n            caption=\"Dynamically change text size with flexitext\"\n            linkTo=\"/595-advanced-flexitext-features\"\n          />\n          <ChartImageContainer\n            imgName=\"595-advanced-flexitext-features-2\"\n            caption=\"Dynamically change text opacity with flexitext\"\n            linkTo=\"/595-advanced-flexitext-features\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Arrow\">\n          <DrawArrow />\n          Arrows\n        </h2>\n        <p>\n          Matplotlib offers built-in arrow functions like{' '}\n          <code>annotate()</code> and\n          <code>FancyArrowPatch()</code>. For full customization, though, the{' '}\n          <a href=\"/drawarrow\">drawarrow</a> library is a more{' '}\n          <b>straightforward</b> option.\n        </p>\n        <p>\n          The following posts will guide you in creating{' '}\n          <b>any arrow you need</b> using both Matplotlib functions and those\n          from <a href=\"/drawarrow\">drawarrow</a>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"193_annotate1\"\n            caption=\"Add a label with a segment\"\n            linkTo=\"/193-annotate-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"introduction-drawarrow-1\"\n            caption=\"use DrawArrow to make arrow easily\"\n            linkTo=\"/drawarrow\"\n          />\n          <ChartImageContainer\n            imgName=\"introduction-drawarrow-3\"\n            caption=\"customize arrows with DrawArrow\"\n            linkTo=\"/drawarrow\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-create-and-custom-arrows-matplotlib-1\"\n            caption=\"How to create an arrow with an annotation\"\n            linkTo=\"/how-to-create-and-custom-arrows-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"591-arrows-with-inflexion-point-1\"\n            caption=\"How to create an arrow with an inflexion point\"\n            linkTo=\"/591-arrows-with-inflexion-point\"\n          />\n          <ChartImageContainer\n            imgName=\"591-arrows-with-inflexion-point-2\"\n            caption=\"Arrow with an inflexion in a real life example\"\n            linkTo=\"/591-arrows-with-inflexion-point\"\n          />\n        </Row>\n      </Container>\n      <div className=\"greySection\">\n        <Container>\n          <Container>\n            <FunctionExploration funDetails={fig_arrow} />\n          </Container>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <h2 id=\"Cheatsheets\">✨ Cheatsheets</h2>\n          <p>\n            It's pretty hard to remember all the matplotlib associated\n            vocabulary. The <Link to=\"/cheat-sheets\">cheatsheet section</Link>{' '}\n            is here to help, with a few sheets that you'll probably want to use\n            on a daily basis.\n          </p>\n          <Row>\n            <Col xs={12} md={4}>\n              <Link to=\"/cheat-sheets\">\n                <ChartImage\n                  imgName={'matplotlib_cheat_sheet'}\n                  caption={'Matplotlib cheatsheet by Datacamp'}\n                />\n              </Link>\n            </Col>\n            <Col xs={12} md={4}>\n              <Link to=\"/cheat-sheets\">\n                <ChartImage\n                  imgName={'matplotlib-python-official-cheatsheet1'}\n                  caption={'Official Matplotlib cheatsheet (page 1)'}\n                />\n              </Link>\n            </Col>\n            <Col xs={12} md={4}>\n              <Link to=\"/cheat-sheets\">\n                <ChartImage\n                  imgName={'matplotlib-python-official-cheatsheet2'}\n                  caption={'Official Matplotlib cheatsheet (page 2)'}\n                />\n              </Link>\n            </Col>\n          </Row>\n          <br />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Colors\">\n          <Matplotlib />\n          Customize colors\n        </h2>\n        <p>\n          <a href=\"/python-colors\">Colors</a> are probably one the{' '}\n          <b>most important aspects</b> of your charts. But{' '}\n          <a href=\"/color-palette-finder\">finding the right color</a> can be\n          quite hard.\n        </p>\n        <Row>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-map-with-custom-legend\">\n              <ChartImage\n                imgName={'web-map-with-custom-legend'}\n                caption={'Choropleth map with continuous palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-stacked-area-with-inflexion-arrows\">\n              <ChartImage\n                imgName={'web-stacked-area-with-inflexion-arrows'}\n                caption={'Stacked area chart with categorical palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/591-arrows-with-inflexion-point\">\n              <ChartImage\n                imgName={'591-arrows-with-inflexion-point-2'}\n                caption={'Bubble map with categorical palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-stacked-line-chart-with-labels\">\n              <ChartImage\n                imgName={'web-stacked-line-chart-with-labels'}\n                caption={'Stacked area chart with continuous palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/532-customizing-circular-barplot-in-matplotlib\">\n              <ChartImage\n                imgName={'532-episode1-each-line-anakin'}\n                caption={'Circular barplot with custom palette'}\n              />\n            </Link>\n          </Col>\n          <Col xs={12} md={4}>\n            <Link to=\"/web-streamchart-with-matplotlib\">\n              <ChartImage\n                imgName={'web-streamchart-with-matplotlib-square'}\n                caption={'Bubble map with categorical palette'}\n              />\n            </Link>\n          </Col>\n        </Row>\n        <Link to=\"/python-colors\">\n          <Button size=\"md\">Learn more about colors</Button>\n        </Link>\n        <br />\n        <br />\n        <p>\n          Use the <a href=\"/color-palette-finder\">color palette finder</a> to\n          select the right chart colors. It's powered by the{' '}\n          <a href=\"/introduction-to-pypalettes\">PyPalettes</a> library for{' '}\n          <b>easy color customization</b>.\n        </p>\n\n        <a href=\"/color-palette-finder\">\n          <img\n            src={pypalettesGIF}\n            alt=\"Color palette finder demo\"\n            style={{ maxWidth: '900px', width: '100%' }}\n          />\n        </a>\n        <Link to=\"/color-palette-finder\">\n          <Button size=\"md\">Discover palettes</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Font\">\n          <PyFonts />\n          Custom fonts\n        </h2>\n        <p>\n          Using custom fonts adds a nice touch to your graph and make it shine\n          among all the other plots using defaults. The <b>simplest way</b> to\n          customize your fonts is with the <a href=\"/pyfonts\">PyFonts</a>{' '}\n          library, which lets you <b>load any font from the web</b> with just a\n          single line of code!\n        </p>\n        <p>\n          The blog post below will walk you through using{' '}\n          <a href=\"/pyfonts\">PyFonts</a> or installing and applying a local font\n          with matplotlib functions.\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/custom-fonts-in-matplotlib\">\n            <ChartImage\n              imgName={'custom-fonts-in-matplotlib'}\n              caption={'How to use custom fonts with matplotlib'}\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Margin\">\n          <Matplotlib />\n          Add margin around a <code>matplotlib</code> chart\n        </h2>\n        <p>\n          It is a common struggle to deal with the margins around the chart.\n          Fortunately this is pretty straightforward thanks to the{' '}\n          <code>subplots_adjust()</code> function as explained in the examples\n          below.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"192_increase_margin2\"\n            caption=\"Increase the bottom margin of a matplotlib chart.\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n          <ChartImageContainer\n            imgName=\"192_increase_margin4\"\n            caption=\"Increase the top margin to fit a title\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n          <ChartImageContainer\n            imgName=\"534-highly-customized-layout\"\n            caption=\"Subplot, title, and margin customization\"\n            linkTo=\"/534-highly-customized-layout\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Subplot\">\n          <Matplotlib />\n          Split the figure in subplots\n        </h2>\n        <p>\n          It can be really useful to split your graphic window in several parts,\n          in order to display several charts in the same time. The{' '}\n          <code>subplot()</code> function of <code>matplotlib</code> allows to\n          do it quickly with a great level of customization.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"194_matplotlib_subplot4\"\n            caption=\"Split the figure in 4 charts of same size.\"\n            linkTo=\"/194-split-the-graphic-window-with-subplot\"\n          />\n          <ChartImageContainer\n            imgName=\"194_matplotlib_subplot6\"\n            caption=\"Split the figure with a custom layout\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n          <ChartImageContainer\n            imgName=\"194_matplotlib_subplot9\"\n            caption=\"Manage chart size on subplots\"\n            linkTo=\"/192-about-matplotlib-margins\"\n          />\n        </Row>\n        <p>\n          <br />\n        </p>\n        <p>\n          Additional note: how to remove some unused entries in a grid using the{' '}\n          <code>ax.remove()</code> function:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"how-to-remove-axis-in-matplotlib\"\n            caption=\"How to remove some unused entries in a chart grid.\"\n            linkTo=\"/how-to-remove-axis-in-matplotlib\"\n          />\n        </Row>\n        <p>\n          <br />\n        </p>\n        <p>\n          Adding a secondary graph <b>within</b> the main graph area can be a\n          powerful technique to add context to you figure. This is totally\n          doable using the <code>inset_axes()</code> function as suggested in\n          the examples below:\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"how-to-add-plot-inside-plot-1\"\n            caption=\"Add an axis inside another axis\"\n            linkTo=\"/how-to-add-plot-inside-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-add-plot-inside-plot-2\"\n            caption=\"Add a plot inside another plot\"\n            linkTo=\"/how-to-add-plot-inside-plot\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-add-plot-inside-plot-3\"\n            caption=\"Customize the axis of the inner plot\"\n            linkTo=\"/how-to-add-plot-inside-plot\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Theme\">\n          <Matplotlib />\n          Available style sheets\n        </h2>\n        <p>\n          <code>Matplotlib</code> comes with a set of 26 pre-built themes to\n          style your chart easily.{' '}\n          <Link to=\"/199-matplotlib-style-sheets\">This post</Link> is dedicated\n          to this feature, explaining how to use <code>plt.style.use()</code> to\n          pick a theme up.\n        </p>\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: 30 }}>\n          <Link to=\"/199-matplotlib-style-sheets\">\n            <ChartImage\n              imgName={'199-matplotlib-style-sheets-538-full'}\n              caption={'Customize a matplotlib chart with a preset theme'}\n            />\n          </Link>\n        </div>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Axis\">\n          <Matplotlib />\n          Customizing axis\n        </h2>\n        <p>\n          <code>Matplotlib</code> allows every kind of axis configuration. It is\n          mainly done thanks to the <code>tick_params()</code>,{' '}\n          <code>xticks()</code> and <code>xlabels()</code> functions. The{' '}\n          <Link to=\"/191-custom-axis-on-matplotlib-chart\">post #191</Link> will\n          guide you through all the possibilities.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"191_Custom_axis1\"\n            caption=\"Change the axis title and its appearance\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis2\"\n            caption=\"Control axis labels and ticks look\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"191_Custom_axis6\"\n            caption=\"Control axis limit with the xlim() function\"\n            linkTo=\"/191-custom-axis-on-matplotlib-chart\"\n          />\n          <ChartImageContainer\n            imgName=\"basic-time-series-with-matplotlib\"\n            caption=\"How to deal with the date format. How to represent those dates properly on the X axis.\"\n            linkTo=\"/basic-time-series-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"scatterplot-and-log-scale-in-matplotlib\"\n            caption=\"How to use a log scale for the X or the Y axis.\"\n            linkTo=\"/scatterplot-and-log-scale-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"589-how-to-change-coordinate-system\"\n            caption=\"How to change the coordinate system of a chart\"\n            linkTo=\"/589-how-to-change-coordinate-system\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Legend\">\n          <Matplotlib />\n          Customizing the legend\n        </h2>\n        <p>\n          If you have several colors or marker on your chart, you can't escape\n          the hassle of building a nice legend. The blogpost linked below should\n          help for all the most common use cases like positioning the legend,\n          adding and customizing a title to it, controling markers and labels\n          and more.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib1\"\n            caption=\"How to add the default matplotlib legend\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib2\"\n            caption=\"Legend location, learn how to add it anywhere including outside the plot area\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib3\"\n            caption=\"Customize the legend label appearance\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib4\"\n            caption=\"Add and customize the title of the legend\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib5\"\n            caption=\"Customize the marker of each element item\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"custom-legend-with-matplotlib6\"\n            caption=\"Add a background, stroke and more legend customization\"\n            linkTo=\"/custom-legend-with-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"how-to-use-rectangles-in-matplotlib-legends\"\n            caption=\"How to customize the legend handle to have a different shape that the one used on the chart\"\n            linkTo=\"/how-to-use-rectangles-in-matplotlib-legends\"\n          />\n          <ChartImageContainer\n            imgName=\"585-legend-for-categorical-data-matplotlib-1\"\n            caption=\"Learn how to use the default legend in matplotlib\"\n            linkTo=\"/585-legend-for-categorical-data-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"585-legend-for-categorical-data-matplotlib-2\"\n            caption=\"Map color text to colors in chart\"\n            linkTo=\"/585-legend-for-categorical-data-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"585-legend-for-categorical-data-matplotlib-3\"\n            caption=\"Put directly the legend on each line\"\n            linkTo=\"/585-legend-for-categorical-data-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"585-legend-for-categorical-data-matplotlib-4\"\n            caption=\"Use arrows to point to the legend\"\n            linkTo=\"/585-legend-for-categorical-data-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"web-map-with-custom-legend-square\"\n            caption=\"Advanced use case with a custom legend for a map\"\n            linkTo=\"/web-map-with-custom-legend\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Pattern\">Patterns in charts</h2>\n        <p>\n          <b>Hatchs and patterns</b> are a great way to enhance the readability\n          of your chart. The post below will guide you through the process of\n          adding patterns to <b>different types</b> of charts.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-1\"\n            caption=\"Patterns in barplot\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-2\"\n            caption=\"Patterns in area chart\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-3\"\n            caption=\"Patterns in histogram\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-4\"\n            caption=\"Patterns in boxplot\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Images\">Insert images in a matplotlib graph</h2>\n        <p>\n          It can be very useful to insert <b>one or several images</b> in a\n          matplotlib graph. It can be used for the graph caption or even inside\n          the chart area to provide more context.\n        </p>\n        <p>\n          Please find below a{' '}\n          <Link href=\"/513-add-logo-matplotlib\">complete tutorial</Link>{' '}\n          explaining how to proceed using the <code>PIL</code> and{' '}\n          <code>io</code> libraries, and a{' '}\n          <Link href=\"/web-stacked-line-chart-with-labels\">\n            real life usage\n          </Link>{' '}\n          of this technique to produce a beautiful & polished figure.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"513-add-logo-matplotlib\"\n            caption=\"How to add an img into a matplotlib chart\"\n            linkTo=\"/513-add-logo-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"web-stacked-line-chart-with-labels-square\"\n            caption=\"A clean stacked area chart with images in the caption\"\n            linkTo=\"/web-stacked-line-chart-with-labels\"\n          />\n          <ChartImageContainer\n            imgName=\"web-scatterplot-with-images-in-circle\"\n            caption=\"Use an image inside each scatterplot circle\"\n            linkTo=\"/web-scatterplot-with-images-in-circles\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"evolution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","export default __webpack_public_path__ + \"static/pypalettes-30c04e6e9cc4378a11aa4ded22376216.gif\";"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","capitalize","s","charAt","toUpperCase","slice","FunctionExploration","_selectedParameterInf","funDetails","selectedParameter","setSelectedParameter","useState","selectedOpt","setSelectedOpt","selectedParameterInfo","parameters","selectedOptInfo","options","argumentButtons","map","item","i","Button","key","value","size","onClick","style","marginBottom","id","marginLeft","fontSize","href","docUrl","description","display","flexDirection","justifyContent","alignItems","gap","width","flexWrap","whiteSpace","Row","type","howToUse","opt","explanation","backgroundColor","CodeChunk","hasWhiteBackground","basicUsage","replace","post","img","SEO","title","seoDescription","keywords","lang","content","property","fig_arrow","trim","noop","ToggleButton","bsPrefix","checked","onChange","disabled","inputRef","props","ref","children","autoComplete","undefined","role","as","htmlFor","displayName","chartDescription","quickCode","pyplotAPI","objOrientedAPI","allStyle","Head","Matplotlibs","active","variant","e","currentTarget","Layout","isTocEnabled","TitleAndDescription","chartType","Container","Spacing","Matplotlib","maxWidth","margin","padding","DrawArrow","src","pypalettesGIF","PyFonts","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}