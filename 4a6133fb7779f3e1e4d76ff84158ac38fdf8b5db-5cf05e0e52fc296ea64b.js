"use strict";(self.webpackChunkthe_python_graph_gallery=self.webpackChunkthe_python_graph_gallery||[]).push([[7110],{1985:function(e,t,n){n.d(t,{l:function(){return b}});var a=n(6540),r=n(7041);const o=a.createElement(a.Fragment,null,a.createElement("p",null,"The ",a.createElement("code",null,"fig_arrow()")," function of drawarrow ",a.createElement("b",null,"add an arrow")," on a given matplotlib figure. All the arguments described here also work with the ",a.createElement("code",null,"ax_arrow()")," function.")),l={name:"tail_position",description:a.createElement("p",null,"Array-like of length 2 specifying the tail position of the arrow on the figure."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8]\n)\n\nplt.show()\n".trim(),type:"list",howToUse:a.createElement("p",null,"The first value is the x-axis position, and the second value is the y-axis position."),img:"introduction-drawarrow-arg0-square",post:"drawarrow#Custom"},i={name:"head_position",description:a.createElement("p",null,"Array-like of length 2 specifying the head position of the arrow on the figure."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"list",howToUse:a.createElement("p",null,"The first value is the x-axis position, and the second value is the y-axis position."),img:"introduction-drawarrow-arg0-square",post:"drawarrow#Custom"},s={name:"radius",description:a.createElement("p",null,"Curvature of the arrow (default to 0.1)."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  radius=0.5\n)\n\nplt.show()\n".trim(),type:"number",howToUse:a.createElement("p",null,"It can be any value, but in most cases you want it to be between -1 and 1."),img:"introduction-drawarrow-arg2-square",post:"drawarrow#Custom"},p={name:"color",description:a.createElement("p",null,"Color of the arrow"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  color='red'\n)\n\nplt.show()\n".trim(),type:"string",howToUse:a.createElement("div",null,r.Wz),img:"introduction-drawarrow-arg3-square",post:"drawarrow#Custom"},c={name:"edgecolor",description:a.createElement("p",null,"Arrow edge color"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  edgecolor='red'\n)\n\nplt.show()\n".trim(),type:"string",howToUse:a.createElement("div",null,r.Wz),img:"introduction-drawarrow-arg14-square",post:"drawarrow#Custom"},m={name:"facecolor",description:a.createElement("p",null,"Arrow head color"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  facecolor='red'\n)\n\nplt.show()\n".trim(),type:"string",howToUse:a.createElement("div",null,r.Wz),img:"introduction-drawarrow-arg15-square",post:"drawarrow#Custom"},u={name:"width",description:a.createElement("p",null,"Specify the width of the arrow."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  width=3\n)\n\nplt.show()\n".trim(),type:"number",howToUse:a.createElement("div",null,a.createElement("p",null,"In most cases, you want the width of the tail to be between 1 and 10.")),img:"introduction-drawarrow-arg4-square",post:"drawarrow#Custom"},d={name:"head_width",description:a.createElement("p",null,"Width of the head of the arrow."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  head_width=40\n)\n\nplt.show()\n".trim(),type:"number",howToUse:a.createElement("p",null,"Specify a value generally between 1 and 50 to modify the width of the head of your arrow."),img:"introduction-drawarrow-arg5-square",post:"drawarrow#Custom"},h={name:"head_length",description:a.createElement("p",null,"Length of the head of the arrow"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  head_length=50\n)\n\nplt.show()\n".trim(),type:"number",howToUse:a.createElement("p",null,"The length of the head of the arrow is generally between 1 and 50. The default value is 8."),img:"introduction-drawarrow-arg6-square",post:"drawarrow#Custom"},w={name:"mutation_scale",description:a.createElement("p",null,"Value used to scale the entire arrow (head and body)"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\n\nfig_arrow(\n  tail_position=[0.3, 0.3],\n  head_position=[0.8, 0.8],\n  mutation_scale=4\n)\n\nfig_arrow(\n  tail_position=[0.2, 0.3],\n  head_position=[0.6, 0.8],\n  mutation_scale=10\n)\n\nplt.show()\n".trim(),type:"number",howToUse:a.createElement("p",null,"This argument makes easier to change the size of the arrow by multiplying all style properties by its value. If ",a.createElement("code",null,"mutation_scale=4"),", the arrow will be 4 times larger."),img:"introduction-drawarrow-arg7-square",post:"drawarrow#Custom"},f={name:"alpha",description:a.createElement("p",null,"Opacity of the arrow"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\n\nfig_arrow(\n  tail_position=[0.2, 0.3],\n  head_position=[0.6, 0.8],\n  alpha=0.5,\n  color='black'\n)\n\nplt.show()\n".trim(),type:"number",howToUse:a.createElement("div",null,r.D$),img:"introduction-drawarrow-arg8-square",post:"drawarrow#Custom"},g={name:"invert",description:a.createElement("p",null,"Whether to invert the curvature of the arrow"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  radius=0.4,\n  fig=fig\n)\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  radius=0.4,\n  invert=True,\n  fig=fig\n)\n\nplt.show()\n".trim(),type:"bool",howToUse:a.createElement("p",null,"If set to ",a.createElement("code",null,"True"),", the curvature of the arrow will be inverted. Another way of doing so is to set the radius to a negative value."),img:"introduction-drawarrow-arg9-square",post:"drawarrow#Custom"},E={name:"fill_head",description:a.createElement("p",null,"Whether or not to fill the arrowhead"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  fill_head=False\n)\n\nplt.show()\n".trim(),type:"bool",howToUse:a.createElement("p",null,"If set to ",a.createElement("code",null,"True")," (default), the head of the arrow will be filled, empty otherwise."),img:"introduction-drawarrow-arg10-square",post:"drawarrow#Custom"},y={name:"double_headed",description:a.createElement("p",null,"Whether or not to fill the arrowhead"),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  double_headed=True\n)\n\nplt.show()\n".trim(),type:"bool",howToUse:a.createElement("p",null,"If set to ",a.createElement("code",null,"True")," (default to ",a.createElement("code",null,"False"),"), the arrow will have a head at both the start and the end."),img:"introduction-drawarrow-arg11-square",post:"drawarrow#Custom"},b={name:"fig_arrow()",description:o,docUrl:"https://github.com/JosephBARBIERDARNAL/drawarrow",parameters:[l,i,{name:"inflection_position",description:a.createElement("p",null,"Array-like of length 2 specifying the position of the inflection point of the arrow on the figure."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  inflection_position=[0.5, 0.7]\n)\n\nplt.show()\n".trim(),type:"list",howToUse:a.createElement("p",null,"Facultative parameter. The first value is the x-axis position, and the second value is the y-axis position."),img:"introduction-drawarrow-arg12-square",post:"drawarrow#Custom"},s,p,c,m,E,y,u,d,h,w,f,g,{name:"shadow_style",description:a.createElement("p",null,"Dictionary of parameters for styling the arrow shadow."),basicUsage:"\nimport matplotlib.pyplot as plt\nfrom drawarrow import fig_arrow\n\nfig, ax = plt.subplots()\n\nfig_arrow(\n  tail_position=[0.4, 0.3],\n  head_position=[0.8, 0.8],\n  shadow_style={\n    'shadow_color': 'black',\n    'offset': (4,-4),\n    'alpha': 0.5\n  }\n)\n\nplt.show()\n".trim(),type:"dict",howToUse:a.createElement("p",null,"If provided, a ",a.createElement("b",null,"shadow")," will be displayed below the arrow. It accepts the following parameters: ",a.createElement("code",null,"offset"),", ",a.createElement("code",null,"shadow_color")," ","and ",a.createElement("code",null,"alpha")," "),img:"introduction-drawarrow-arg13-square",post:"drawarrow#Custom"}]}},2816:function(e,t,n){n.d(t,{k:function(){return r}});var a=n(6540);const r=e=>{let{title:t,seoDescription:n,keywords:r,image:o}=e;return a.createElement(a.Fragment,null,a.createElement("title",null,t),a.createElement("html",{lang:"en"}),a.createElement("meta",{name:"description",content:n||"How to build a chart with Python"}),a.createElement("meta",{name:"author",content:"Yan Holtz"}),a.createElement("meta",{name:"keywords",content:r||"python, chart, graph, code, viz, dataviz"}),a.createElement("meta",{property:"og:site_name",content:"The Python Graph Gallery"}),a.createElement("meta",{property:"og:title",content:t}),a.createElement("meta",{property:"og:image",content:o||"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true"}),a.createElement("meta",{property:"og:description",content:n}),a.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),a.createElement("meta",{name:"twitter:site",content:"@R_Graph_Gallery"}))}},3572:function(e,t,n){n.d(t,{A:function(){return i}});var a=n(6540),r=n(4794),o=n(2532);const l=["animated_chart","animated_gapminder.gif","animated_volcano.gif"];function i(e){let{imgName:t,caption:n}=e;if(l.includes(t))return a.createElement("p",null,"TODO");const i=(0,r.useStaticQuery)("2757772085").allFile.edges.find((e=>e.node.name.includes(t)));return i?a.createElement(a.Fragment,null,a.createElement("div",{className:"chartImageContainer"},a.createElement(o.G,{image:i.node.childImageSharp.gatsbyImageData,alt:n,className:"chartImageImg"}),n&&a.createElement("div",{className:"chartImageOverlay"},a.createElement("div",{className:"chartImageOverlayText"},a.createElement("p",null,n))))):null}},7041:function(e,t,n){n.d(t,{D$:function(){return r},DS:function(){return m},Dg:function(){return c},JE:function(){return w},Pq:function(){return s},Wf:function(){return E},Wz:function(){return o},XH:function(){return p},Z8:function(){return u},_d:function(){return h},_h:function(){return g},az:function(){return d},nM:function(){return f},pE:function(){return i},xZ:function(){return l}});var a=n(6540);const r=a.createElement("p",null,"Values range from ",a.createElement("code",null,"0")," (completely transparent) to ",a.createElement("code",null,"1")," ","(completely opaque)."),o=a.createElement("p",null,"Can be a color name, a Hex code, or an RGB value."," ",a.createElement("a",{href:"/python-colors"},"Learn more about colors.")),l=a.createElement("p",null,"Controls the drawing order of plot elements."),i=a.createElement("p",null,"Higher zorder values are drawn on top of lower values. This is useful when you want certain elements to appear above others."),s=a.createElement("p",null,"It must be in one of: ",a.createElement("code",null,"'/'"),", ",a.createElement("code",null,"'\\'"),", ",a.createElement("code",null,"'|'"),",",a.createElement("code",null,"'-'"),","," ",a.createElement("code",null,"'+'"),", ",a.createElement("code",null,"'x'"),","," ",a.createElement("code",null,"'o'"),", ",a.createElement("code",null,"'O'"),",",a.createElement("code",null,"'.'"),", ",a.createElement("code",null,"'*'")),p=a.createElement("p",null,"Specify the dataset column to use for color encoding in the chart. It allows for grouping and differentiating data points."),c=a.createElement("p",null,"Column name to use for color encoding in the chart. It's usually a categorical variable."),m=a.createElement("div",null,a.createElement("p",null,"It just has to be a ",a.createElement("code",null,"pandas.DataFrame")," (columns are variables),",a.createElement("code",null,"numpy.ndarray")," (rows/columns are variables), or any mapping/sequence (dictionaries/lists)"),a.createElement("p",null,"Supports both long-form (each variable in its own column) and wide-form (variables in separate columns; reshaped internally).")),u=a.createElement("p",null,"Dataframe-like (pandas, numpy, polars...) with the columns we want to plot."),d=a.createElement("p",null,"Determines the style of the line in the plot."),h=a.createElement("p",null,"Common values include '-' (solid), '--' (dashed), ':' (dotted), and '-.' (dash-dot)."),w=a.createElement("p",null,"Sets the width of the plotted line."),f=a.createElement("p",null,"Larger values create thicker lines. The default value is usually"," ",a.createElement("code",null,"1"),"."),g=a.createElement("p",null,"Defines colors for the ",a.createElement("code",null,"hue")," semantic. It can be a list of colors or a matplotlib colormap."),E=a.createElement("div",null,a.createElement("p",null,"This parameter is used ",a.createElement("b",null,"in combination")," with the ",a.createElement("code",null,"hue")," ","parameter and will a assign a different color to each category in"," ",a.createElement("code",null,"hue"),"."),a.createElement("p",null,"Moreover, the ",a.createElement("a",{href:"/introduction-to-pypalettes"},"pypalettes library")," ","can help you find the best colors for your chart by providing access to thousands of pre-made color palette."))},8360:function(e,t,n){n.d(t,{A:function(){return m}});var a=n(4794),r=n(6540),o=n(5615),l=n(4479),i=n(1105),s=n(3572),p=n(5951);const c=e=>"string"!=typeof e?"":e.charAt(0).toUpperCase()+e.slice(1);function m(e){var t;let{funDetails:n}=e;const{0:m,1:u}=(0,r.useState)(0),{0:d,1:h}=(0,r.useState)(0);if(!n)return null;const w=n.parameters[m],f=null===(t=w.options)||void 0===t?void 0:t[d],g=r.createElement("div",null,n.parameters.map(((e,t)=>r.createElement(o.A,{key:t,value:e.name,size:"sm",onClick:()=>u(t),className:m===t?"isButtonSelected":""},e.name))));return r.createElement("div",{style:{marginBottom:70}},r.createElement("h2",{id:c(n.name+" details")},"🔎 ",r.createElement("code",null,n.name)," function parameters",r.createElement("a",{style:{marginLeft:"15px",fontSize:"14px"},href:n.docUrl},"→ see full doc")),r.createElement("h3",null,"→ Description"),r.createElement("p",null,n.description),r.createElement("div",{style:{display:"flex",flexDirection:"row",justifyContent:"start",alignItems:"baseline",gap:14}},r.createElement("h3",{style:{width:"auto",flexWrap:"nowrap",whiteSpace:"nowrap"}},"→ Arguments"),g),r.createElement(l.A,null,r.createElement(i.A,{md:8},r.createElement("div",{style:{fontSize:16}},r.createElement("p",{className:"argumentSectionTitle"},"Description"),r.createElement("p",{className:"little-text"},w.description),r.createElement("p",{className:"argumentSectionTitle"},"Possible values → ","  ",r.createElement("span",{className:"parameterTypePill"},w.type)),r.createElement("p",{className:"little-text"},w.howToUse),w.options&&r.createElement(r.Fragment,null,r.createElement("div",{style:{display:"flex",gap:2,alignItems:"baseline"}},w.options.map(((e,t)=>r.createElement(o.A,{size:"sm",className:t===d?"isButtonSelected":"",onClick:()=>h(t)},e.name)))),r.createElement("p",null,w.options[d].explanation)),r.createElement("p",{className:"argumentSectionTitle"},"Code Example"),r.createElement("div",{style:{backgroundColor:"white"}},r.createElement(p.A,{hasWhiteBackground:!0},w.options?w.basicUsage.replace("paramgoeshere",w.options[d].name):w.basicUsage)))),r.createElement(i.A,{md:4},r.createElement("br",null),r.createElement(a.Link,{to:"/"+w.post},r.createElement(s.A,{imgName:(null==f?void 0:f.img)||w.img,caption:"More about the "+n.name+" function."})))))}}}]);
//# sourceMappingURL=4a6133fb7779f3e1e4d76ff84158ac38fdf8b5db-5cf05e0e52fc296ea64b.js.map