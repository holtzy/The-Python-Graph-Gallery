{"version":3,"file":"component---src-pages-histogram-js-92548879d6dc1261b4b8.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/ChartImage.js","webpack://the-python-graph-gallery/./src/components/ChartImageContainer.js","webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./src/pages/histogram.js"],"sourcesContent":["import './chartImage.css';\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\n\nconst allGifs = [\n  'animated_chart',\n  'animated_gapminder.gif',\n  'animated_volcano.gif',\n];\n\n// This component displays a logo representing a chart type of the gallery. Example: bar chart\n// Logo has a different size depending on the window size.\nexport default function ChartImage({ imgName, caption }) {\n  if (allGifs.includes(imgName)) {\n    return <p>TODO</p>;\n  }\n\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: { relativeDirectory: { eq: \"graph\" } }) {\n        edges {\n          node {\n            id\n            name\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const image = data.allFile.edges.find((n) => {\n    return n.node.name.includes(imgName);\n  });\n\n  if (!image) {\n    return null;\n  }\n\n  // Note: alt tag looks to be ignored?\n  return (\n    <>\n      <div className=\"chartImageContainer\">\n        <GatsbyImage\n          image={image.node.childImageSharp.gatsbyImageData}\n          alt={caption}\n          className=\"chartImageImg\"\n        />\n        {caption && (\n          <div className=\"chartImageOverlay\">\n            <div className=\"chartImageOverlayText\">\n              <p>{caption}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nChartImage.propTypes = {\n  imgName: PropTypes.string,\n  caption: PropTypes.string,\n};\n","import React from \"react\";\nimport ChartImage from \"../components/ChartImage\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"gatsby\";\n\n// This component wraps a chart image into a column and make it responsive + clickable\nexport default function ChartImageContainer({ imgName, caption, linkTo }) {\n  return (\n    <Col xs={12} md={4}>\n      <Link to={linkTo}>\n        <ChartImage imgName={imgName} caption={caption} />\n      </Link>\n    </Col>\n  );\n}\n","// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords, image }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content={\n          image ||\n          'https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true'\n        }\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartImageContainer from '../components/ChartImageContainer';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport {\n  Matplotlib,\n  Pandas,\n  Seaborn,\n  Plotnine,\n} from '../components/MiscellaneousLogos';\nimport { Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport ChartImage from '../components/ChartImage';\nimport Spacing from '../components/Spacing';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription = (\n  <>\n    <p>\n      A <a href=\"https://www.data-to-viz.com/graph/histogram.html\">Histogram</a>{' '}\n      represents the <b>distribution</b> of a numeric variable for one or\n      several groups. The values are split in <b>bins</b>, each bin is\n      represented as a <b>bar</b>.{' '}\n    </p>\n    <p>\n      This page showcases many histograms built with <b>python</b>, using the{' '}\n      most popular libraries like <code>seaborn</code> and{' '}\n      <code>matplotlib</code>.\n    </p>\n    <p>\n      Examples start with <b>very simple</b>, beginner-friendly histograms and\n      progressively increase in complexity. At the end of the page, some{' '}\n      <b>polished & publication-ready</b> histograms are provided, ready to be\n      used in your next project 🔥!\n    </p>\n  </>\n);\n\nconst quickCode = `# library & dataset\nimport seaborn as sns\ndf = sns.load_dataset('iris')\n\n# Plot the histogram thanks to the displot function\nsns.displot( data=df[\"sepal_length\"], kde=True )\n`;\n\nconst quickCodeMatplotlib = `# library & dataset\nimport matplotlib.pyplot as plt\nhours = [17, 20, 22, 25, 26, 27, 30, 31, 32, 38, 40, 40, 45, 55]\n\n# Initialize layout\nfig, ax = plt.subplots(figsize = (9, 9))\n\n#plot\nax.hist(hours, bins=5, edgecolor=\"black\");\n`;\n\nconst quickCodePandas = `# library & dataset\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ntime = [17, 25, 42, 35, 26, 27, 20, 11, 22, 32, 35, 30, 45, 55]\n\n# Convert to a pandas format\ntime = pd.Series(time)\n\n#plot\ntime.hist()\nplt.show\n`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Python Histogram Gallery | Dozens of examples with code\"\n    seoDescription=\"A collection of histogram examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Histogram() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription title=\"Histogram\" description={chartDescription} />\n\n      <Container>\n        <h2 id=\"Quick (Seaborn)\">&#9201; Quick start (Seaborn)</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <code>Seaborn</code> is definitely the best library to quickly\n              build a histogram thanks to its <code>displot()</code>.\n            </p>\n            <p>\n              Note the importance of the <code>bins</code> parameter: try\n              several values to see which represents your data the best. 🔥\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/20-basic-histogram-seaborn'}>\n              <ChartImage\n                imgName=\"20_Basic_Histogram_seaborn2\"\n                caption=\"The most basic histogram one can make with python and seaborn\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Seaborn\">\n          <Seaborn />\n          Histogram charts with <code>Seaborn</code>\n        </h2>\n        <p>\n          <code>Seaborn</code> is a python library allowing to make better\n          charts easily. It is well adapted to build histogram thanks to its{' '}\n          <code>displot</code> function. The following charts will guide you\n          through its usage, going from a very{' '}\n          <Link to=\"\">basic histogram</Link> to something much more{' '}\n          <Link to=\"\">customized</Link>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"20_Basic_Histogram_seaborn1\"\n            caption=\"The most basic histogram with seaborn. It adds a density on top by default\"\n            linkTo=\"/20-basic-histogram-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"20_Basic_Histogram_seaborn2\"\n            caption=\"Play with the bin parameter to control the number of bars\"\n            linkTo=\"/20-basic-histogram-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist1\"\n            caption=\"Remove the density chart on top of the seaborn histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist2\"\n            caption=\"Add rug on top of the histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist3\"\n            caption=\"Customize the rug: color, size and more\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"21_Display_Rug_and_distribution_on_hist4\"\n            caption=\"Customize the appearance of the density chart displayed on top of the histogram\"\n            linkTo=\"/21-control-rug-and-density-on-seaborn-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"23-90degree-rotated-histogram\"\n            caption=\"Flipping the histogram to display it horizontally\"\n            linkTo=\"/23-90degree-rotated-histogram\"\n          />\n          <ChartImageContainer\n            imgName=\"24_Histogram_with_boxplot_on_top\"\n            caption=\"How to split the chart window to display a boxplot on top of the histogram\"\n            linkTo=\"/24-histogram-with-a-boxplot-on-top-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables1\"\n            caption=\"Compare the distribution of several groups on the same chart\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"25_Histogram_of_several_variables2\"\n            caption=\"Use small multiple to compare the distribution of several groups\"\n            linkTo=\"/25-histogram-with-several-variables-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot1\"\n            caption=\"Histogram can be added around a scatterplot to show each variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n          <ChartImageContainer\n            imgName=\"82_seaborn_jointplot6\"\n            caption=\"Histogram can be added around a 2d density chart to show x and y variable distributions\"\n            linkTo=\"/82-marginal-plot-with-seaborn\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Quick (matplotlib)\">\n          <Matplotlib /> Quick start (Matplotlib)\n        </h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <Link to=\"/matplotlib\">Matplotlib</Link> can also build decent\n              histograms easily. It provides a <code>hist()</code> function that\n              accept a vector of numeric values as input.\n            </p>\n            <p>\n              It also provides all the options you can think of to customize the\n              binning and the genreral appearance.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/basic-histogram-in-matplotlib'}>\n              <ChartImage\n                imgName=\"basic-histogram-in-matplotlib\"\n                caption=\"The most basic histogram one can make with python and matplotlib\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCodeMatplotlib}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          Histograms with <code>Matplotlib</code>\n        </h2>\n        <p>\n          As usual <Link to=\"/matplotlib\">matplotlib</Link> is perfectly skilled\n          to build nice histogram, but require some more work camparing to{' '}\n          <Link to=\"/seaborn\">seaborn</Link> to get a good looking figure.\n        </p>\n        <p>\n          The examples below should help you to get started with matplotlib\n          histograms. They go from a very{' '}\n          <Link to=\"/basic-histogram-in-matplotlib\">basic version</Link> and\n          then show how to customize it, like adding{' '}\n          <Link to=\"/basic-histogram-in-matplotlib\">annotation</Link>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"basic-histogram-in-matplotlib\"\n            caption=\"The most basic histogram with matplotlib.\"\n            linkTo=\"/basic-histogram-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"basic-histogram-in-matplotlib2\"\n            caption=\"Reduce chart opacity and add annotation (median represented in vertical line)\"\n            linkTo=\"/basic-histogram-in-matplotlib\"\n          />\n          <ChartImageContainer\n            imgName=\"density-mirror-histogram\"\n            caption=\"Mirror density chart to compare the distribution of 2 variables\"\n            linkTo=\"/density-mirror\"\n          />\n          <ChartImageContainer\n            imgName=\"504-histogram-with-colored-tails\"\n            caption=\"A histogram with bars being colored differently based on thresholds\"\n            linkTo=\"/504-histogram-with-colored-tails\"\n          />\n          <ChartImageContainer\n            imgName=\"506-histogram-with-small-mutliples\"\n            caption=\"Use small multiple to compare the distribution of several groups or several variables\"\n            linkTo=\"/506-histogram-with-small-mutliples\"\n          />\n          <ChartImageContainer\n            imgName=\"534-highly-customized-layout\"\n            caption=\"Subplot, title, and margin customization\"\n            linkTo=\"/534-highly-customized-layout\"\n          />\n          <ChartImageContainer\n            imgName=\"584-introduction-hatch-matplotlib-3\"\n            caption=\"Add patterns to your histogram bars\"\n            linkTo=\"/584-introduction-hatch-matplotlib\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Quick (pandas)\">\n          <Pandas /> Quick start (Pandas)\n        </h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              <Link to=\"/pandas\">Pandas</Link> can build decent histograms\n              easily. It provides different functions like <code>hist()</code>{' '}\n              and <code>plot()</code> that need a pandas dataframe (or series)\n              as input.\n            </p>\n            <p>\n              Since it's based on <Link to=\"/matplotlib\">matplotlib</Link>, it\n              provides all the options you can think of to customize the binning\n              and the genreral appearance.\n            </p>\n          </Col>\n          <Col md={6}>\n            <Link to={'/527-introduction-to-histogram-with-pandas'}>\n              <ChartImage\n                imgName=\"527-introduction-to-histogram-with-pandas\"\n                caption=\"The most basic histogram one can make with python and pandas\"\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCodePandas}</CodeChunk>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Pandas\">\n          <Pandas />\n          Histograms with <code>Pandas</code>\n        </h2>\n        <p>\n          <Link to=\"/pandas\">Pandas</Link> is not the most common Python library\n          to build histograms, but it can be used to build decent ones. It\n          provides different functions like <code>hist()</code> and{' '}\n          <code>plot()</code> from matplotlib.\n        </p>\n        <p>\n          The examples below should help you to get started with\n          <Link to=\"/527-introduction-to-histogram-with-pandas\">\n            {' '}\n            basic pandas histograms\n          </Link>\n          .\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"527-introduction-to-histogram-with-pandas\"\n            caption=\"The most basic histogram with pandas\"\n            linkTo=\"/527-introduction-to-histogram-with-pandas\"\n          />\n          <ChartImageContainer\n            imgName=\"528-customizing-histogram-with-pandas\"\n            caption=\"Customize title, labels and bins of histograms with pandas\"\n            linkTo=\"/528-customizing-histogram-with-pandas\"\n          />\n          <ChartImageContainer\n            imgName=\"529-multi-group-histogram-pandas-1\"\n            caption=\"Show the distribution of 2 groups or variables on a single graph\"\n            linkTo=\"/529-multi-group-histogram-pandas\"\n          />\n          <ChartImageContainer\n            imgName=\"529-multi-group-histogram-pandas-2\"\n            caption=\"Use small multiple to compare the distribution of several groups on the same chart\"\n            linkTo=\"/529-multi-group-histogram-pandas\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Plotnine\">\n          <Plotnine />\n          Histograms with <code>Plotnine</code>\n        </h2>\n        <p>\n          <Link to=\"/plotnine\">Plotnine</Link> allows us to use the{' '}\n          <b>grammar-of-graphics</b> to build histograms. It provides a{' '}\n          <code>geom_histogram()</code> function that can be used to build\n          histograms.\n        </p>\n        <p>\n          The examples below should help you to get started with\n          <b> basic plotnine histograms</b>.\n        </p>\n        <Row>\n          <ChartImageContainer\n            imgName=\"578-introduction-histogram-plotnine-1\"\n            caption=\"Most basic histogram with plotnine\"\n            linkTo=\"/578-introduction-histogram-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"578-introduction-histogram-plotnine-2\"\n            caption=\"Control bar color\"\n            linkTo=\"/578-introduction-histogram-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"578-introduction-histogram-plotnine-3\"\n            caption=\"Custom style with theme, colors and opacity\"\n            linkTo=\"/578-introduction-histogram-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"579-multiple-histograms-plotnine-1\"\n            caption=\"Split histogram by group\"\n            linkTo=\"/579-multiple-histograms-plotnine\"\n          />\n          <ChartImageContainer\n            imgName=\"579-multiple-histograms-plotnine-2\"\n            caption=\"Mirror histogram to compare 2 variables\"\n            linkTo=\"/579-multiple-histograms-plotnine\"\n          />\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Best\">\n          <Matplotlib />\n          Best python histogram examples\n        </h2>\n        <p>\n          The web is full of astonishing charts made by awesome bloggers, (often\n          using <a href=\"https://www.r-graph-gallery.com\">R</a>). The{' '}\n          <a href=\"https://python-graph-gallery.com\">Python graph gallery</a>{' '}\n          tries to display (or translate from R) some of the best creations and\n          explain how their source code works. If you want to display your work\n          here, please drop me a word or even better, submit a{' '}\n          <a href=\"https://github.com/holtzy/The-Python-Graph-Gallery\">\n            Pull Request\n          </a>\n          !\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Link to={'/web-histogram-with-annotations'}>\n              <ChartImage\n                imgName={'web-histogram-with-annotations'}\n                caption={'Nice histogram with custom annotations.'}\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"distribution\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n"],"names":["allGifs","ChartImage","_ref","imgName","caption","includes","React","image","useStaticQuery","allFile","edges","find","n","node","name","className","GatsbyImage","childImageSharp","gatsbyImageData","alt","ChartImageContainer","linkTo","Col","xs","md","Link","to","SEO","title","seoDescription","keywords","lang","content","property","chartDescription","href","quickCode","quickCodeMatplotlib","quickCodePandas","Head","Histogram","Layout","isTocEnabled","TitleAndDescription","description","Container","id","Row","CodeChunk","Spacing","Seaborn","Matplotlib","Pandas","Plotnine","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}